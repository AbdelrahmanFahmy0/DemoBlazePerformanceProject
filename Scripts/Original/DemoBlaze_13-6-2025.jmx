<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">www.demoblaze.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Open Browser" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Browser-2" enabled="true">
              <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:136647,&quot;request_elapsed_ms&quot;:234,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;${scheme}://docs.google.com/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Open Browser" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Browser-3" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/index.html</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/cart.html</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Browser-16" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/css/fonts/Lato-Regular.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/css/latofonts.css</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Browser-20" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/index.html</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Browser-22" enabled="true">
              <stringProp name="HTTPSampler.domain">www.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/oauth2/v4/token</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">77185425430.apps.googleusercontent.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client_secret" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_secret</stringProp>
                    <stringProp name="Argument.value">OTJgUOQcT7lO7GsGZq2G4IlT</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                    <stringProp name="Argument.value">refresh_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="refresh_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">refresh_token</stringProp>
                    <stringProp name="Argument.value">1//0cO8PmDGXIKTQCgYIARAAGAwSNwF-L9Irx22hL2jcLJdjpdE9pmieA4SJWvKsjCGYkCDszO2R1SKTf5JuOJyosA3rRzh62lKAU0M</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://www.googleapis.com/auth/chrome-safe-browsing</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Register" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Browser-23" enabled="true">
              <stringProp name="HTTPSampler.domain">accounts.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;QUIC&quot;,&quot;request_age_ms&quot;:156688,&quot;request_elapsed_ms&quot;:237,&quot;sample_rate&quot;:0.05,&quot;server_ip&quot;:&quot;173.194.76.84:443&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;url&quot;:&quot;${scheme}://accounts.google.com/RotateCookies&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Browser-24" enabled="true">
              <stringProp name="HTTPSampler.domain">hls.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/index.m3u8</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Browser-25" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/entries</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Browser-33" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Browser-35" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/quill/config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-34" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_constants.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Open Browser-36" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-37" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_constants.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-38" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/signup</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-39" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/signup</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;Abdooo&quot;,&quot;password&quot;:&quot;MTIzNDU2&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-40" enabled="true">
              <stringProp name="HTTPSampler.domain">eu-office.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">�Y]l&#x1c;W&#x15;�N&#x1c;��8���$UZ6+7&quot;�3�w~vf,���v�R����T�ֺs�&#x1d;�6�3�Y;N&#x14;Q�O}&#x0;���&#x3;B A�&#x6;��&#x3;��@B&#x11;�Q&#x11;B&lt;VB&#x2;�&#x16;�&#x7;&#x1e;y���ڻ^ǩ��mX?�g���g�9���߫ʰ�^u&#x1c;N��Le~n��*�hyq&gt;�^�I�}o���&#xf;}&apos;Jq7��*+�����?���&gt;9r��;&#x18;�&#x1a;ôl!��ي&#xd;
�C,&#x13;+&amp;��򗁷�7N&#x14;���K��&#x1c;�4[�����,&quot;�xQ&#x5;&#x1b;�&#x15;����B_�&#x1c;&#x19;G�J�����&#x3;%&#xd;�P2�^�tdkDs�H�нa!&#x2;��By��7#�&#x1;6N&#x15;��ɩŌzo&#xc;A&#x19;ʊRV��d\�e�	���ŀ�&#xc;�L�&#xe;�&#x12;Rt&#x8;6N&#x17;��&#x1d;��|�&#x12;s&#x1b;,x00��b92MŐ&#x15;�4�`p�&#xd;6�&quot;&#x4;&gt;pݫ��&#x5;���&#x5fd;���恍b������y)�G�^� ]�%U6d&#x4;�(�ъ�V�&#x13;Ȓ��Д�iuR�ЪH�NTPyb�D�2��&#x7;l�&#x15;*&#x1b;�&#x0;�q(�{I����&#x7;H3����t�O:Px�Pi4�	a+������&amp;&#x18;�)5/���ί7&#x18;&#x4;�����x&#x5;�&#x19;��	C1q�ő�&#x7;u�/�+8&#x18;&#x13;&#x17;X&#x10;&#xd;
��m*&#x0;&#x7;�.g^$�(&#x1c;�&#x18;8طw������������&#x17;_&#x7f;h�R���&#x18;S��扗H���̀��&gt;��G	����]q&#x11;���&#x0;�̘&#x1e;���&#x2;��1&#x12;1:ǂU��=G�W&#x1f;gYvċ9v��%�&#xf;#N2�e���Doc��t���&#xd;
�&#xc;���N&#xd;
&#x18;&#x1;gv�v&#xd;
�I�}�X�!�&#x12;�&#x1e;��rjK��C�&#x1c;�Y��&#x5;�6SO�Z&#x1b;;&#x15;h�5�G�&#x7f;��G�/96�#,O7]7~H]&#x8;&#xe;	�$�9\o��[�&amp;м_\Y&#x1d;&#xc;&apos;�4�D&#x8b;�Q�cX&#x4;�h3.��&#x14;�h�&amp;&#x15;[&#x12;�&#xb;���͔;�s���;�&#x18;8��WY���P��&#x16;&apos;�͈���	��0F&#x19;&#x5;G&#x13;&amp;�&#x3;&#x11;H&#x12;Up�G-�BD�D20D��hH�-&#x1b;Jئ�-B�#B&#xd;(d+�B&#x1;��^H�)�m&apos;dw�+��DT	�Ŧ߂e&#x1d;��&#x12;�\&amp;&#xd;
ö�mU��Bu&#x15;궪�&#x3;&#xc;d����&#xc;MC��)�)�&#x96;�@�22&#xd;�f�ȹXǷ�s;���F&#xe;�����R�4���M���&#x1f;?d�pJ^&#x15;�Llt8V�x�&#x7f;�C	�������g&#x12;Rf��&#xd;
�&#x15;�(�&#x1a;��&gt;&#x8;�o&#x7;&#x8;S��i�/-G!��&#x12;�P/��1��8J&#x1e;����&#x1e;T#�h0�(񿻙�Z{7&#x1a;5ʏ&#xb;����7��9ڥ���H3��i�_��N��d&#x7f;�ƿs�&#x14;��Kf}%���R�irb&#x14;&amp;&#x8;�4��&#x1d;K!��7��;@^&#x1b;�!b/�ТX���b�&#x18;&#x17;�&apos;\�tj�]�3!�&#x4;��&#x1;p����b&#x6;Q�&#x1;���V���O�u&#x19;f�kd	B\���a�6s�?���&quot;��8��W&#x1;:*�-�H��XҘ�K��l��ME3&#x10;f&#x6;�b�����D����K2��6&apos;�Y�?����T�g򴋗Bq�[��&#x7bb;�{��[`0�&#xb;S�ce�&#x10;�(���*i�&#x1;%�FD���&#x1a;�2 bTF���H�aV��q�#g���K�&#x3;F�&#xd;����&#x5;&#x7;?&#x0;�߿_&#x6;�2&amp;Yfu�}Br�&#xe;g&#xc;�ҌcUz�2Z&#x12;W�ޙ�ϥ��&#x15;|����&#x7f;+-��pB�y�/o槡�l	�u9�eAi�(W�)oUP���kY�SiE���(y��{1�6�p&#xe;�.c�]\��Z&#x5;C91.:����4��&#x8;��&#x1c;&#xb;�O��H85���\��]���_{um�b�	��ʍՋ&#xb;+k׃����D��L�n��.��W�F	&#x1c;�7�-��7��&#x17;&#x14;r������&#x19;��W�&#x8;1�&#x1;&#x13;����(&#x1c;&#x2;/�&lt;�&#x19;�F�48����?���s�x&#x19;&#x1c;m!���q�2������&#x1d;�.��D���&#x2;&apos;�&lt;(�q+~�g&#x1e;��棺C�E-[b*&#x15;R3Q�a&quot;҅&#x5;1&amp;��&#xd;�8�T�|6�u&#x1c;���&#x1c;ʣ�K8\�6��v4M��&gt;�4���5&#xd;
%�ҙZ�M&#x7;�&#x10;��~���Շb�U�&#xd;Q&#x1e;�(8�&#x0;��\s�-%Wmjf�&#x2;F2^,y�&#xe;U�^g&#x1;��&#x5;��p7�����O�&#x7f;���+�&#x1e;z�W&#x1f;�k�����ɪ�%�O]���c-�&#x14;���o��$��7������&gt;��&#x1e;��m[m��)�&#x16;�=��ܳ-9&#x5;&#x1e;m&#x1;7�`�)�8;e�&#x14;��v\[��&#x14;�=}�G{�JQ��P�2�N�w&amp;�N&#x15;o�/)��6^�`R��&#x16;��9R&#x6;&#x0;��T�֘N&#x5;�&#x1f;tmI&#x7f;����Zҧڒ&#xe;&lt;FKZ뵤���YlI�f��9��,��uQ��%ƕ�z#Z/&#x6;�&gt;�&quot;|&#x14;&#x1d;�\Z&#x14;��r��&#x16;#�(t��%QK%wYh`�&#xe;���&#x17;)!d�����hNHq�!N�76[�&#x3;)#-�:�&#xf;�&#x10;*&#xd;
&quot;UB�,��ND�d��� Q9&quot;��j=���~��Cm�?�n�ǎ)�u&#x1e;&#x3;�w&#x1e;�l��&lt;z�ǳ�y&lt;��ⱛ�M��&#x2;�n&#x1d;�g��{��/d&#x15;��&#x1b;������*�K8ء&amp;5,�&#x11;Ig�H���$&#x1b;����&amp;#�j&#x19;&#x8;Y��`�Ok���&#x4;��&#xf;�t���j�Z�:�&#x11;��4���x�(&#x1f;��xuw&lt;ڊ&#x7f;��k��5�&#x3;�R��@�N���Y&#x1c;C��֓�V�.Ӫ�@T &quot;��&#x14;&#x19;~����S+&#x1d;��n��dS�I�i8�iR,&#x11;��e�&#x12;����Z)_��U��c����������&#x1d;{S����Q]��&#x0;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Upload-Time" elementType="Header">
                    <stringProp name="Header.name">Upload-Time</stringProp>
                    <stringProp name="Header.value">1749822006748</stringProp>
                  </elementProp>
                  <elementProp name="APIKey" elementType="Header">
                    <stringProp name="Header.name">APIKey</stringProp>
                    <stringProp name="Header.value">faab4ead691e451eb230afc98a28e0f2-4089b390-5e4a-4a54-ac5c-6be4f2ea9321-7247</stringProp>
                  </elementProp>
                  <elementProp name="Content-Encoding" elementType="Header">
                    <stringProp name="Header.name">Content-Encoding</stringProp>
                    <stringProp name="Header.value">deflate</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Expect" elementType="Header">
                    <stringProp name="Header.name">Expect</stringProp>
                    <stringProp name="Header.value">100-continue</stringProp>
                  </elementProp>
                  <elementProp name="AuthMsaDeviceTicket" elementType="Header">
                    <stringProp name="Header.name">AuthMsaDeviceTicket</stringProp>
                    <stringProp name="Header.value">t=GwD2AbuEBAAUT8E2pcttyweiwH80omnEMQMzYo0OZgAAECK7IaWJvfRuM5BR9ekh7zXAAf9hVEhXMmk6qQdM4q6DFekoMngOKyBZKhNVhFbM2BmU0sVtrEL7H7o9Ljl/sSuDUQ7Mh8zoixCegF3RHaOFfXdRRIoiipG6ZDdv1amxqO1lPMu0CVhwHOSYAqEG3W2c9SlXrkAk3TtBwk+46zAbl8DuiSaiGVTDJcm9kS0rJv5d7fROGcrGW5Va8tEziblbCnp+y13oXePPjdFf48NF+3pX0M70psl0xdX8lY3VGFCd4l8t7NoYc9QpytwlrEQKyq8ubE3RQmAuLutCCOj7XTZ1m7CFsVhwWkk1xFteMW9OFJzi0Om9b21WPM1dHDQqKbdIwV9USb1reT4Ptr2GBsGO2uibVbezWmYvGuEcsB5nQpHY1tixzW6q6dfn1O9dguO6lYbmh231P+FXUA08E7ruugKIHqaNIL0Qp2OCyrQ6g+04F46qHPT2Ra+6F0Zr77tmJq32dXDbTNlEOOoqPlaSUBdzv0hOoaKGDF98XhbrYfPLLyft+Vnigwnyhs+WlIKe5GAHkcHddtTv/q+nnFicbTpKuGixgY3DFKhAxP3LOspbT5AsLu7tx78/IKLHiaPjHhxmc2ONLvsvZtCVGF35AQ==&amp;p=</stringProp>
                  </elementProp>
                  <elementProp name="SDK-Version" elementType="Header">
                    <stringProp name="Header.name">SDK-Version</stringProp>
                    <stringProp name="Header.value">EVT-Windows-C++-No-3.7.101.1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                  </elementProp>
                  <elementProp name="Client-Id" elementType="Header">
                    <stringProp name="Header.name">Client-Id</stringProp>
                    <stringProp name="Header.value">NO_AUTH</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Register" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-42" enabled="true">
              <stringProp name="HTTPSampler.domain">content-autofill.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/pages/ChVDaHJvbWUvMTM3LjAuNzE1MS4xMDQSIAmLOdRo7KyeOxIFDTZHxXISBQ0zEFmmIdSrHtlvgCRM</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="alt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">alt</stringProp>
                    <stringProp name="Argument.value">proto</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Encode-Response-If-Executable" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Encode-Response-If-Executable</stringProp>
                    <stringProp name="Header.value">base64</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyA2KlwBX3mkFo30om9LUFYQhpqLoa_BNhE</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CJC2yQEIorbJAQipncoBCLGTywEIkqHLAQiSo8sBCIWgzQEI+uzOAQjh8M4BCK/xzgE=</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Register" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-43" enabled="true">
              <stringProp name="HTTPSampler.domain">www.getmerlin.in</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/arcane/api/v2/user/settings</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,content-type,x-merlin-version,x-request-timestamp</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-44" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/signup</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-46" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/signup</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;Abdooo56664&quot;,&quot;password&quot;:&quot;MTIzNDU2&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-45" enabled="true">
              <stringProp name="HTTPSampler.domain">www.getmerlin.in</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/arcane/api/v2/user/settings</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="x-merlin-version" elementType="Header">
                    <stringProp name="Header.name">x-merlin-version</stringProp>
                    <stringProp name="Header.value">extension-7.4.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImE0YTEwZGVjZTk4MzY2ZDZmNjNlMTY3Mjg2YWU5YjYxMWQyYmFhMjciLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiQWJkZWxyYWhtYW4gTW9oYW1lZCIsInBpY3R1cmUiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQ2c4b2NMNXVNaldOeGMzOHd2cDJnSk1BT2hTaEdfSl96eEtyYVAxNHlmWmFNSktjakpBa1E9czk2LWMiLCJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vZm95ZXItd29yayIsImF1ZCI6ImZveWVyLXdvcmsiLCJhdXRoX3RpbWUiOjE3MzM2NTYyNTEsInVzZXJfaWQiOiIwOVpSM1FLWHZWYTNCUVBPU2xLUmU3Z2hlSXgxIiwic3ViIjoiMDlaUjNRS1h2VmEzQlFQT1NsS1JlN2doZUl4MSIsImlhdCI6MTc0OTgxODY2NywiZXhwIjoxNzQ5ODIyMjY3LCJlbWFpbCI6ImFiZGVscmFobWFubW9oYW1lZGRkMEBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJnb29nbGUuY29tIjpbIjExNTQ5ODgwNTIzODU3ODk1NTU5NiJdLCJlbWFpbCI6WyJhYmRlbHJhaG1hbm1vaGFtZWRkZDBAZ21haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoiZ29vZ2xlLmNvbSJ9fQ.dKsYU7UDedPXMUqVyBfwboRVGU9v6GGUPGywVz4Rbxb_62s_MS3mJT8Bp2V59WfJ91K0EXF3E5HHIJJX3rlSfsio0zGyORUS6XqEMeKqf0K1sDALEzXRXUmsB7cpwu9gL99p3MrrQ-jNVROxuExqKasgFtonwhQlZXSswdsVgaASh7gXyyHAgR6qOAEXdV2UvLIE-x0Pf2UGwj4kpFmY2DVk13tym9xdFkqmGdl9I3F8yIccp7kEaZto9dJ5OOszb6bHnjd1wPEda70giBQePriSr7PKtt7Q-lxy46k9dMHZDLLrECzmxIp_OiZIXsaI6zubIJpUK43Qde27Waegxw</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="x-request-timestamp" elementType="Header">
                    <stringProp name="Header.name">x-request-timestamp</stringProp>
                    <stringProp name="Header.value">2025-06-13T16:39:54.148+03:00[Africa/Cairo]</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-47" enabled="true">
              <stringProp name="HTTPSampler.domain">www.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/oauth2/v4/token</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">77185425430.apps.googleusercontent.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client_secret" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_secret</stringProp>
                    <stringProp name="Argument.value">OTJgUOQcT7lO7GsGZq2G4IlT</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                    <stringProp name="Argument.value">refresh_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="refresh_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">refresh_token</stringProp>
                    <stringProp name="Argument.value">1//0cO8PmDGXIKTQCgYIARAAGAwSNwF-L9Irx22hL2jcLJdjpdE9pmieA4SJWvKsjCGYkCDszO2R1SKTf5JuOJyosA3rRzh62lKAU0M</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://www.googleapis.com/auth/identity.passwords.leak.check</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-48" enabled="true">
              <stringProp name="HTTPSampler.domain">passwordsleakcheck-pa.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/leaks:lookupSingle</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
&#x4;&#x1c;0��&#x10;&#x1a;&#x1a;!&#x2;��[�&#x19;i���&#x18;&#xe;&#x16;q9I&#x1e;��;)�-��i`a�� . &#x5;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="x-goog-ext-174067345-bin" elementType="Header">
                    <stringProp name="Header.name">x-goog-ext-174067345-bin</stringProp>
                    <stringProp name="Header.value">CgIIAg==</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ya29.A0AW4XtxjwdtxqczhM3t5j6CKlMxU8Gt6mQIxLguKjnrdWN7ORZiP9wrgSUJ0lE_ySl5ln_BJMyFUaxZ_3TmC0X3gFLzt18NowN3TeaiQJhSfaiIjnBbDFBq1Zka653049m8KynkCwf_U9XU72SFrEXtSFBFpTiVeGrn18cpRQG9bZj6NxELBOUjjOJX4oGnBdNRoaQbwhgjuEHuTKNRP0MNjUBwuHLstXT7ppSuPke7WHadcpPXs4WZX50cB-xJ27jkcpbJBad16mPMYo8a8m2Vj3ZGsOloiP3lMHlC-LY8oCqwaCgYKAdUSARYSFQHGX2Miw8Wz7-HZQFifgHknyswwrw0309</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-49" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/login</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-50" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/login</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;Abdooo56664&quot;,&quot;password&quot;:&quot;MTIzNDU2&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-51" enabled="true">
              <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;QUIC&quot;,&quot;request_age_ms&quot;:1766103,&quot;request_elapsed_ms&quot;:212,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;${scheme}://beacons.gcp.gvt2.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:false},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTP&quot;,&quot;request_age_ms&quot;:71886,&quot;request_elapsed_ms&quot;:5467,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;${scheme}://beacons.gcp.gvt2.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-52" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/index.html</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/index.html</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-62" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-67" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/css/fonts/Lato-Regular.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/css/latofonts.css</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-71" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/index.html</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-73" enabled="true">
              <stringProp name="HTTPSampler.domain">passwordsleakcheck-pa.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/leaks:lookupSingle</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
&#x4;&#x1c;0��&#x10;&#x1a;&#x1a;!&#x3;�&#x1e;zg:\��]8�P%�p��&#x1a;�&#x7f;�U���S&lt;p�͒ &#x5;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="x-goog-ext-174067345-bin" elementType="Header">
                    <stringProp name="Header.name">x-goog-ext-174067345-bin</stringProp>
                    <stringProp name="Header.value">CgIIAg==</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ya29.A0AW4XtxjwdtxqczhM3t5j6CKlMxU8Gt6mQIxLguKjnrdWN7ORZiP9wrgSUJ0lE_ySl5ln_BJMyFUaxZ_3TmC0X3gFLzt18NowN3TeaiQJhSfaiIjnBbDFBq1Zka653049m8KynkCwf_U9XU72SFrEXtSFBFpTiVeGrn18cpRQG9bZj6NxELBOUjjOJX4oGnBdNRoaQbwhgjuEHuTKNRP0MNjUBwuHLstXT7ppSuPke7WHadcpPXs4WZX50cB-xJ27jkcpbJBad16mPMYo8a8m2Vj3ZGsOloiP3lMHlC-LY8oCqwaCgYKAdUSARYSFQHGX2Miw8Wz7-HZQFifgHknyswwrw0309</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-74" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/check</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-75" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/entries</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-76" enabled="true">
              <stringProp name="HTTPSampler.domain">hls.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/index.m3u8</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-77" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/check</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;token&quot;:&quot;QWJkb29vNTY2NjQxNzUwNDIy&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="View Category" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Category-85" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/bycat</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Category-86" enabled="true">
              <stringProp name="HTTPSampler.domain">accounts.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTP&quot;,&quot;request_age_ms&quot;:87184,&quot;request_elapsed_ms&quot;:24677,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;${scheme}://accounts.google.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Category-87" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bycat</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;cat&quot;:&quot;phone&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Category-88" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/blob:${scheme}://${host}/44cb51f7-54ff-4332-a644-23b3b85a9f0d</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Category-89" enabled="true">
              <stringProp name="HTTPSampler.domain">assets.msn.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/service/msn/livetile/singletile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="market" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">market</stringProp>
                    <stringProp name="Argument.value">en-US</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="source" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">source</stringProp>
                    <stringProp name="Argument.value">appxmanifest</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="tenant" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">tenant</stringProp>
                    <stringProp name="Argument.value">amp</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="vertical" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">vertical</stringProp>
                    <stringProp name="Argument.value">news</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Microsoft-WNS/10.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Category-90" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bycat</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Category-91" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bycat</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;cat&quot;:&quot;phone&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Category-92" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bycat</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;cat&quot;:&quot;phone&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Category-93" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bycat</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;cat&quot;:&quot;notebook&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="View Pro" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View P-96" enabled="true">
              <stringProp name="HTTPSampler.domain">crl4.digicert.com</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/DigiCertHighAssuranceEVRootCA.crl</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age = 5095</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Microsoft-CryptoAPI/10.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="View Product" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Product-98" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/prod.html</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="idp_" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">idp_</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/index.html</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Product-111" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Product-112" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_constants.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Product-113" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Product-115" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/prod.html?idp_=9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Product-117" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/view</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Product-116" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/check</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Product-118" enabled="true">
              <stringProp name="HTTPSampler.domain">hls.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/index.m3u8</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Product-119" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/view</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;id&quot;:&quot;9&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Product-120" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/check</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;token&quot;:&quot;QWJkb29vNTY2NjQxNzUwNDIy&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Product-123" enabled="true">
              <stringProp name="HTTPSampler.domain">optimizationguide-pa.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1:GetHints?</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#x10;	&#x10;&#x12;&#x10;&#x14;&#x10;&#x15;&#x10;&#x17;&#x10;&#x1f;&#x18;&#x2;&quot;,&#xd;
*${scheme}://${host}/prod.html?idp_=9(&#x3;(&#x2;:&#x5;en-USJ&#x2;&#x8;&#x6;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyA2KlwBX3mkFo30om9LUFYQhpqLoa_BNhE</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CJC2yQEIorbJAQipncoBCLGTywEIkqHLAQiSo8sBCIWgzQEI+uzOAQjh8M4BCK/xzgE=</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Add to Cart" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Product-124" enabled="true">
              <stringProp name="HTTPSampler.domain">docs.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/document/d/1d1r60dqtfVG2XTuP9meBoGdlYY5TQqD0ifZO_tN4H9I/model</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="reason" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">reason</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="smv" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">smv</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="smb" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">smb</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="mmv" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mmv</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="isr" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isr</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="msl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">msl</stringProp>
                    <stringProp name="Argument.value">d</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="nldi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nldi</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cr" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cr</stringProp>
                    <stringProp name="Argument.value">386</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="clmst" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clmst</stringProp>
                    <stringProp name="Argument.value">1749817742443</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lsst" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lsst</stringProp>
                    <stringProp name="Argument.value">1749817013735</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lst" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lst</stringProp>
                    <stringProp name="Argument.value">1749822090185</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rk" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rk</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">token</stringProp>
                    <stringProp name="Argument.value">AC4w5Vh6RymFcA9CrHCwLdOMLU_nBiiC6w:1749811325810</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ouid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ouid</stringProp>
                    <stringProp name="Argument.value">uc3a725dde6b46cd3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://docs.google.com/offline/synctaskworker.js?ouid=uc3a725dde6b46cd3</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CJC2yQEIorbJAQipncoBCLGTywEIkqHLAQiSo8sBCIWgzQEI4fDOAQ==</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add to Cart-125" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/addtocart</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add to Cart-126" enabled="true">
              <stringProp name="HTTPSampler.domain">docs.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/document/docos/p/sync?id=1d1r60dqtfVG2XTuP9meBoGdlYY5TQqD0ifZO_tN4H9I&amp;reqid=0&amp;token=AC4w5Vh6RymFcA9CrHCwLdOMLU_nBiiC6w%3A1749811325810&amp;ouid=uc3a725dde6b46cd3</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="p" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">p</stringProp>
                    <stringProp name="Argument.value">[]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://docs.google.com/offline/synctaskworker.js?ouid=uc3a725dde6b46cd3</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://docs.google.com</stringProp>
                  </elementProp>
                  <elementProp name="X-Same-Domain" elementType="Header">
                    <stringProp name="Header.name">X-Same-Domain</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CJC2yQEIorbJAQipncoBCLGTywEIkqHLAQiSo8sBCIWgzQEI4fDOAQ==</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add to Cart-127" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/addtocart</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;id&quot;:&quot;bbb7f4b7-6186-73d4-6eff-cf72f0786b7b&quot;,&quot;cookie&quot;:&quot;QWJkb29vNTY2NjQxNzUwNDIy&quot;,&quot;prod_id&quot;:9,&quot;flag&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add to Cart-128" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/blob:${scheme}://${host}/757ee801-97ed-46bc-a129-575796bc5660</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add to Cart-129" enabled="true">
              <stringProp name="HTTPSampler.domain">easylist-downloads.adblockplus.org</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/ab-testing/experiments.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Add to Cart" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add to Cart-130" enabled="true">
              <stringProp name="HTTPSampler.domain">self.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">UQMo�@&#x10;]�4i�Z�C���&#x8;� Ue����kW\�&amp;��&#x10;&#x14;т��r�u���]۴�Ƶ�&#x2;q�O�|�đ+?�&#x13;�~&#x4;8���&#x19;ͼ�ks�&quot;;]y\�e&#x15;T�ѯo�&#x7f;&#x7f;������Q���c&#x1e;9�&#x8;�8�ң&#x1e;�=A�0�/���+��nl�-m��&gt;��,��{�P}�4P}�4v��&#x1b; XDb&#x8;0@L0&#x7;�`7�&#x1d;lØ�&lt;v�{0��^�QvRZ&#x3;Y&amp;U����i�]��+v�&#x14;�E,J&#x1d;&#xd;
&#x16;X�$rx\H+U~!&#xf;ePJ�&#x11;�8&#x18;�MP}�4�&#xb;�S9(Ա&lt;oߤ��e&#x3;��|a&amp;�������Nd%&#xb;&#x19;��~���I��i��&#x1f;���W���u�*���&#x16;&#x15;�%vV�`�.�&#x19;��&#x1b;h{&#x0;�#C&#x17;�6]�F�&#x18;�g&#x1f;-��n9�&#x1b;����&#x1d;�&#x18;�N��i&#x1f;3.6���ͭ�@�C�h{��&#xd;��&#x7f;�S&lt;&#x7f;��w�iஹ2?&gt;�d�Zz-E&#x17;�%1�&#x4;�&#x1e;Z�1�$���&#x10;���U��&#x13;�E��+�ceؗ�L+e&#x0;j�P�TK&#x7f;&#x15;A�D[W�,=�Tz�ڇ�u�B&#x16;�~u�K����KU�g&#x3;&#x19;&#x7;�&#xe;+�ɓ&#x3;?&#x8;&#x13;eP����r&#x7f;{oo��5��K6op��Y2�s�O&#xf;v&#xd;
�q�^TՅ�9��1�T�R��_��T� ��&#x2;0&#x2;�&#x13;ZI��_�R  lW+:��&#x14;�&#x1a;� ��&#x0;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Upload-Time" elementType="Header">
                    <stringProp name="Header.name">Upload-Time</stringProp>
                    <stringProp name="Header.value">1749822105776</stringProp>
                  </elementProp>
                  <elementProp name="APIKey" elementType="Header">
                    <stringProp name="Header.name">APIKey</stringProp>
                    <stringProp name="Header.value">4bb4d6f7cafc4e9292f972dca2dcde42-bd019ee8-e59c-4b0f-a02c-84e72157a3ef-7485</stringProp>
                  </elementProp>
                  <elementProp name="Content-Encoding" elementType="Header">
                    <stringProp name="Header.name">Content-Encoding</stringProp>
                    <stringProp name="Header.value">deflate</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Expect" elementType="Header">
                    <stringProp name="Header.name">Expect</stringProp>
                    <stringProp name="Header.value">100-continue</stringProp>
                  </elementProp>
                  <elementProp name="AuthMsaDeviceTicket" elementType="Header">
                    <stringProp name="Header.name">AuthMsaDeviceTicket</stringProp>
                    <stringProp name="Header.value">t=GwDmAbuEBAAUT8E2pcttyweiwH80omnEMQMzYo0OZgAAEGKUFKVjbkkDO60PPGUwClOwAW5iRKCugDZMBm00fv9VrLaJnz7OLtimpvSf2D6ZlVJWtJhb9TGb2Wuns43hrTZjczgWptozJjYJW5phN7uQE/GuMw6rR4HEV38EKWIsOdlEVW9wHwmwfK1MJWx9MiZv1UclO05ECmGPC5kznBEishc5DPNaz87UFACX8vN0s9R5nM1gmfMYYbwP0CBi1lyzEG3e/uw2EHczdwye6UHugwdVvFRxPtze6dPyBJNU4FW+cf97kdEkgl2JCUwMvXYxuuPCzMlxm5sUqNo/dUBreD52ISXbAq0+jzXO4Be3sCZ/EExu3q9B7+9N7KcIw30GBULxfQPRTg0gI7LVZ3ohlqU+9o+O5IFb8Isx4+ahsgqqQwENrb1gGnLC4X2r8mQOI2uWGmAhZirtQIpTaU+dExZqWHulFFqQc52pt707h7A9OzjDUhwxhzsDOwsLI4g20amZG1jPEgypGpyt9GZTihLKLmxeQxfiLVO/Kb5ojjUhq/EcBpbH1Q4dFCSCxTjMD+1YEmfw9sVXa/gHUJfKk+4XgASBZ18XA9ejs3UFkoiqh9jNxzdG8UAb5xMj26AjMOUB&amp;p=</stringProp>
                  </elementProp>
                  <elementProp name="SDK-Version" elementType="Header">
                    <stringProp name="Header.name">SDK-Version</stringProp>
                    <stringProp name="Header.value">EVT-Windows-C++-No-3.4.276.7</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                  </elementProp>
                  <elementProp name="Client-Id" elementType="Header">
                    <stringProp name="Header.name">Client-Id</stringProp>
                    <stringProp name="Header.value">NO_AUTH</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="View Cart" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-132" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/cart.html</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/prod.html?idp_=9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-139" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-148" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/cart.html</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-149" enabled="true">
              <stringProp name="HTTPSampler.domain">hls.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/index.m3u8</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-151" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/viewcart</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-150" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/check</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-154" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/check</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;token&quot;:&quot;QWJkb29vNTY2NjQxNzUwNDIy&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-153" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/viewcart</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;cookie&quot;:&quot;QWJkb29vNTY2NjQxNzUwNDIy&quot;,&quot;flag&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-155" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/view</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-156" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/view</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;id&quot;:9}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="View Cart" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-158" enabled="true">
              <stringProp name="HTTPSampler.domain">thepromise.standsapp.org</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/convert</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;rows&quot;:[{&quot;nid&quot;:&quot;EBVX6CLC63DhhTDScKKPrSxkS3eI&quot;,&quot;pid&quot;:&quot;&quot;,&quot;sid&quot;:&quot;&quot;,&quot;cc&quot;:&quot;EGY&quot;,&quot;ts&quot;:1749818664492,&quot;rfu&quot;:&quot;chrome%3A%2F%2Fnewtab%2F&quot;,&quot;tu&quot;:&quot;${scheme}%3A%2F%2Fwww.blazedemo.com%2F&quot;,&quot;trt&quot;:&quot;typed&quot;,&quot;trq&quot;:&quot;from_address_bar&quot;,&quot;os&quot;:&quot;win&quot;,&quot;ver&quot;:&quot;2.1.46&quot;,&quot;blk&quot;:10},{&quot;nid&quot;:&quot;EBVX6CLC63DhhTDScKKPrSxkS3eI&quot;,&quot;pid&quot;:&quot;&quot;,&quot;sid&quot;:&quot;&quot;,&quot;cc&quot;:&quot;EGY&quot;,&quot;ts&quot;:1749818672939,&quot;rfu&quot;:&quot;${scheme}%3A%2F%2Fwww.blazedemo.com%2F&quot;,&quot;tu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2F&quot;,&quot;trt&quot;:&quot;typed&quot;,&quot;trq&quot;:&quot;from_address_bar&quot;,&quot;os&quot;:&quot;win&quot;,&quot;ver&quot;:&quot;2.1.46&quot;,&quot;blk&quot;:10},{&quot;nid&quot;:&quot;EBVX6CLC63DhhTDScKKPrSxkS3eI&quot;,&quot;pid&quot;:&quot;&quot;,&quot;sid&quot;:&quot;&quot;,&quot;cc&quot;:&quot;EGY&quot;,&quot;ts&quot;:1749818679003,&quot;rfu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2F&quot;,&quot;tu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2F%23&quot;,&quot;trt&quot;:&quot;&quot;,&quot;trq&quot;:&quot;&quot;,&quot;os&quot;:&quot;win&quot;,&quot;ver&quot;:&quot;2.1.46&quot;,&quot;blk&quot;:10},{&quot;nid&quot;:&quot;EBVX6CLC63DhhTDScKKPrSxkS3eI&quot;,&quot;pid&quot;:&quot;&quot;,&quot;sid&quot;:&quot;&quot;,&quot;cc&quot;:&quot;EGY&quot;,&quot;ts&quot;:1749818685801,&quot;rfu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2F%23&quot;,&quot;tu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Fprod.html%3Fidp_%3D13&quot;,&quot;trt&quot;:&quot;link&quot;,&quot;trq&quot;:&quot;&quot;,&quot;os&quot;:&quot;win&quot;,&quot;ver&quot;:&quot;2.1.46&quot;,&quot;blk&quot;:10},{&quot;nid&quot;:&quot;EBVX6CLC63DhhTDScKKPrSxkS3eI&quot;,&quot;pid&quot;:&quot;&quot;,&quot;sid&quot;:&quot;&quot;,&quot;cc&quot;:&quot;EGY&quot;,&quot;ts&quot;:1749818689651,&quot;rfu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Fprod.html%3Fidp_%3D13&quot;,&quot;tu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Fprod.html%3Fidp_%3D13%23&quot;,&quot;trt&quot;:&quot;&quot;,&quot;trq&quot;:&quot;&quot;,&quot;os&quot;:&quot;win&quot;,&quot;ver&quot;:&quot;2.1.46&quot;,&quot;blk&quot;:10},{&quot;nid&quot;:&quot;EBVX6CLC63DhhTDScKKPrSxkS3eI&quot;,&quot;pid&quot;:&quot;&quot;,&quot;sid&quot;:&quot;&quot;,&quot;cc&quot;:&quot;EGY&quot;,&quot;ts&quot;:1749818695572,&quot;rfu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Fprod.html%3Fidp_%3D13%23&quot;,&quot;tu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Fcart.html&quot;,&quot;trt&quot;:&quot;link&quot;,&quot;trq&quot;:&quot;&quot;,&quot;os&quot;:&quot;win&quot;,&quot;ver&quot;:&quot;2.1.46&quot;,&quot;blk&quot;:10},{&quot;nid&quot;:&quot;EBVX6CLC63DhhTDScKKPrSxkS3eI&quot;,&quot;pid&quot;:&quot;&quot;,&quot;sid&quot;:&quot;&quot;,&quot;cc&quot;:&quot;EGY&quot;,&quot;ts&quot;:1749822065090,&quot;rfu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Fcart.html&quot;,&quot;tu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Findex.html%23&quot;,&quot;trt&quot;:&quot;&quot;,&quot;trq&quot;:&quot;&quot;,&quot;os&quot;:&quot;win&quot;,&quot;ver&quot;:&quot;2.1.46&quot;,&quot;blk&quot;:10},{&quot;nid&quot;:&quot;EBVX6CLC63DhhTDScKKPrSxkS3eI&quot;,&quot;pid&quot;:&quot;&quot;,&quot;sid&quot;:&quot;&quot;,&quot;cc&quot;:&quot;EGY&quot;,&quot;ts&quot;:1749822088481,&quot;rfu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Findex.html%23&quot;,&quot;tu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Fprod.html%3Fidp_%3D9&quot;,&quot;trt&quot;:&quot;link&quot;,&quot;trq&quot;:&quot;&quot;,&quot;os&quot;:&quot;win&quot;,&quot;ver&quot;:&quot;2.1.46&quot;,&quot;blk&quot;:10},{&quot;nid&quot;:&quot;EBVX6CLC63DhhTDScKKPrSxkS3eI&quot;,&quot;pid&quot;:&quot;&quot;,&quot;sid&quot;:&quot;&quot;,&quot;cc&quot;:&quot;EGY&quot;,&quot;ts&quot;:1749822101221,&quot;rfu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Fprod.html%3Fidp_%3D9&quot;,&quot;tu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Fprod.html%3Fidp_%3D9%23&quot;,&quot;trt&quot;:&quot;&quot;,&quot;trq&quot;:&quot;&quot;,&quot;os&quot;:&quot;win&quot;,&quot;ver&quot;:&quot;2.1.46&quot;,&quot;blk&quot;:10},{&quot;nid&quot;:&quot;EBVX6CLC63DhhTDScKKPrSxkS3eI&quot;,&quot;pid&quot;:&quot;&quot;,&quot;sid&quot;:&quot;&quot;,&quot;cc&quot;:&quot;EGY&quot;,&quot;ts&quot;:1749822119127,&quot;rfu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Fprod.html%3Fidp_%3D9%23&quot;,&quot;tu&quot;:&quot;${scheme}%3A%2F%2Fwww.demoblaze.com%2Fcart.html&quot;,&quot;trt&quot;:&quot;link&quot;,&quot;trq&quot;:&quot;&quot;,&quot;os&quot;:&quot;win&quot;,&quot;ver&quot;:&quot;2.1.46&quot;,&quot;blk&quot;:10}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">chrome-extension://lgblnfidahcdcjddiepkckcfdhpknnjh</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="cache-control" elementType="Header">
                    <stringProp name="Header.name">cache-control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-159" enabled="true">
              <stringProp name="HTTPSampler.domain">onedriveclucprodbn20009.blob.core.windows.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/2025-06-13/-642064519616472443-3f91c9b6-abce-8726-096f-4e106133e233-2025-06-13-13-42-05-1886?skoid=de9f8358-e0fe-4191-9f94-bbbed2fbde62&amp;sktid=cdc5aeea-15c5-4db6-b079-fcadd2505dc2&amp;skt=2025-06-12T15:13:17Z&amp;ske=2025-06-15T15:13:17Z&amp;sks=b&amp;skv=2024-05-04&amp;sv=2024-05-04&amp;st=2025-06-13T03:42:05Z&amp;se=2025-06-13T14:42:05Z&amp;sr=b&amp;sp=c&amp;sig=G1G3aJdS4tWlGExoxDmS5Flc84cpAyLLyGuYgp0Rfdg%3D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#x2;&#x0;&#x0;&#x0;&#x1;&#x0;(&#x0;&#x0;&#x0;S&#x0;y&#x0;n&#x0;c&#x0;E&#x0;n&#x0;g&#x0;i&#x0;n&#x0;e&#x0;-&#x0;2&#x0;0&#x0;2&#x0;5&#x0;-&#x0;0&#x0;6&#x0;-&#x0;1&#x0;3&#x0;.&#x0;1&#x0;2&#x0;0&#x0;3&#x0;.&#x0;1&#x0;8&#x0;1&#x0;6&#x0;0&#x0;.&#x0;6&#x0;.&#x0;o&#x0;d&#x0;l&#x0;g&#x0;z&#x0;{�&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;EBFGONED&#x3;&#x0;&#x0;&#x0;�&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x1;&#x0;&#x0;&#x0;25.091.0512.0001&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;10.0.22621&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x2;&#xd;
�}	�#U�&#x7f;zf8�a�[&#x10;�&#x6;&#x19;&#x1;�L�}4��$�;�餻��1&#xc;4��rt&apos;U�J��n@&#xe;G&#x14;OPV�B&#x14;T&#x16;EY�&#x5;��Xw���XP�*�w�]wEp]&#x10;&#x4;��~ut&apos;թt&#x6;��3���3�佪z������&#x1d;����&#x1e;��&#xb;��~eW�&#xe;�����Ơ��V���;�&#x7f;�/�ǆ����&quot;s&#xf;ܔz��O�m����+��&quot;{*��P�&#x13;��d&#xd;��J9���9U�ʜ�e���d�x:&lt;�&#x7;�2���i��`)��(r*�t|�D|�&#xd;���n�:��N&gt;�f�{u�̗�q�&#x1e;�&#x16;H?&#x11;���L��W���Q��}��u�-��&#x7;~y�r2&#x1b;,��Rj�ա��C��X�t�������󏿬�&#x1;�K�u�^�&#x2;�&#x7f;^NV�2$��BQ�K% ���肒�+��&quot;�)�b�&#x4;�&amp;�$E�E 9b&apos;�SM�&#x10;�p�q���rwS&#xd;w��A�Ϻ\	H��G}&amp;�&#xf;_&gt;�?����5��w���P���&#x17;&#x1f;~&#x11;���I&#x19;E-AUK&#x8;䇛]���&apos;��D˒V&#x1e;���V^N&#xf;*i�ì�&#x12;�?� (��r-8 �����&#x3;�&#x1b;�F�&#x1d;���T��WRR�\��&#xd;�&#xd;
�rT.�sJ�&#x14;P�^y.��]&#xd;����~Sc`��&#x1f;U&lt;&#x6;�O3%wXS3(̞J*WFx�&amp;C�j3�&#x2;���T}�&#x5;�&#x4;-1$&apos;K��M���!D�-�&#x12;�N&#x8;&#x2;-&#xb;R&quot;E�i�ǙП�0ڮ�&#x7f;��d���{��]�ck~�D��N&#x2;&#x1a;�@�;)�d�3Oq&#x1d;���8�!E�&#x4;��ɴ覤&#x4;�f�,�H9�fDN&amp;��ȳ	�&#x2;���&gt;q�W?�������ɜ&#x16;ɤ���R&quot;)&#x3;�)�M�&#x1c;�T&amp;	��i��饗��l&#x4;�No��ߝ�&#x4;?�nQ�E�������//�(��Hjơ	=��Ｖ�����KR�`��&#x1;���n&#x10;�AK&gt;&#x1d;Z�+[��nd\�fd&#xd;��&#x4;X��&amp;ة\��v��r&#x7;��O]q&#x2;�&gt;ɤOL��&#x5;��- �G�&#xf;�&#x8;UNVR2�_�&#x14;dM�&#x3;Kw�]��/�£&#xe;���&apos;/�5&#x16;~*&#x16;��&#x14;E���?&#x1b;&#x18;w���J��t����C��6G.e�K&#x17;�¥@Nɕ�r���_�&#x3;�:&#xc;&#x0;&#xf;]uU����������3���&#x16;� )���zɊ���&#x11;�4�IŢ�!�Q��+!wD��\����&#x1;��D&#x5;l�Ѳ�I&#x19;&#x19;�8&amp;k�����&#x17;&#x1c;�|K&#xb;wc��hk��&#x1b;*�$&#x8;�.�2͑&#x1c;K��4A�&#x19;���	Q��B�eY��eYJ&#x1f;T?�H[&#x1d;k���f�?l��ک7l�}��3&#x1f;z���{_�eI2�&#x10;Ӥ�&#xc;�E��&#x7;��&#xd;�	��OOϫj&#x7f;�R/&#xc;V&#x16;V^$	2Ɉ�;As2T� �	.�vK&#x12;K�4���$�T��u��毷�\ ��&#x13;̦&#x8;�F��K���h�˩F�&#x5;&#xd;�&amp;)&#x1d;��7��`u�&#x1d;���*&#x7f;מ&#x12;ʾ&#x10;�֨���\ט�_������&apos;��{�&#x1b;�+,V?�k��W�Y��&#x7f;&#xe;L�!)�&#x5;�&#x18;�t&#x19;��&#x7f;�J&#x5;��枞�@N�����6O��sٸ&#xe;�&#x12;&#x1a;�� ��s�&#x1a;����.��&#x1d;��8�r&#x4;w��0˜����&#x1c;��zbL�͕�h���Ɇ�ݫASbY&#xd;��&#x17;V&#x3;mm���&#x1a;p&#x6;&#x1e;P�(eΈnk&#x3;�&gt;&#xf;��&amp;�K����&#x7fc;jn�5�����&#x1f;�p��%)KA�甔Z&#x1d;�&#x14;�9��z&#x1b;����&#x19;�&#x1b;EJ�l�&#xc;i�0&#x18;&#x16;��l ��&#x13;;&#xf;F�څ&#x7f;&#x7;	�&#x4;���~�ts̿c�&#xb;&apos;m�_�ew)&#x11;��7��GýRY�j�TF��&#xb;�ѯ֦�&#x17;��ۙ�J�Wi9)�[�SCدf�&#xe;|I�����d�&#x3;�2����D`xbp&amp;�N����&#x1a;N��f��&gt;5P�&#xf;/,�1nVڷ�����X��&#x14;&#x8;�&#x5;�:�&#xd;
����хL��֒i��&#x16;3���&#x12;�Ύ�&#x14;�~���@�fs�a��&#x13;����(��tiZ�&#xc;L���3��yA�ώ�d��Xo(&#x19;�&#xe;&#xb;�I!&#x13;�����ǉZ�&#xe;�~�ձy$�ɺ�)�5i�Fܟ��sW���D�:NmqP&#x7;X�̂&#x1f;�]��g	���G&#xf;T�?\w�m&#x7;n&lt;�&#x5;w���*�\�b���s[&#x3;��;&#xc;ikv_OO�\��5H&#x1a;���R*KJRަk�R1/-����&apos;o���E&#xb;�k�&gt;&#x1e;v�,���{c;��.�}��雙7&#x7f;��&#xf;���s���&#x11;&#x4;���r����9��&#xe;��Qy�&quot;��H �+���rY�s.r�&#x0;�t�&#xf;&#x14;��V�~ĆB��X/K�e�p&#x14;~��9y���%�l�&#x2;ɸ�Z)���&#x19;D��&#x1a;&#x3;�k��$�Xh��R&#x1c;��r2%�&#x19;&amp;A�E6�r��lJJ0�Dc�젬��&#x6;�I-]&#x5;���&amp;]�vXi��՞Vc&amp;�&#x1a;�U&lt;�&#x1c;��7.�P&#x3;�kT.&#x15;U�$�$����F�l3����5Y&#x10;�&#x12;v&#x1c;&#x12;&lt;�*r&#xd;
���I�&#x10;�`�&#xc;%��t��|���fg&apos;&#x16;{��ݡ�&#x14;#&#xf;VcC�H^&#xc;�s��be�{��4�&#x4;&#x7;ƫ#&#xb;qr�;&#x2;�&#x2;?�y��̚�j��&#x15;�z)6�	�P4&#x1c;����G{&lt;C��p��s^�!(�Ep߷j�C~YT��F���&#x1a;S�w�&#x6;��fT{�9.�y�2��Z#NH+0�99�&#x10;$�#R��btCQ���?&#xe;��4&apos;��HR&#x4;J&#x12;I�4�&#x1f;XW&#x12;/D�&#x17;8U�&#xe;Չ&lt;�i&#x1d;ͪ�V���x��M��-�S?j3�c&amp;��?���C����?�M�#&#xf;߫=��x�6��ɅTU�&gt;�a 4��]0:i����&quot;T^�v�4&#x12;{��f�&quot;�&gt;�=&#xf;�&#x7;o��&#x1b;wt�&#x7f;�����&#x12;�\/�&#xb;l&#x5fe;&#x15;!�c�&#x11;�j|G=&quot;{&#xc;&#x5ce;$o&quot;Y#K	�;&#x1d;Gi�r��&#x8;&#xb;j�[&#x1c;�����2`&#x14;�w;��� o[,�&#x19;M&#x1a;C��Z��#0&#x3;g&#x1a;�+{��Ҍ�&gt;�\��	&#x5;���{��&#x7;Z_�G`�#I�)�kV{��&#x7f;ҁ�v��&#x1c;{e�&amp;�f��{U�&#x1;&#x12;�J��^@�&#x7;K�bF�R�gN��D^�)&#x16;;�ٵ���&#xd;�xX�&#xb;�JA���6�&#x3;J���Q�{�|�;:̈&#x3;(3h�&#x19;�pP�A(�\N&#x5;&#x80;�RP&#x15;���jN)&#x1f;Wk&#x2;��=���ق�)&#x1b;���A�Y�pvԣ&amp;j����3��Њ&quot;&#x6;�\���&#xd;
I��&apos;�C�?G�Bѯ�&#x4;�:�J��%~l�������ߜ87��&#xb;����&#x3;w;������J��ƸV6�@�S�&#x3;&#xe;���[&#x7f;��V[�p#ъ&#x3;�U�|Ms&gt;Fo�}jT�����&#x18;�&#xe;L���/]�@��\F��F&#x15;O&gt;�V�TL&#x1d;�(&#x16;�:��N���,��ZE��I:�ށK�&#x1e;&lt;0�x�]��Ɋ�+/@&#x7;&amp;g&#xc;� �c�&#x18;�6��&gt;�A[���8Mo&gt;M�Ƀk���U�TV&#xb;�&#x16;[(ʨ�&#x2;����&gt;k���nw/��g�f�&#x1d;Uo(���-xK/8�n�����&#xd;ً,3З��3K&#x1e;�U#}��Tn:�&#x1b;�f��`��&lt;Q&#x4;q��;-�����:D֏�8��-f���s�,t�#�7o2z��d=�&#x1e;&#x4;&#x3;�WNT2�T���&#x1e;��O��&#xe;V����Qަo�u�vXa&#x7;X7��÷Y�E���X�&#x12;��5{��&#xc;��T��%;�&#x16;s(���O8��}�&#x1a;i����&#xe;j�&quot;��jj�U[�7��+��&#x7f;�;��m6,�&#x19;j&#x2;���*��&gt;��e9�^�5�R&#x1e;�l��%��&#x1d;(��L&#x12;�&#x4;�&#x16;%�t3$�vK4A��&#x12;��S�4E%&#x12;�N@�&#xe;��z���ˑ88���F�&#x1;�jժ6��Sa��ν�a��-F&#x3;Ǯ&#xe;G~�A[鎛�]Yi�Q�r�&#xf;�	��{ý.&#xc;&#x19;}�����s�g�ۭO&#xb;�{�������ݏ|����`�����z���_������xd�?&#x1b;֒��M�&#x1b;i��Q���9Լ���&#xe;&#x16;ǳO&gt;��f8�{�8F2�.Qy����&#x6;~SgU&#x7f;�`1&#x1d;2ڴ���W���&#x12;{ު&#x7f;�ICj�O&#xb;E��� h&#x5;Ҏn@����G�f�y�ٱ���&apos;�2~b�&#x1f;�z��N3H۹��;�;,P�&#x1a;P&apos;�:\t`�mo}b�&#x19;���v�JPF&#xd;
�,&#x18;�i&#x1d;�&#x19;�V�쪵&#x16;�C&#xf;��x����Vw�	�C5�&#x18;���켿_Fv%�r&#x15;�v��d�]&#x1f;�3�&#x12;����n&#xd;��&#xb;��6&#x18;�&lt;8�os@|����L&#x1b;�(&#x14;����U���5��t3&#x18;ܺE��&#x19;e1�4&#x13;,&#x14;�(�SS)9-U����P@��:� k&#xe;�x&#x8;&#x1a;�*��d0j&quot;��t�S�Sg&#xf;=��w�&#xf;SW=z�C[ӈ&#x8;��X�&#x18;7x��|樈-&#xb;چ�&#x5;&#x1b;�&#x13;&#x11;J&#xe;|��#�ׯʷ�&#xb;�&#x13;��o�(���MN�&#xc;i�&#xe;B�*k&apos;M��:\��k٭]+&#xd;�&lt;�&#x1e;�&#x1a;1a����~���}�;��?��&#x1d;������&#x1a;Q&#xd;
ǾU&#x5;~#�ߙ�}jP&#x1;��O�@T��\�&#xd;
&lt;�V`ܡ����&#x7f;t�&#x2;�hR`��i/tƊ���`���ozo^8�&#x7f;��g�.&#x1b;��&#x1;&#x17;+&#x18;B6jı��ʞMF���&#x1e;#+&#x2;�F˥�&#x13;�9&#x7;({&#x1e;��VKP��d��M�x���&#x2;�q���CC����]&#x1f;����lG�9L&#x16;}&#x1;QI�&#xf; u�&quot;���.����H���&#x5;��B�2&#x1b;&#x7;�{�!GtJ&#x1d;?&#x11;[��V��&#x5;&#x17;���b��.���H��b�(���(��&#x12;�h��&amp;�h@�v�\&#x17;�w�b&#x17;Cv1�&#x14;�Ű]&#xc;����l&#x17;&#xb;_�.����.���.����.���.��&#x12;�.���t	l��u	|� t�T��t�B&#x17;I&#x0;m&#x8;&#x1a;���&#x1f;�&#x10;�&amp;v�H0�&#x18;��&#x0;&#x1f;I!&#xd;I�&#xf;�&#x0;�&#x4;�$`%&#x1;,I��&#x0;�&#x4;�$&#xd;�&#x2;P&#x12;`�&#x0;�d�;&#xb;�&#x0;�d�7&lt;&#x3;�I&#x16;�� ���&#x1c;���&#x0;���9&#x1e;�y�&#xc;�A%H�&#x2;	u Ex&#x17;�&amp;E�&#x17;!_�|�&#x3;&#x5;u�&#x8;&#x12;�&#x3;&#x11;�&#x1e;&#x14;&#x1;d��PP&#x17;��&lt;&#x12;�HH��PHkR좠.&#x14;&#x12;&#x1d;INA&#x1a;���)�&#xf;i@k���&#x1e;&#x14;&#x3;i&#xc;�&#x7;Ҡ.&#x14;&#xb;��&gt;&#x14;�&#xc;�g9���4�&#xb;&#x5;��&#x0;?�#&#x1b;�,&#x1;~&#x3;vJ�gE�O��Dd.p&#x17;��@w&#x1a;0Ӏ�&#x6;�4	�&#x6;�4��&#x5;�&#xf;�&#x2;�i�9M����&#x6;��(&#x1d;(&#x1e;��F&#x19;A!A)A1&#x1;�Ӏ�&#x6;�Ӏ�&#x6;ZӀ�&#x6;�4&#x7;����@g���p&#x1f;H&#x8;&#xd;8i����&#x6;A�ARh&#x10;&#x15;&#x1a;&#x4;�&#x6;�4H&#xb;&#xd;�i�9&#xd;�f&#x0;;CP�&#x1f;D&#x11;��&#x0;~&#x6;�3@o&#x6;d��:0@_&#x6;p3��&#x1;�&#xc;�d&#x0;&apos;C�o�&#xf;����&#xc;�(π�a�&#x1d;&#xc;恬��&#xf;2�&#x0;�&#x19;��&#x0;~&#x6;��&#x0;n&#x6;�&#x1;�2 &#x1b;&#xc;ԁ�:0��&#x1;�&#xc;Й&#x1;9a&#x0;/&#x3;r�&#x2;V&#x16;��@k&#x16;𲀕&#x5;�fA&amp;X�7&#xb;XY�7&#xb;�f��,Л&#x5;�,`g��,�gA&gt;X�7&#xb;�fA�Y�&#xb;&#xb;ua�.,М&#x5;z�P&#x1f;&#x16;��B}X�&#xf;�7Pȃ��P&#x1f;&#x16;��&#x2;?Xl��f�/,�&#x1;&#x16;Z.�a3�4h&#x7;,&#x7;i�#&#x16;�&#x3;&#xb;ue��,ԕ���PW&#x16;��&#x2;�X�&#x13;&#xb;�e��,�	&#x16;xÁ\qPG&#xe;x�A=9h�&#x1c;���zr$���&#x2;��A�8h�&#x1c;ԍ&#x3;y�(L&#x17;�&#x7;��n&#x1c;ԉ��pP&#x1f;&#xe;��A]8�}&#xe;�&#x3;�&#x1c;�a&#xe;;&#x1d;�	&#x7;�&#x3;�&#x1c;��&#x3;�&#x1c;`�&#x0;&apos;&#x7;89�ǁ�p ?&#x1c;��&#x3;�&#x1c;���v�&#x3;V&#x1e;x�&#x3;_x��&#x13;�w��ya&#x7;��&#x7f;�&#xd;xy�	&#xf;&lt;�&#x1;3&#xf;����&#x7;�&lt;��&#x1;7&#xf;�y�&#xd;&#xf;|���@&#x7f;&#x1e;0�@&#x7f;&#x1e;h�&#x3;n&#x1e;p󀗇n��v�&#x3;n&#x1e;p��ab��w��&#xe;��&#x1;?&#xf;m�&#x7;&#x1a;�P&#x7;&#x1e;��@_&#x1;0&#xb;�Y&#x0;�&#x2;�&#x15;��&#x2;	}+�X&#x0;&#x19;&#x12;&#x0;�@a�&#xb;�&#x0;^&#x1;�&#xd;
�W&#x0;Z&#xb;�S&#x0;&#x19;&#x12;@~&#x4;�&#x1b;&#x1;h,@;&#x10;&#x0;�&#x0;�&#x16;��&#x11;&#x18;��^�.&#x0;v&#x1;h.��q�o&#x16;&#x7f;ý�&#x16;&#x4;��&#x0;u&#x10;8��!&#xf;�&quot;@&#x1d;&#x4;�/&#x0;~��n&#x1e;ލ�?v���C[&#x16;�&#x1e;&#x2;�&#x3;�/@;&#x16;�&gt;&quot;�G��!B�D&#x2;��.&#x11;x B�&#x10;�~&quot;�B&#x4;^�P7&#x11;x!B�D��&#x8;u&#x13;�^&quot;�B&#x4;^�&#x14;*&#x15;�&#x7;&gt;�PG&#x11;ڇ&#x8;�&#x10;&#x19;�4�nh&#x7;&quot;�&#x3;&#x11;x!B�D��&#x8;u&#x12;�N&quot;�I�v B�D��&#x8;u&#x12;�7&quot;�&#x5;&#x11;�%�\��&#x1f;&#x11;ځ&#x8;�&#x11;A�� W&quot;�GD5&#x6;2%B�D�[A��B�5&#x1a;�&#x8;.��P�&#x11;$j8&#x12;�P�&#x11;��&#x8;�f&#x4;�3�Ɵ4����x3�ϢB#&#x18;���`�&apos;�_�4&#xe;���	Tb&#x4;�i&lt;�&#x1e;�&#x19;�&#xd;
��u͊��+`.j4&#x2;U&#x1a;!�&#x2;�&quot;�-���u&#x1d;����&#x8;TsP0^X�px��&#x4;���&#x6;n����Z�J�&#x4;&#xe;���&amp;)|&#x2;&#x1a;	�kg&#x12;+C2�7|��&#xc;T�$����&amp;Y|&#xc;U���I&#xe;�P[�Z�պ�&amp;�2���b�H�&#xc;��I&#x1;�,b.*mR�\����u&#x5;�koT�$�n��a�uC�M�Ά&#xb;�&#x17;�4H=&#x3;�&#xd;�&#x18;&#x1;I�J�}XKJ7Htk&#x4;k��&#x1c;.������&#x14;�&amp;&#x14;�߂Ϣ�B!!(�*jx&#x12;U&lt;���D&#x5;O���&#xb;ނ6&#xb;�������/@�SH&#x1c;&#xd;
E���UhР%&#x0;&#x17;�E&#x11;�x�X�\4i(�&#x1a;&#x1a;&#x7;$Z&#x7;p�7#�($&#xe;��&#xd;��A&#x1b;&#x1;.&#x14;^&#x18;��y��Fc�D&#xb;�D&#x13;��u�&#xb;Y�Z&#x1f;.�&#xd;��hpш&#x1e;�&#x0;�ೈ�F�h&#x12;�E��0&#x3;ŖF�4&#x2;�&#x11;.Z&#x8;$�&#x4;$�&#x3;$�&#xc;���h&#x12;�h&#x13;�h&#x10;�&#xc;6:4&#xb;H�&#xb;H4&#xd;
H�&#xd;
H4	�&quot;�M�� W&#x19;�*�&#x5;p�\� �D�&#xb;�b�&#x18;d&#x1e;�&#xc;$�&#xc;`K�&#x6;%f@�H��@��&#x0;��i�-&#x6;��&#x2;\0&#x17;��v&#x3;\�&#x5;�&#x19;&#x6;9à&#x0;3X_&#x6;�� {Ц Ѩ ђ�&#xb;�a}&#x19;�b�(�����2�&#x1e;&#x6;��`�Y�*&#x1a;&#x15;Ђ��EaE{�D��D��D��D{�D�&#x2;.&#xc;ZĘF�1f`}Ѥ ў Ѡ Ѣ Ѥ Ѧ Ѩ YݢF&#x1a;�]A�aA��e���Xi4(��/���-&#x1;&#x17;LC��X_�+H4,H�,���XU4&quot;�&#x2;?є�&#xb;�&#x17;4ԱnhF�hC�&#x1c;�&#x8;-	�0x����&lt;2�Cq�eh@�h=�E7��1d&#x19;���&#x10;)������#4%��7#p&#xe;�r�&#x2;p�\8l.&#x1c;�#�LA��D��D�&#x2;.�2`Ϗ&#x6;&#x5;\�{@��Q�xthЪ Ѭ Ѧ�&#xb;f gд Ѷ&#x0;&#x1f;&#x4;�h�&#x1b;�&#x7f;���&#x13;X&#x5;4#��o�f�&#x16;&#x5;�&amp;&#x5;��&#x4;��&#xc;�G��D;&#x2;�&#x17;���ќ�&#xb;�&#x0;��Ǯ��z���G�B&#xb;�D&#x13;&#x3;.��`e�ڀ&#xb;�&#x17;&#xe;/x&#x1f;�&#x8;�&#xe;�`&#x6;�&#x3;�&#xc;��&#x5;X&#x5;44����z&#x6;&gt;��# &#x17;д�&#xb;ނ�&#x10;�Zhf�&#x2;2&#x5;&#xd;&#xc;&#x12;-&#xc;&#x12;M&#xb;��&#xf;�2��&#x5;)�.&#x19;�&#xd;&#xd;&#xc;\��&#x17;|&#x1;VK�j	�=��&#x1;&#x17;|&#xb;VP@�&amp;&#x7;��&#x6;�&#x6;&#x7;\Ћ�&#x1a;��A��A��A��&#x1;&#x17;���&#xc;�&#x11;�&#x1b;$�&#x17;p�g���(a&quot;6&#xd;&#x11;�&#xc;-&#xc;P.�&#x2;&#x14;346H�4H43H�3H42���&quot;�Dl&#x6;hX�hY�:�7c[&#x10;�3&quot;�C��M���&#x1d;N��D�S�9&#x1;8(0�&#x3;��&gt;(�N(z�h`�&#x5;}Q&#xd;
&#x7f;���V&#x6;�&#x6;&#x6;��&#x5;\0���W|&#x1;��+�&#x19;&#x1c;�q���K9ݳ�][���&#x16;&#x1e;�&#x15;�p�5ј�&#xb;��X&#x6;&#x0;����&#xb;�&#x17;�&apos;���c,�g��1&#x2;&apos;&#x11;.�&#xb;&#x14;��&#x14;�&#xc;p��h̥�1DJ�C��=\0&#xd;}c4&#x1c;@C�&#x17;�&#x19;�BsD�&#x1b;��+�~&lt;\0&#xd;��@��@�cO��@��@�:f&#x11;&#x1d;tĬ��?�;�7&#xf;����;�Y��&#xd;�^��u�&#x1e;�x��&#x14;�}Jw�)���ʣ*�Pm�&#x5;�!9u�]w�uo]w�u&#x7f;&#x1d;u2\0B�X�O��&#x1e;0��&#x1;&#x16;��:��:��:\�&gt;�9�&#x7;&#x14;�t4�&#x13;hF�/px�&apos;0�@����&#x5;��p�gY|&#x2;�I#H&#x1a;yNs����&#x8;&#x17;U4�&gt;&lt;�z&#x1a;.z.�&#x14;ɉ&#xe;&lt;\0&#xd;+�&#x1a;�Be&#xd;&#x17;�&#x10;1C���&#x7;:0ʁ�&#x13;��&#x14;*k&#xd;
�5��&#x1a;.&#x18;�@:�W&#xf;&#x17;��Z2�c�&#x5;&#x1f;��2X_��&#x14;�m��}z&#xc;E&#xf;�����O1z,&#x5;k�&#x1e;&gt;\0&#x17;k���B�&#xd;&#x6;&#x19;�a�QcS&#xc;V&#x10;&#x15;3\�X&#xc;�&amp;�ix3V&#x10;U4�:�B�&#xc;&#x17;�ՠܣ�O���PEÅǋ�&#x17;=����AT�&#x14;�i&#xd;
}&#x7f;&#xd;
�5�ʚb��&#x1c;V&#x10;&#x3;&#x1;&#x14;*k&#xd;
�5�ʚ�&#x0;&#x0;\�Y�&#x1b;*f&#xd;
&#x1d;}�գD�K&#x16;y�:&#x19;.�&#x18;���&apos;�[��S��S��S��)���O`�`�e��)T�&#x14;�d�`��УO&lt;^0&#x3;Y�&#x1e;?�*&#x1a;.&quot;ƥ��&#x14;�&#x17;�&#x19;� ��&#x14;jg�`���&#x7f;�&#x13;�&#x14;T�&#x14;�h&#xd;
�}&#xd;
�}��-X&#xf;t����a/=��B�M�ڦPmS&#x18;&#xc;�Pw�&#x5;_�&#x1c;�PDQ�S&#x18;&#x1e;�P�S&#x18; �&#xb;f`UQ�S��)��p��Q�S��႑5�&#x11;*k&#xd;
�5�z�B=&#xd;&#x17;��a&#x3;C�B��BߟB�&#x1f;.x&#xb;��&#x11;8��@�M��0&#x1e;&#x0;&#x17;|&#xc;��&#x1b;�;@���B�Ma8&#x0;.&#x0;�G�`D&#x0;.�&#x18;&quot;E�M���PY�E��&#x1f;�&#x17;�&#x0;b��z��&#x0;&#x1;\0&#x17;EJ�6#`&#x1f;�j�BeM���&#x4;l.&#x18;&#x5;�&#xb;�&quot;gPm�&#x5;��X&#x19;��&#x14;&#x6;&#x5;��� SPwS��)�&#xc;P��)�ݔ�L&#x11;���&#x10;&#x1;�Z&#x1c;.���&#x10;�n��)&#xc;&#xd;
P��)��&#x14;�_&#xd;
&#x3;&#x0;&#x14;z��&#x1b;b.�r&#xd;
�3/n&lt;&#x4;����ii&#x8;�M��C ÚZ�2�+&#x15;����4&#x1d;�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�HL�0��_밬����i)��w�]���1�&gt;�&lt;����\9��܀�&#x16;�o*֮/x�&#x1f;��E&#x1d;V}d��aW]��&#x18;٧ƕ��B�V��c�i?\��?&gt;�&quot;��z�n��|Z�u�V불k���b�h�s��6`��kw.A{]w�,p�[&#x3;�YO;-p��};�&#x16;&#x10;�������Uh�T�Z���&#xf;�󳍚f��6�iޓ�n��&#x7;��&#x6;��{۩i&#xe;�]�����Uh&#x1b; d�bD����k@&#x1d;�o&apos;!������H�Z��&#x1;B��&amp;�O�J5���v&#x12;��&#x17;ꑵ��mo&#x11;�&#x6;&#x8;ُ/��O]��&#x6;�&#x3;}�$ds�zdm$d�&#x16;�m��]r&#xd;
�~=٥5�&#x1e;�����h�&#x1e;Y&#x1b;	Y��6@�N�&#x13;�~=��5����NBv�6f&#x1d;�#,�6�#&lt;�i}&#x1b;B��B�+0u�i#Qo&#x15;�&#x6;���S�����&#x19;�K&#xc;��&lt;�&gt;�P�3Q����/���Ϟ�&#x7f;��0&#x17;��w��&#x2;���*EE�ù?&lt;��)�7&#x1e;&#x1e;&#xe;��&#x1e;k&#x13;8�1TʌT�|�?�����vȴ��C��j��O&#x7f;���.�Ԃ�]ɼT*u&#x6;�ʜ:�&#x1b;����	*%Y+���Y�O���K/�&#xf;&#x15;��4&#x8;t���)ւ����u&quot;k�mo=����a�;�iЄ��Ȧ&#x14;�9&lt;R�[I�emg�AKd CVRF2ʍ~TƝ��G/r�u�uKJ�V�C&#x1d;����y��V�&#x8;����&apos;3��Ҹ��xQ�w�ַ0Vඡ�&#x11;*&#x19;�&#xe;��&#x11;%1��g��&gt;O�~r�㟙�f�FF&#x16;&#x6;՜w6&#x10;s&#x17;G�&#xf;�&#x6;�11&#x1b;_&#x8;&apos;��L88�ͫ�#��&#x13;L�K&#x7;�&#x90;o29D��&#x7;�q����&lt;�76&#x1f;&#x1f;�.D�&#x19;�g&gt;FS�cS��P�&#x1d;�&#x1d;&#x1b;�&#x12;&quot;�&quot;Ɍ&#x17;������}J~z,&lt;3�������&#xc;?\�?&#x16;��&quot;�h&gt;&gt;*&#x5;�T��&#xb;������Ty:���&#x16;鐲/&#x18;&#xc;&#xf;,�&#xb;��CJ&amp;&lt;;?&gt;4&#x1d;�W��^^	&#x14;&#x14;V�����ym�L��&#x16;���&#x16;�-��/&#x13;&#x12;��Is&#x12;�fb�4?&#x12;&#x19;YT����}��Rb�7?����~w(8�g�+&#xb;&#x3;�Cy���W&#x7;&#xb;A�lo94;��_��EN��Oz&#xd;
yE&#xe;�+��AR��˱j4E�&apos;��&#x19;9ӟK�&#xb;&#xc;��\��*�-�Rs*&#x19;J�u��WVa�&#x15;&#xe;�v�)m&apos;&#x1b;BUS&#x2;&#x16;���uF��u�����ϲ&#x4;�ؚ�a��t��&gt;��k��س����&#x1b;/{&apos;��W�P&lt;�(&#x1d;w��&#x13;t(;ln�i��J��&amp;&#x17;%M&#xe;��0d��CU�q��5H���#u��R�f��=_�͟|A��������[�Ȗ&#x1a;he��&#xb;Q59ct�7u��&#x12;Ԥ��x�LN��&#x17;�0��	\�\��@��[�b�����2q�&#xf;v�~%�-&#x14;�r�*&#x16;K�S�TbAơ��T��q�^&#x2;tQ1R)&#xf;�*&#x17;o�ɖ�&#x10;E&#x1d;&#x10;�v�&#x3;�[6&#x19;}�&#xd;
D��Z����&#xf;��DhV�&#x1b;&#x1c;����Z�Ke�fSӭ�H֦�y �R��neg����d$2��B&quot;Il5&#xe;�P�$�=F�&#x16;_-��&#x1c;�ow��&gt;X1��&amp;b�ck��:1�#*4E���Y��T��&#xe;�������-�&#x1;#�27ε�%���R�z�&#x1e;&#x1e;��E�a�/��=�L�&#xd;Fʹ`��	�~&#x7;�iM&#x1a;���ƤF����ss�M�&#x11;��Vh1{�79�ݱ�Yr�x&#x1;�c&#x13;����&#xd;
&#x7;��|&#x13;���&amp;cc�z����&#x1a;&#x10;�&#x7f;��Q|&amp;&#x1d;J�j��#��9&#x11;���մ��jr{�C��5&#x5;�����q��&#x18;6�&#x1e;Ԧ��6P|�E�&#x19;��&#x14;~�:w+5�8��*�^�,&#x1b;&#x16;�,��mx%�F~BS���&#xe;��&#x6;�&#x19;l����Y*��e�&#x3;�vM{���ʉ+&#x12;��N�&#x1d;��5�&#x4;DЙ�&#x1b;�&quot;�on6�%E�z&#x6;����==��|�&#x1e;&#x0;�&#x6;�\����O�βw;�r�m�$&#x4;y;&#x1a;#я��T�*&#x1e;��ñ@8&#x1;Xg_�f��e��[���a�9ЅoB�[�8rhT.��t��[ıPї7&#x17;�&#x3;*w&#x13;T�l6�tl�*�@ZmӲ��d�H��c��q�~�\9��%ͣ���+,H��2&#xe;)t��8��&#x4;��&#x1;�.k*B�9����e;o\)&#x19;&apos;&#x6;Y;��S��k���c����W�z�[�0$�P��NE_vPE���&#x1b;�2&#xe;�hN��;��#�b� ��V&#x12;���+b��&#x3;�T�O��&#x13;Rrf�(I&#x11;&#x1e;&#x12;&#xe;�A�N$���ݏ�6@;�^t@��D�&#x12;����.�&#x1a;&#x1b;&#x3;4��&#xe;�W*�z�՚�gA� �&gt;�~������`�9&#x1c;�J��&#x1d;Qo&#x1c;[�U��l��&#x3;&#x6;[&#x1f;���c락��+[�\��1&#x7;��kh��w�y��e�E&#x14;��Ղ��W�&#x1;�n�&#x1f;���&#x7f;��&#x2;�&amp;~�)/�&#x15;X����9as�ބ(W&#x1e;&#xc;Q��	��j&#xd;
ov�ޟ_{�I�&apos;�=��1z��&#x7f;�V���t�����c��&#x16;N��=�o�V�SC��G&#x1c;bl|:a���鄷��X�uv�S�w;���tZxJe��;-�&#x4;&#xe;J�-&#x17;=k�#^ap��q]���&apos;�܍Ð�+�~�P�ě&#xe;{�P��C�;�kNݒ&#x3;��&#x3;�ݶ:��c\��&#x1d;ﰎZ&#x19;V�`�d�Ԕ|s_^��&#x17;/ܺ&#x4;i�&#x6;�&#xe;�~w�qXmsH��#�&#x1;����^�CrD�G`�#I��&#x1a;�Mn,��&#x17;/�&#x1b;�,Hϋ|N�𗗾�l&#x1d;�]s�(&#x2;|ԌP�$��V���8/�&#x1c;�s�k|p11�����&#x1f;��&#x7f;��&#xd;��Ku&#x7;&#x17;�a&#x1d;����d������)[�8L��&#x1e;\���&#x1c;\&lt;բixH&#xf;.�r&#x3;l�+7�&#x6;�r�m`�&#x19;k&gt;�I�m��\�V&#x7f;�&#x6;��t�V�}H[}��i���h�&apos;�&#x7;�~��O�&#x1;u���4!U�ήäFk&#x8;��&#x7f;oLf�&gt;�P8M_&quot;�&#xc;�\&#xd;�����r̠dL5�Z�Q�����&#x1c;J&#x1f;i&#x18;2�U��gy|�(�&#xd;
��&#x18;&#x1a;)&#x17;ɝ$Ot��y&#x13;G��NRH�	�K�&#x5;B���H��&apos;8�-���$()�Ns��&#x1d;Vh&#x7;�4&#xe;wTӑ�&#x1;��,/&#x13;�5����f&#x16;Rx*�ΪR�Y�))�&#xd;
V�Z�l&#x13;�]���ˍF���-��h$4V3�e�&#x6;Z9&#x8;R�&#x10;&#x1f;ܶuY�}�9��\.&quot;��M�`���&#x1c;݆n�RV{�2�D�0&apos;�PӘ���z�B@��Z��,�E�R	&#x1e;��,�&#x16;!qgr�T�.�����&#x12;�I�=�;&#x1;%H*�ϋo�^��ګRph����qU�lN�nT��j4c�&#x13;��&#x3;�&apos;&#x1d;�|�P��&#x1f;�i&#x7;��U��m��/+J&#x19;z+�����7��]&gt;t����&#xc;b�B�Þ�R&#x6;���&#xd;
&lt;��Y�%-#�����X�1W&#x7f;E(W*_|BM|֎�_�L�=��Ө&#xf;Տ@�$�&gt;���p}�COyL����]��ܴlW���j2�i�sFq�� DZ����)���&apos;e�&#x1d;�&#x558;6e�v��q���G&#x19;Pqn��&#x7f;j�`u$��&#x3;(�v&#x19;�;&#x1a;d�L�4&#x15;���ׅ��0�f&#xd;(vncl&#x6;�&#x12;�#�&#xb;�ݘè�{��:�Xu�N���xOsR��;%c&#x4;��}WSXo^����:IH�@�e&#x1d;X�m��&apos;�Y��&#xe;R^�h�p�`c2��G�,&amp;�&lt;ͩ�9ว�&#x8;���&#x8;�3�M0V�&#x7;kn ��C���i��[s�A�&#x19;�V�i&#xd;�Z&amp;�&amp;&amp;&#x6;&#x2;YX���Kf�	�&#x13;�&#x1d;&#xc;��Q&#x7f;;Ϯn2!�&#x1d;�_P?!&#x17;H&#x3;&#xe;�&#x6;����j���Z[��9�YmR��f�]_fX�&#x1a;&quot;�=�x��������&#x5f9;a�l�K�&#xc;N�m����v���&#x18;�r���8���T�&#x8;�OVd-���5��r&#xf;�!s�c�|k��&#x12;&#x10;9���ok*&#x1;�ZOs��~&#x18;�&#x1b;�rep��r����&#xb;&#x7;E�[6F&#x8;�ؾ&lt;}��&quot;&#x7;;�&#x3;�W��^a:~&#xd;�1���&amp;�/�&#x18;[���w�t&gt;�D9��e&#x11;�N9�މ�ќ2�&#x18;[-�CM��?-�]&#xc;4/[v(;`��&#x11;D_�&#x1a;eW�ҝ��&#x7f;M�1�Ȟ�&#x1f;&#x14;��^ޛW&#x13;�g�Iԥ���B��&#x10;�Y�u~{&#x1f;n��&#xf;a��c��8���&amp;�y���h1�.YܱV �x�Q�&#x1d;�9&apos;�#���\&apos;s��[v&#x10;&#x1b;ĭ;Z���rK^OnѮ����&#x12;&#x1b;�w��Bk����&#x3;&#x16;֫*2�^�&#xd;&#x16;��	�G&#x10;��?ڂQpu�&#x11;�ol&#x14;&#xc;�~(�Z1&#xb;��n&#xf;�Q��^��O�e&#x1f;&#xd;
�p��8��4r���k�갶�X�&#x1a;��+ˎr9����&#x14;��&#xd;��Cwc���&#x16;D�GME�ք�D�n¬���&amp;.k)�w�m�L�9p��&#x2;��MƊQH4{x,&#xe;�ě&amp;�U��.c1�j�_&#x1b;us�¢N�N�����!�&#x7f;|�&amp;{�5_��dQI[m��xC8�Iv�&quot;�N��&#x1f;g�NZf�ۏ&#xb;I��{��q&#x7;S=����&#x1f;�˜�{ל��&amp;wu��.x�&#x2;Iji��&#x11;���&#xd;���&#x18;�D�4�Q&#x14;G��������v�&#xb;ܮn�ۮ|2��-+�xtW��}WFV���&#x14;���6��T)���խ&#x7f;�Jɸ�-�P�&#x11;H�/��&#x0;�m�]M��~&#x7f;&#x1c;{��6K����&#x17;�cC_�K�g��&#x7;n:���Ol2gj�|҈&quot;{*��P�&#x13;��d&#xd;�C�̕&#x7f;�.�&#x7f;FN!��C7:�wo�&#x13; ~-?��WZ&#x19;24TcE!�b%�kO�-�&#x6;&#xd;
�&#x1b;��FC&#x8;&#x16;#a&#xd;
X&#x0;N�=��qe�������*�;��1�*kLd1�^��0,i&#x12;|��&#x12;���&#x4;��&#x2;)�S&lt;���&#x4;�JnFL�n��&#x5;wR�(IN�y�b1�z��&#xf;���&#x4;�&#x13;n�#��&#x1e;���&#xc;���^&#x1f;��0�8Q�A&#x7;�����??��&#x3;P��|)&#x16;�0P�(G�j�5�p���&#xe;&#x15;��W����*��r��&#x1e;�9:&#x15;&#x19;l�^�qךi&#x3;t)���N&#x1a;����p����&#x15;&#x1a;&#x1;4&#x0;p���O�&#x13;�v�R����,�b�~W��S��bw&#x12;&quot;��`Ij&apos;A&#x10;�s�փr&#x11;�{��8)���H&amp;�&#x4;�&#x5;=yW7������Z	�ͭ&#x4;;��͍������&#xc;RB_��@&gt;k&#xd;&#x12;{&#x12;��&amp;a&#x14;ry�E�&#x2;c�&#x2;��&#x0;����~j կ�xc&#xb;���&#xc;&amp;���&#xd;�&#x5;���c3D&amp;2R�|D)�s&#xf;������O��T_6;����y&#x7f;O8&#x18;&#xe;悑&lt;����3&#xb;trt�P�(1b�Mi&#x13;	�%#��h����=��B`�/���&lt;c�č�)Q)&#x10;)�&#x6;��L���2��I�㞈&#x16;&#x16;Ƽ�1&#x1f;YT�d24�P�LL��q__UU�y�y�hF��e��ȴ7&#x13;!&#x13;��� &#xe;��##��&#x12;�{ة4?D�auf�&#x7f;fX�&#x11;�&#xb;9q^�/�a��E�P�tn`��O&#x11;�B�&#x7f;j�#SхQnb�&#x1c;�&#x4;c�	F��&#x15;����L&#x10;*�&#x1f;&#xf;&#x14;���&amp;�x�ߟ&#xd;
3�Yj4�[�|�&#x1;o����fJ��!�`�W��t���B�d��pj9:W�_��S��x��&#xf;&#xf;z�&#x11;9ivj:&#x17;&#x1f;&apos;�a13R&#xd;I���\_86�02I�c�(�ƫ�b^��&#xd;
�.&#x4;�%�㋏�&#x16;�&#x11;���&#xc;9L�CJ���U�T�$&#x8b;�b =�&#xb;yzvl��?�&#x1d;�Ȧ���x?Ǐe��&#x14;�&#xb;T���&#x16;&apos;b�@x�`��25&#x1b;&#x18;&#x16;�Ujlr47�p�ˑ���]&#xc;K��&#x5;9�Oz��|$&#x1f;�/���H?�MN��&#x1;Z�W��zKy�&#x17;��&#x15;�dw��q��Ewx4��&#xb;E��&#x13;^ȱ�3c���&#x7f;�D��&#xd;
SM�~O�&quot;&#x12;��&#xc;&#x13;�qq�R	�TY����3}����D2?&#x1f;�,���gFG�}U-�&#x4;&#x17;�Zd249��z���L�۝�0!��&#x16;&#x16;�q&amp;3&#x18;-�{&#x6;5&#x10;&#xd;o�֗Z&#x18;����p��O��&#x2;�A��{��ĤG&#x6;�&#xd;
ӳ�~�f&#x17;w0ηlYnv��X�nhi���pm��e��L@Ռn�d��͆}�/ҿF��&#x6;&#x1f;�f8����P��&#x1b;&#x3;&#x3;}��餯�7&#x10;���X�aG�&#x1;&quot;���nwkr��*%��&#xb;/&#x19;��v�&#x1e;W����d7&#x1e;��	$M��&#x8;V����N�&#x2;�N�;�J��O�� �L��_co]6��w�񃻺�_���&#xd;
�UKe�Tޝ��%P&#x12;��%S}&#x19;�E�&apos;��?��9�c�{^�\�	�#~�dC��dL&quot;���LN�&#xe;P&#xd;
74%��d.�.��S3������d�:�O&#x15;�����&#xf;jY*&#x18;vO&#x1c;T�;K�*&#x13;�3&#xb;&#x13;3����l��1�̠g��sÔ&#x14;�e�%�b�h*T����3�Dpd�2&gt;�W(��&#x17;呬!tN4{�k���&apos;ֿi��P�A96���&#x17;�|�4&#x11;�z��o��&#x10;&apos;���&#x1a;&lt;��2��\&#x6;�hNݴ�2�&amp;�A�&#x1e;&#x17;�01��I��@2䣤�|�&#x7f;b�=&#x1f;V�抅�&#x11;�D�:&#x1e;)d&quot;c�&#x1c;7?�O�&#xd;
���Jl�U�#&#x7;%��)mZ�&#xd;
�h~j|�*.z&#x7;�T^�R�Q7�H&#xe;�����lD({&amp;�ؾ�,7;:&gt;�y���y*B&#xd;&#xe;D����p�&#x15;|�/�&#x1d;_(����d��ҩĢ�����&#x18;ꛓ��A�H�z�/&#x1f;H&#xc;$c�T��k	FQ�J��Rb5&#x15;��Ī63�&#x1d;�&#x1e;&quot;=|�*�����B���r�}�ِ&#x14;,�&#x17;�(&#x19;&#x1f;&amp;b�3}&#xb;3�q�af�酩����?��&#xf;z&apos;�徲2&#x11;�&#xf;�&#x5;�ӳsc\��f��H`�ꟊ&#x5;i?&#x1b;&#x11;�`}�	&gt;18[����@z&lt;V&#x16;��B)��{&#x7;Ǚ�H�x!��������B~.:&#x14;ɰ&#xb;�S&#x1e;%��&#xf;��&#xd;ϧ�&#x11;Ic�&#x12;}��&lt;��m&#x10;����m�U��*�6&#x18;��b���&#x7f;|&lt;E��i�{�c�At8&#x1c;Ԗ�*Iy7I&#x12;x�#�&#xb;$+��y^&#x10;����t�a�N�Scm�&#xab1c;��b�E&apos;`N�����Z�&#x7;��O7&#x7b6;��h�*&apos;&#x0;�&lt;Y���X&#xb;Bx�wyW:�EhB�wmq��&#xb;&#xf;ll����&#xe;���򻚔���×�&amp;�Q&#x1d;@�[�K����&amp;{�-A�6&#x12;k&#x6;�i&#x13;��q�#�;�=���uښ�&#x7f;��&#xd;&#x1f;��Ğv&#x18;�=�[&#x13;�q���5�&#x17;~D�ڽ�:����^b��Y���&#xe;&#x17;�Zۊ�!g�UH�Ɯu�N�pᬵ�I&#x1b;r��&amp;$]�u��2�e&#x1d;��&#x17;�k���]W,ϐt*�0�K�é&#xe;��aH�&#x15;�~�P&#x5fe;��aH�&#x15;&#x1d;o�P&#x5fe;��&#x1d;Y�&#x1;�w/y����&#xe;&#x1c;mL�w�y�F&apos;��&#x1d;�5	ܾ��O򿸮ci��&#xc;���&#xc;&#x7;&#x11;��͝���T*�&#xe;U��ܘ���n�&#x5;U��RQ�)et�&#x3;�T�hrT.o֝�&#x13;�v���&#x8;&#x13;ۓ�&#x7;���&#x1d;�&#x1a;�uS������9c��������n�&#xe;�^7X�Si���q�2qk&#xe;��uC&#x1c;��n�@�e���^���y�&#x15;=����5��O4&#x3;�g4)�MZ��um��6�՟ܠՓ��Փ��՟�&#x11;��[��ǖM�q��3�VM֧�b�y��Zٯ&#x1c;��K�&gt;-&#x14;&#xf;���m��F&apos;�&gt;�&quot;�&#xd;8�4�a�&#xe;�-�о��/}��O����7&lt;WX�~z��ﯜ��:�sЁ�,�H�+��s�E&#x1b;���� #���l��l��&#x4;&#xb;�p&#xd;&#x1e;ܳm�����^���.zuҳ�zu�2���MJ}�&#x3;�o�M9��.s&#x87;3�{�|nN��Ęj�&#x3;�5\6TΥzH�c�UEӎ��&#xe;X&#x7f;q�&apos;�m�&#x12;��&#x8;&#x18;��@&#x13;�F�=�v!�E٣�t�����K�DJ�&quot;w���EY�ʪ�y��/mBҍt��ۖ&#x1b;&amp;��(�(�uD&#x14;_���-�Ňx�nϺ�8�|���&#x19;~���|�_�&#x7fb;۳�&gt;&#xe;��T�z�8WxV�8�!�q�C��\��&#x0;&#x1f;g��l���{U&#xd;(a��v����7X�e����zz�&#xd;֣&#x1e;0&#xc;֗4)�U&#xe;����&#x7f;��1�k�6�|�&#x18;�wT�N蜔ܭ`nlZ&#x15;�ۏ1V�9��������rZ�Kٰ,���jF�&#x13;֤&#x3;�&#xb;�&#x18;&#xd;
&#x19;#&#x4;u�-1qĜڶ2W�X����#�&lt;&#x8;f�f��13#&#xe;&#x10;N&#x8;LV���l&#x12;�=&#x16;z�6�&#x1b;&#x1e;����&#x15;&#xc;&#x6;��J&#x1;�&#x2;�	��&#x2;kv���y�&#x1b;&#x17;���F�O5ioι\&#x1a;�~Ϲ`�5ȃ�f�Jް�W&#x0;��1C�{J�m��;q�)�&#x3; 6�W�S&#x1;y�79Q�����f��̎�p�BR���d&lt;�r��sn&#xf;W�̒Bdb���s̾&#x0;=��/D�&#xc;�П���2�w&amp;9B��ӕX/�c�&lt;��&#x16;S�@apA���������&#x19;��_$E�?�&#x17;K| ����|�PvT&#x12;���RƝb��X*?U���c�q/C(���b|l!ػؿC�&#x7;*&#x1a;���&#x6;�)zpP&#x13;�}�|uG!:��&#x18;&#x1d;�(�MͤsYen_.&#x19;��K&#x3;U��,T�\`b:J/���&lt;U-N��&#x19;R٧��Fz&#x17;�U�3�&#x1d;�,�V�K��T%855�Z����gG8���p�U~d*&#x16;�Ϋ�&#xc;721�#�&#x1b;&#x1f;&#x1e;�&#xb;\$Tf&#x6;�*��섟�����A&#x7f;��KI�&#x15;a&lt;I�����&#x8;92%�&#x15;�O�����.&#x7;Gf��;F�h��S�F*��h�&#x18;�&#x6;����&#x11;A&#x1a;����;DE�����p���(&#xd;�%��LV)�&#x19;�d�c&quot;���pW	O2&#x1b;&#x1c;-Ͱs��74؟$�&#x1d;&lt;_���|��?&#x13;&#xf;&#x6;�e�WB�̎�IA&#xb;���X���KE�gs9&#xf;���[L&#x13;��x�&quot;&apos;+���B�o~x��cA��F�^q����H���s�&#x1d;&#x3;E&gt;�����Lj&quot;�NOS�rj~dGdph�&#x18;��G�G�	mlvx2��F�p�*�Dx�&lt;&#x11;&#x1b;&#x1d;R&#x3;�9e:&#x11;%�N��&#x1a;�+&#x1d;&#x1a;]r���L�&#x1a;]&#x15;��E�&#x1b;]��&#x1b;�|fS�F��#-�H&#xb;j�&#x16;�z�S���&#x1f;���&#x16;t&#x6;&#xf;��I�O&#x5;rJ�hQ%�&#x5;�뙐���&quot;D7��K&#x19;NL��$M�%���&#xc;�H�&#x14;��&#x4;7i�][&#x3;�)��&#xe;&#x10;^����I��s&#x19;��&#xe;&#x1d;�&#x18;s&#x1e;E#6�.&#x16;	��Jra)o�U&#x16;�d�J�Ғ;�	���&#x12;�[$e���DBb8�!R�|V�������&#x6;&#xd;
�����L�\&#x1b;+uN� &gt;���y�vs���*o���%&#x13;�jƾ&#x1d;�[!�=�2ɚ&#x13;��&#x5;�:���V�z&#xf;I�&#x19;�&apos;&#x12;�$���&#xc;!sn	��&amp;8BJ�I)����fM�&#x11;&#x11;/{���c&#xc;q�&#x19;���&#xd;
|R&gt;Y��WL�x�S�k&#x1c;O�W��S&#x1f;���^&#x1c;���Ska����&#x2;�V��&#x16;�Y�&#x6;)k6z;��vb�u�s�̺&gt;�\ӿ&#xd;K&#x19;9�[����p���r]���ϸw��Xܹ쒇r	M�&#x16;������ŉH�0���{��S�yT��߉�_�n(f�)n(���l(&amp;p2�L&amp;&#x12;��&#x6;(�$)�E*�rӼ�&#xb;|���	^�P�&#xf;&#x4;&lt;��&#x15;�&#x1e;� �&#x7f;�&#x13;n&#xf;�&#xb;n�g�&#x1;����&#x19;�&#x1a;&apos;�}�A6�aC��e©Vw;Ԫ�w&#x13;��ï�_�&#xd;c}F�O6��х���K?�~&#x7;k��m���&#x1a;p&#x6;&#x1e;s�dgD��&#x1;M�&#x7;lk&#x5;���]w�o^57�O]���&#xf;_8��e�&#x18;;l���m���l]FOO�&#x14;)E��2�)ò�&#x2;&#xb;k&#x3;�&#x17;��y0&#x12;�.�;H�&apos;�����&quot;�&#x1c;��&#x18;��I��m�]J����M&amp;��0�N�j�TF��&#xb;�a�ԦC���R*)�0&#x2;oL�H&#xd;��&#x0;k;�%&#x15;}2��d�B�L�o*=&#x11;&#x18;�&#x18;�	�&#x13;�h&quot;��&#x13;��$�O&#xd;&#x14;��&#xb;�j�������=�&lt;ֿ(&#x5;�q����Bi~hrt!��/%�*�-f&quot;Sq%&#x1a;�&#x1d;�)x���A�&#x1c;����l?&apos;P�!)Q���Ҵ:&#x19;����g�����&#x1d;�ɖ���P2^&#x1d;&#x16;&#x93;B&amp;��&#xf;K)�S�}��M7��-_���D˪���ѕz�9ݨ����&#x15;��+7&amp;U��~` (^&apos;FM:4���[�(F&#x17;pw��������&#x4;�&gt;&#x7;�q�d����u�s��#�y�&#x1f;����VO���˕&#x17;t��(��&#x1d;�늭l&#x1c;��-|f�&#x19;����+4c|&#x0;�v\&#x11;�tBu���&gt;=��;�����	�gvX��&#x1a;i�镵��̤+&apos;���?][�ň�&#x19;o2����W&gt;K��w=z�*��[n;pぎ%&#xf;KI�2&#x15;�ܤ��SZK���u,m��x�n�G�&#x1a;$&#x1;݂J�,)Iy�&gt;%�T�K�Y��Z��&#x1d;_\�y�F�&#xf;oiL��W&#x1d;���a��wX���He،�ؽE��~��e���y�0��(�K�&#x11;AQC�E��͍�&#x13;#=�����&quot;&#x11;�%�B�:�&#x16;�����&#x12;��8#���U��X�͒loh �,�&#x4;�̨���O&#xd;
&#x14;��&gt;b�%�*Du�O�V��1f�;&#x1f;�3�&#x3;��W�!TMI��&quot;&#x13;�g&lt;��&#x12;51&#x15;��(�84TX&#x1c;�&#xe;F{���)%5�&#xe;�f�b~.4�&#x1b;���{&#x2;�x�D�&#xf;�r#�y��Q��&#x11;/O�xa:X&#xc;��r�/��Je�8_&#x18;`���}���*&#x11;&#xb;e��\Eq�&#x1e;&#x7f;o?A���H�����%��&#x4;���Iaaa,��˥���hn0�^�+�&#xb;L&gt;^�h��x�896&#x1c;)���c#^mJ&#x15;&#x85;��B9�d��Č&apos;.�U%ѷ0�&#x1e;`c������������}T2��3rX�&#xd;
�H&#x15;8�V&#xb;C���e�gd�-&#xd;�&#xf;�&lt;�|�?8&#x10;&apos;��|003�ٗ��|29?�W�G����H9:�&#x1e;��&#x15;���K٨04�����&#x17;�)��&#xe;&apos;&#x16;&apos;&#x7;�KfߵO��&#x1c;�c���Ns�S�d-�� &#xf;����F��c�u��c&#x1a;;��_�#�蝧Չ���x�&#x19;@x誫�N��=7^�g����&#xf;M&#x7f;�&#x10;�n�m���Z&#x1a;פb��4�&#x0;&#x12;��&#x1e;Q��Ʈ��R&#x90;�&#x14;&#x8;8�&gt;�&#x1e;&#x1;&apos;Q��v�|�Q�������&#x7f;�X&gt;&#x14;���x�E��Dw&#x2;c&#x3;|�M&#xd;
DZv�)�q3,&#x378;&#x13;,�r�&#x14;GKi�&#x13;II�I�&#xe;毣�14�&#x7f;j�&#xc;�&#x12;T�j�&#x4;�h����a.�fFͽ��gM�M&#xd;�o�&#x2;�K8�E*�E�&#x8;zag�x�R���&#x18;�:���(�#��Hq&#x11;f&#x1f;tBG�.&#xd;
GM;&apos;�C�p�?:�&#x1f;��&#xc;���&#x1;��&#x3;~�����X&#xe;ػ�Nԩ+[tp̊W�t�*�ٿA��V&#x1c;�&#x15;�},W&#x0;g&#x4;z@�X�|��lȒ�&#x1b;#��Vcֳ��Ǘ�&#x1b;&#xb;%V&#xe;}D�^���Up�S~&#x5;&#x1c;&quot;Y&#x1f;�9عbDG�������c�a~j128�*&#x4;1�dg&#x16;�G�{���&#x5;���&#x3;&#x1;*=���ϒ&#xb;ف�&#xe;��g������7��&#x1d;�:�*��Z;��&#x4;�a&#xe;g��&#xd;��k�&#x3;k�_��Z:�0�$G�	Y&#x10;�L�$�&#x12;�H��4�I4+0&#x12;��&#x7;�&#x8;_���&#x12;��&apos;y���&#xd;
�[�	�&#x1d;�y����&#x8;V$�q�ا&#x1d;d��&#x1a;X���n�Z�����&#x7f;Z&#x19;_f�&apos;���?�&#xc;���&#x16;P�����q�(F���&#x18;坮&amp;1�d�8�Q��&#xb;�#�3I�lv P������[�g�\!�&#x16;��O���P*��&#xe;ы��8�&#x15;	�_�����&#x19;J�U��ީ�p)3��N,��U�C�)F&#x1e;�Ɔđ�&#x18;��&amp;�&#x3;��H���)i@	&#xe;�WG&#x16;��w������+,Bu��&gt;&#x2;�&apos;&#x7;���͙Sx^먬�_3���&#x2;�NQ��&#x7;)�/&#x1d;FSp�i�tW&lt;�&#x1e;&apos;��3������#��_���U���K��,����&#x7f;l,$��RZS���jw$65�&#x1f;��NJY�&#x1d;&#x1e;��)�&#x1c;�����`v� y��3�C���&#x14;�&#x1d;&#x1c;S�&#x5;�����yw?���Ƌ�N]ï&#x1d;���l5��U�&#x6;�X0M�w&#xd;F�&#xd;
�b)W*/�&#xe;�&#x3;�ƏGz�#��a�[��&#x10;&#x1a;�A�8Z&#x10;X��I�&#x14;&#x4;z&#x7;�&#x8;�Bj#ن�Ш�&#x4;C�&#x1c;�# �?&#xc;�&#x14;~�&#x6;�&#x1b;)·ސ���1|aL��xC&#x1f;ހ_&quot;�&#xc;|&#x19;�G��1��mccx��&#xd;&#x10;&#x7f;Z�V�Y��ҵ&#x13;��e�9t=�mƪN����NZ�C�&gt;�c���&#x8;@�����&#x1d;Y�t$�|��e2�Ŭ%M�T&#x13;�ujf&#x1f;ph��{��?�&amp;�cS2ڈ&gt;�y�Q�,���m�;�x�设��Et�2Ц���^JN�����T	��D�����u�ӕ�,��}OẀf�{�U)zmVAu~GcT��&#xc;&#x1f;�&#x1a;��洸�Q��x��&#x5;��6���i�k5&#x7f;���V��(H:P��Ƨ&#x1b;݈�&#x7f;ԱR����&#xb;Z&#x1c;�ny\&#x1a;&#x17;��&#x1a;�M�)(�-�[�&gt;�{}�ޛ&#x17;κ�_n�普&#xb;&#x3;�&#xe;G���u&#x13;�j&amp;����f��&#x16;�_&#xb;Y~&#x5;&#xf;�Ju8��ޡy&#x1e;}|sU��&apos;?OU��B-;�78&#x0;���͗[�^&#xd;�&#x1;Z&#x1b;�uZ����ږ�Ҥ&#x1f;&#x6;�&#x15;��pJ�w;A��a��u���B��cج&#x13;&#x2;�k����/)���­M5�D�i��5�ܤ�y�B&#x1f;IŧV&#x19;�|&#x11;&#x14;}i˓E�&#x18;�&gt;&#x16;i8��x��p9-��ر˻�Z/B0_7�N�Җ�b&amp;�1/�&#x1a;��F���Tt2웊E&#x6;��N�mƔ.&#x7;5#��&#x13;�)(`8�:!�䚦��&amp;#&lt;j�&#x2;T�&apos;��s��V�[&#x16;&#x1e;S�j�&#xe;�;�&#x1c;&#x1d;;-�6i�&lt;���%R�{�C�7ܥ&#xd;��&#x1f;�u�:L�-&#x11;�$&#x14;(V���&#xd;
�&#x1d;&#xe;�Krf�9&#x11;�p&quot;�.&#x1b;�&#x1c;�X&#x10;���;Q����y��@̽O�yK&#xd;��H��H���̎&#x8;�&#x11;A=&#x12;�&lt;D��p֑�u0&#x1a;/��5�&lt;���&#x1a;F!���6&#x1b;�&#x19;���1&#x8;��L�h&#x4;#�,�m���&#x13;l�X���dh���N��S�&#x12;��&#x1e;&gt;ٰ�ux���p�&#x1f;�w�&#x1d;M&#x10;�&#xe;&#x8;*�&#x1a;&#x3;�&apos;����z�G&#x7;XS jҗ�43s�@��&#x1;Ļ��?&#x1f;ob��&#x8;&#x0;�F�//KZ\��L�d&#xe;��(p&#x1a;}&#x19;&#x74b;4���j&#xe;�&#x1d;��[&#xc;w8����/@&#x0;g&#x1c;6��e��o�&#xd;;�h.�]�aǫ�I�BY��ek��K���6*�bC�V�σ�w��&apos;��U�d;,um�U#S��(&#x8;�l�.��7���,om�5իa&#x16;��?{d&#x1d;&#x16;&#xb;�h�b!;&#xd;
��O�.���&apos;���87{Nַ;�CT�+���43�R:��3�|踚&#x0;��\+�&#xf;��$+Kɔ;�&#xb;����[���R)&quot;���&#x4;+��!X&gt;$&gt;[?O���&#x13;����!��&gt;���3�}�&#x10;J�&#x4;O���h�,H&lt;7��L0��Y�SmTP;��T��}L�&#x16;y&#x11;�}|O�s�u8S�c&#xe;�&#x1a;{&#x7;n�ojF���c&#x4;B&#x1b;Lk�(g�&#x13;�*&#xd;:UN%&#x4;	tjJ&#x12;أ���ZA��&#xd;
,�	&lt;!�&#x14;��D&#x12;,͐���&#x1b;&#x8;D�&#x17;8U�&#xe;Չ&lt;�iMgi~���Z&#x19;t��&amp;�֜�Z�&#x15;w&#x7f;��X�����&#xf;&#xd;�����7=�&lt;|���yl�6}ˏ&#x1c;�q��b�a 4�zz�m&#x2;���&#x1a;=�&#x11;��v;4&#x12;,s�,S��G������w|���&#xf;&gt;��&#x1f;_&quot;�܁���&#x8;�&#x1f;;�M�&#x1a;�Q�H_��&#x4;I�D�F�&#xc;-&#x3;&#x1d;Gi�r��&#x8;&#xb;*�[&#x1c;���2k&#x19;0���&#x1d;��Qs&gt;��H����g��W�X}}j��糎�kV{��_�@l�&#x6;&#xd;&apos;��+[ݠ&#x1;&apos;&#x1e;w��A&#x3;$&#x4;�r��&#xc;H�`)^�hRJ��I�&lt;&#xe;��G��g�VRO7v�&#x19;��B�R��n�&#x18;�&#xe;(�&#x1f;�o&gt;�&#x1d;���y�&#x16;#4l�&#x2;a&#x1a;&#x1c;m�����ao잝 ��&#xd;Z��&#x13;n�Dmߨ�gN���&#x5;�\���j.@�I��Z�9*&#x15;��!�]�&#x12;#f�&#x1f;&#x1b;������7&apos;�&#xd;����o�&#x7f;���&#xe;%&gt;h���&#x12;c�v0Z��Q&#x5f6;vmx&#x5;&#xf;8��gn�&#x557;Zm�7v&#x18;;Į�݊&#x17;\ǚ�|�ޜ�Ԩ:W�ˊ&#x1d;cс	&#x17;\���&#x1d;�r�9�o��&apos;�W�r*��V&#x14;�h�f~�ddv��N����$��\���M&#xf;&#x1e;�^�0�dE&#x3;�&#x11;��f&#xc;� �c�!��q6��&#xd;�BGG�iz�i�N.]�&#xe;F��*��Z���BQ_n&#x13;��%&#xd;&#x17;|������^RK��&#x1b;&#x11;m�7&#x14;m�YZ�^�t&#x16;;uot5��&apos;n�^d������O�0��N�Ʒ�N�@�&quot;��&#x1d;�i�&#xc;?W��;&#xe;��_o5��&#x13;,KFg�5G⢺T#�&#x2;bY��&#xe;�H}�T-�t�f���m:=�u�����Q�[��{/:��8��e��{����{�&#xe;�qhXr���nG�Zp��ޚ�&#x1a;l�ޚ��&#x1d;�{k�a��ޚ�ϵ�ޚ�ʿU`�&lt;wdo���ִSk�6��&#x17;�֛9N&lt;�&#x1;Gy&gt;��(O�&#x1e;��&#x1d;��&lt;�ۀ�&lt;_���;5�*����?^�7�F2��d�ZW�dF�.�?�C�i���V�=��3�m&#x6;�C&#xf;�&#x1c;W&#x17;\,�5�Z8��UL��\-`���q�wP�oj@���N&#x7;�&#x1e;x�&#x1e;Y&#x1b;5�V�m@c&#xc;}�o?!&#x1b;�&#x1;����I�������H�Z��&#x1;B��&#x6;�nJBqm݊�l��!FZO&apos;�Xx�k���7m�T&#x1c;4��:���&#x5;�|�5����ҧ�&amp;ȍ�k6��(�B&#x1b;�&#x13;~Ϩ���0&#x15;&#x13;���o�&#x1f;�/���&#x5fc;�)v�&#x7;���+wX�|���˕Ґ&#xd;
E�:F\Q&apos;��1M1�&#x17;��g&#xe;�Ѽ́h�y&#x1e;��a�g��E&#x14;&#x18;�����&#x1e;��u&quot;�����&#x18;�&#x12;&#x1a;�Ri&amp;X(�w��2���&gt;��kj��	��Ў&#xf;A��&#xd;
$&apos;D%&#x7;&quot;~����W%b�&#x5;&#x11;�	Ҥ��}�{O=�,e��������D��p�ū/��é�����ȹ�0j�7Ľճ\��Qp(}�擾д&#xf;8�&lt;$q�&gt;`E��&#xe;������Zi��!�&#x8;kĄ��?�����&#x1f;�}��G���w�^~���nk$�8�NU�7b����������Ʃ��C��)_��&#x5;&gt;Ѥ@W&#x13;�&#x1d;&#x1a;�i��[�&#x1b;��&#x14;&#x3;{&#x3;�(�&#x0;&#x1c;D�z{���&#x1b;鮧ħ�&#x1e;z���&#x1f;��zt����Y򈡍�P�,��&#xc;�]`&#x1e;&apos;�&quot;S&#x1f;��$g+��A&#xf;�K��)+&#x0;�&#xf;8a�&#x1c;0]|�ߟ�&#x14;�+&#xf;&#x2;S3��&#x1c;&#x0;����M&#x1;�&#xe;&#x12;&#x0;�a�K�p6 �&#xe;2�=c��2��&lt;e�n&lt;І$逄���&#x7f;uF�&#x7;��&#x1b; �G��&#xe;�`�B�mf�1u&#xb;¨&#xd;¸&#x3;�G��⛜!����&#x10;�%3e��(�2\N�N;&#x8;C�K��xSa�o&#xe;�6&#x10;�Q0����J���-�Fx[xz�����N���o�g\ԡW���îګ?i� �q�&#xe;&apos;E�j�w�:퇫&#x16;���U��Z��-*�W���9�-�&#xd;
}�^^���o&#x15;�&#x6;���^-�_��&#x1a;P��v�z&gt;��zdm$d�B�&#x0;!�&gt;��~BvC&#xd;�3�v&#x12;����&#x1e;Y&#x1b;	Y��6@�&#x1e;&#x1b;�����w5��#�$d�&#x7f;C=�6&#x12;�V�m��&#xd;_���,��&#x1a;P/�n&apos;!�]�&#x1e;Y&#x1b;	Y��6@���_�ֹ�y�jߖ�m&#x0;�x&#xb;�&#x7;L��J[&#xd;
&#x8;�0Lj�&#xd;��paꉬ��/����Z��P���Kۯ?=�&#x6;�&#xf;w���&#x7f;��KW&#xc;�m^��4���5x����m:��&#x8;��&#xe;�7` �%5M�&#xe;sȄ��&#x7f;&gt;��w.�w�ѯ�����L��;�B��J&#x1;�!&#x19;��K:a?a.�]J��&#x19;V����駕�{Q8&#x15;v�Y��L�C�!�T&#x1e;�&#x13;c9�J&#x19;�@Ĳ�B��g�}ņ&gt;g����n��S�X&#xb;^F�&amp;����e5�?&#xe;Y/o�&#xd;}	����A&#x10;�ݙ&#x1d;�&#x15;&#xe;��6�C��&#xb;&#xe;�����9MH�f&#x7;����i&#x3;��&#x4;7H&#x1e;t�ɨ����4&#xc;����W2�W&#x0;p�&#xd;&#xd;�V�&#xd;
!t�:h��n���dYׂ֧&#x13;�}&amp;���s�e����s��_�&#x17;梾��0Q�*ʪRTd=��ã���&#x1b;&#xf;&#xf;�e���S&#x8f;�RF����&#x7f;�;&#x1d;A���ĩ�C��j��O&#x7f;���.c��rڮd^*�:�AeN��5}��&apos;&#x4;�qGJ�O���K/�����&#x3;��&#x1e;O��&#x7f;�	�G&gt;h�&quot;���u�&#xd;�5��{���?���ϟ��&#x1d;����lm�o`T�V[���&#x19;�[Ot���k�{z� �ʨ���o��=&#x1f;�K��&#x6;����i�r�&#x7bb;\�h���7W�����Eh&#x1b;`����z�xK�_�K��[�&#x16;�sO��~�^g&#xd;���j��g&#x6;ꑵSd�Eh&#x1b; �7&lt;�&#xc;�[�%2Z&#x3;�ul;	���:dm$d�B�&#x0;!��_�i?!��&#x1a;P�}n;	�-��C�FB�*�����ݽ�&apos;dC5���V��Ƕzꐵ���&#xd;
m&#x3;��&#xf;z��&amp;�\&#xd;��m5Z}�&#x1f;ꑵ���&#xd;
m&#x3;�l������jA�&#x13;l&apos;!���둵���&#xd;
m&#x3;��7�گ&apos;�&#x5;u{�����z=�6&#x12;2�Eh&#x1b; d����_O�\&#xd;�&#x7b6;�Wz�&apos;ꑵ���&#xd;
m&#x3;�l:�o?!�׀:�V=�gn�Cp�&#xd;
���^�&#x7;5�O&apos;&#x14;�7�a/y��&#xd;n��u&#x1d;���&#x7f;���o0�&quot;c�z|�&#x1e;�����q8�{D��pƶ;�[U&#x1b;u��B�&#x8;SO&#xc;�C��&#x4;�&#x7f;ϹFo�֧���&#x3;��38��&#x6;��/k�n��zdm$�B�&#x0;Q�&#x11;��O�.�&#x1;u���$d&#xf;i���H�Z��&#x1;B��������[&#x3;�xb;	������H�Z��&#x1;Bv��`�y5�Ԁ�9�NB�Ѿzdm$d�B�&#x0;!+=&#x15;l���R&#x3;�[m�.�tj�&#xe;Y&#x1b;	Y��6@�&#x1e;��@��d?�&#x1;u�+�I�^���:dm$d�Bۈmľ5�~=Y&#x7f;&#xd;(�����&#x1e;&#x1d;�C�FB�*�&#xd;&#x10;���t��z�OԀ:~���,�D=�6&#x12;�V�m����&#xd;�_Ovf&#xd;��@;	��_&#x1d;Z��&#x19;fx�M&#x1f;9�&#x7;5�O&apos;&#x14;�7��2[��&lt;n���&#x1a;�&lt;��_�&#xc;b�a��.&#x3;�^&#x1b;,�&#x6;km�3��H��&#x19;v4O8H͖-˧0��$UE?�i��آ&#x10;��&#x7;ix�4����y&#x15;P5CzJ���&#xd;
��p���b+_$��?�����7��9&#x13;�,�2D��q���&#x16;��}՝���&#x1f;��&#x8;��[3�$ݽ�*�ʻ&#x19;fW��eWr�xwI�I&#x7f;�	HN��^�����uK�`?��f�Hc|�Eh&#x1b;�1�{.�&#xe;]�����_�w}֧���o&#x8;��q��&#x1a;P�/o&apos;�u�?�#k#Qo&#x15;�&#x6;���E��8Jրb:�I��j=�Ե�&#x13;������Fp���7zK����F;&#x2;&#x1c;S��r6�U&#x13;&amp;�q�-�&#x1f;~���K������/�����H?,W=ɤZQʽr�P��\����f������f�J&gt;&#x15;V˹�y[�&#x11;�&#x13;��&#xc;o&quot;�R�YS�==&#x1f;Y�wƶ��;�n���;c[�&#x4;�������&#x1e;-��5���L�0&#xf;�D��;�&#xd;6�Nd5m��s���X˘�)cZg&#x1a;�)&apos;&#x14;��G1���\&lt;�iX�rj*���l����&#x12;d&#x15;�&#x11;�9 ��&#xb;&#x17;)&#xe;&#x8;��&#x3;bC&#x0;���p�c�#��p&#x10;�C�&#xb;&#x6;&#x16;�Xz���5�&#x5;��&amp;��&lt;x&#x11;Ȯ&amp;���~*0&#x4;��N]&quot;�&lt;&apos;&#x8;�&#x1e;&lt;��j&#x10;���V&#x11;BQ���&#x13;�EO&apos;�3�@q��w���E&#xd;
,�:�����]�&#x1a;�����ʥ:&#x15;��	�i%_��)K�K�iL&#x7;���&#x18;��uMEI\����-�|c��z�i������&#xb;�/�%����&#x3;7���8�5\;�W*���{*��P�&#x13;�w&#x4;��&#x0;)��7�&#x1;�&#x1e;�FFN�&apos;��c{&#xc;��w����8�&#x1d;�e&#x14;9&#x15;T�v��ǆ��&#x15;��n�:��N&gt;�f�{u�̗�q�&#x1e;�&#x16;��&#x8;��x1�J)Y�&#x10;�&#x1b;|��m��i�^�p��(�&#x5;�]���&#xe;�sS&#xd;��9�hwo����Þv7:�n�k.G��l6&lt;�z�&#x19;�O��&#xe;�y�rJNQ��&lt;�x��&#xd;)��&#x4;#㦫;jN��P&gt;r���Ѷ��G&#xf;;���mh���&#x1f;n�;���B�s&#xf;;ڝ�6��܆d�&#x1;��&#xf;��t8 y�V�3�G&#x12;MJ&#xd;
n&#xd;
�T��&#x14;d�����P�_^�x�S�&#x7;6&#x1b;�Y}���,i�o}Xk��f��/w(�&quot;�&#xd;&apos;9��&#x5;&#xc;�W��&apos;�q�DcsG�&#xd;
*iU+���T��P��q��c��O�֨�����`���~�&#x6; �&#x0;��&#x4;@�`&#x1;l2e�&#x19;&#x10;&apos;���K��N@�q�r7��ܟ�&#x8;��6v��&#xd;��?&#x1e;���v Nܟ��Ѫ&#x13;��&#x1f;&lt;���&amp;&#x1d;�=���w:&#x15;��	��y}�q��wO&gt;&#x1f;��eO���&#x12;&#x15;�FWʀ&#x1d;»&#x1d; ����.&apos;&#x8;&apos;&#x1f;�&#x0;���˧&#x2;�2�S.�&#x7f;��`V/�D�l�&#x1a;�HS��&#x5;��.eI&quot;T&#x11;ʥ&#x12;&#x11;&#x1b;�&#x8;�:a�p�M9&#x0;�~I�MN&#x0;�&#x17;&#x19;&#x1;�&#x15;�C��K���X&#x16;��&quot;�&#x1b;ц:&#x1a;��v 	&#x7; &#x7f;Nѧlr&#x0;�x�m&#x8;��ò�ǫ&#x13;�u�L��&#x16;�K6B&#x10;�&#x6;�`&#x7;&quot;?&#xf;Ax�uA8�&#x10;&#x4;3z�&#x4;b]e��/e�Ղ,8)֛��&#xb;N@p��A*�#�?�������&#x13;�c�p�����G&#x1f;x�&#x13;�&#x17;&#x1d;��a��&gt;&#x1b;�g��t��/&#x7f;&lt;t�C����Q�&#xb;�I�&#x18;&#x5;O��&#x1b;](��&#x2;¸�(��X�n�&#x16;&#x17;�&#x18;ƭ�w&#x18;&#x7;H&#xc;K���E�8�&#x11;���̀F��l�&#x1c;��Iv�&#x1a;��Q����T8��s��T����&amp;&#x0;�UU�xUw&#x3;6�&quot;���*� �����,�ΞTURI%�T&#x15;-�%yY*�{����&#x0;�0,����B���:�Gq&#x17;&#x10;��qg�s&#x4;uF���&#x1b;�qA&#x19;uf&#x4;����R���K�ۮ����&#xd;
�&amp;y���sν����=��sr�,n��{Xq62&#x1f;i��;�&#x18;_���&#x15;�l��D���;A���|��IY�F��Ϯ9&#x1d;R9X��&#x6;����&lt;&lt;tc&#x3;�&#x1;����/&#x6;�D4w��BK��Qə��&#x12;�����Է[&#x7;_��v��7��}�nm=��&#x1a;F&apos;�&#x1c;�&#x2;��]`��.h&#x18;���P��g&#x3;Md&#x1f;&#x14;�&#x8;&amp;���[M�~�Q�h��&#x1c;���0��&#x1f;�j��&#x1e;6&#xd;
�-�;�0�&#x13;�&#x1c;�ʆ�]y��n�0��Ж���&#x18;�w&#xf;n9�}�0���-ǻ&#x1f;&#x1b;�w?�r���ax�ʏm5�]�1���-ǻ݆�]b��3&#xc;�-ǻ�ax��-ǻw&#x1b;�w��r���0�{r���ۆ�ݷ�&#x1c;�k&#x18;ޝ��ƻ�&gt;n&#x14;ޝ��xw�ax7��x&#x17;6&#xc;��[�w&#x11;����[�wo5&#xc;�&#x7ba;�xw�ax��-ǻ&#x7f;&#x1c;&#x16;�&#x10;�Ƶ�&#x1b;��&#x16;IB&#x7;�c�Kt�&#x1c;^��\z��6�{&#x11;�&#x1b;Ս�&#xd;
��=Y���&#x1b;_t_6��&lt;���ᛸ��&#x1c;�.:-�&#x3;:�&#x7f;{��&#x1b;���z��ݬ����/��ܐ&#x17;�^&#xc;v�)��B6/�&#x16;܊S&#x16;+m��=����`,F[��{�t1�2&#x18;&gt;�J������&#x16;&#x10;���^�K�پG/�~&#x1a;t�&#xe;��?��/�A�؉�f��&#x1b;|�V�&#x1;�#��&#x1a;�&#x1;�̭�-��y;s���4D~&#x19;�W�A&#x6;�&#x10;sEH禜��Eyr�&#x2;W*Ǹb���R��3�	Y��s՚$/�&#x1a;&#x7;&#x1;(�CwI��HBw&#x19;&#x4;�x{&#x11;�A�m;Z|�:��td���7=�L&lt;�O]����c}���&#xe;Q�&#xe;ѿ&#x18;S�&#x16;�&amp;�&#x13;+� W���P��P�ԡ&#x8;b{�.EhT@&#x11;&#xe;tR����&#xe;UL�j;ݪ&gt;U�X��r��;�~U����+�������:i�&#x1e;N���7-�/� ��ɝ&#xf;o;&amp;�oڮ$O;&amp;�&#x1d;&apos;��&#x18;Q�櫩ަ�*��&#x1e;ȑ�&apos;%���&#x2;&#xe;&#x7f;&quot;&#x12;�&#x3;���	��ښ�1&#x7bb;�����&#x1f;&#x1f;�l�/T��c���&#xf;Q�zcJj�C}&#x15;_�&#xd;
$��ɍ�`�l���&#xc;�ZRI�j!1�f���ņ&#x11;&#xc;�&amp;S&#xc;�b^�������&#x13;&apos;0��F��B��b�&#x8;��r3.��Ez�6۵z&#x1c;���n\v�&#x1d;&#x1b;�&#x1e;C&#x1c;s&#x1c;+�&quot;&#x1c;��k�X&#x1e;@&apos;�ju�N����{�&#x1d;[��;��ƃ.G&#x12;�zu�R�_��`�k��~�&#x19;�&#xb;�j�&#xc;&#x8;_:����c&#x11;�R��%8��P=��;/~�&#x7f;��^&apos;��n&#x1d;�M}�էn&#x1f;�A�!5+�aԕ6���nS&gt;�~���&#x8;^w�Ьkɒ�R&#xf;��8goQ�Z&gt;&amp;.��&amp;&apos;W�V�&#x1a;]�ؒO\���YF�&#x5ec;ssq���Z�&#xe;�Ur�a�kn&amp;)4	+N&#x16;�Y�j��y�LtźDa���&#x1e;�&#xd;
�H�:&#x13;#&#x13;��&#x1c;��&#x14;��Wr&#x19;_�Y��@�^&#xb;&amp;��E�Y�D�|&#xe;+8�d�t�WXWjrV�TW&#x17;ˮ&lt;��֨l�&quot;�&#x15;k&#x6;+&#x8;��kݶ��3�3Č����?1ߕ�_os�&apos;&#x17;��^/i&gt;pR�4U&#x6;��w��SD6&#x13;u#O_��n��i�T;Q�TC�m�y?�m&#x5;Ni2`��j/�&#x1;�&apos;�&#x15;t�&#xb;�&#x1;��7ɇ&#x17;��&amp;TQ��&gt;r�&gt;&#x15;�ʃ+&#x11;e�l�R{*UQ��F&#xb;��x�$�&#x7f;T%�R5&apos;��ƺ���صd	D�&#x11;�B̽0e&#xf;&#x10;����h���&#x1e;&#x12;&#x16;����������*�����3����+�g&#x1e;�7�I���y&#xd;t��~&amp;)^़&#x18;&#x16;+0�K\���(=o��J:,F`Q��eݎ&#xd;
,&#x5;K�R&#x1a;��01&#x17;��ge�v_�~��N9���jXd+*&#x1d;�k�J������#RK�P+&#x7;&#x1b;d�bI2�Bf�ei&#xb;���,�T&#xd;
�pl&#x1a;�(�IRxf&#xf;6f���&#x1d;P&gt;1��WK�&#xe;���W\w�/��&#x1f;�7�|�=�&#x7;����;��A�jGv��Ĺ��SSQ�&#x13;*y�bg�|hך}&#x18;�aI�L�&#x15;d�&#x85;d&#x1e;틄�N�76f�`Ο0,�&#x11;Z�����`&#x4;�lp�&#x11;&#xf;�..&#x58b;A&#x17;#xJ&#x2;U��agdƑ_L�&#x8;k͖C��Ӊ���&apos;�g��z4[�[�hjm�N�Bў.�&#x1b;Q{)\lp	�&#xf;��lI�2qO����筘��k3�L�&#x1e;�,-�3uaa�K���d#M&#x4;V=k���=��-&#xd;
�Pf-�W�&#xb;�:k/&apos;ꮄ52&#x1b;⚋5���&#x15;&#x16;=&#x1;��-�&#x16;#���$֒��BV$&#x1d;��b�箬�薴^Z�g�iw�[^u&#x7;�Kd�%e��JڙO;��@E&quot;�1�QY&#x10;�d�E1B�&#x10;���&#x19;��&#x8;�&quot;+�E&#x1b;��/5&#x16;2�z`֖�,��s�B̳Xm��v&amp;S	K&#xb;&#x1e;�r}&#x15;��f(�����B��L&#x11;&#x15;:����aK4��ci&#x7f;=P�&#x1b;��;Z-Ku�H�y�	K��&#x13;�V�K�&#x16;W�.o���Db��#a�ڤ%�/{y�G���&#x1c;&#x1b;H�&#x8e;�oտlsdDO�nZ�yktq�&#x13;�VJ&#x5;g�&#x19;	��X���&#x16;�&#x2;&#x15;/�t�&#x1b;�&#xb;q�T��7D{���UR56&#x19;-�|&#x7b2;�ZX($2sA6Z	�j	��?S��d&lt;a�&#x1d;&#x11;&#x16;�D!���:��[�:[���Rn/+�&#x17;����&apos;�aN*3�Y&quot;&#x1c;D�o)�&#x1b;��D&amp;��&#x12;�l&#x7b6;&#x1e;�rB���x�&#x15;��UI�G�b�a+$�v�ۚ�&#x12;D�&#xe;��mu��h:&#x17;ם�VQ�BTֳ�&#x12;r���&#x19;+V$&#x18;�B&#x5fc;Dq��L�K\�GƖf˖���L�n�-�Q�||���&#x17;=!6&#x1e;�&#xd;
�h�T�.�f���r���,�u�&#xf;ع��J�i0�&lt;�[_\¬\&lt;�\��G�ٹX����������s&#x1b;&#x11;b�^%�&#x5;�L&#x13;l�	Y����H�jq��y�&#x12;I&amp;f�&quot;��W�&#x16;i�[^u:��`��25)\o9�&#x5;oͽ�,-5�i�T_$�&#x4;&#x15;�&#x15;W�˸&#xf;�&#x17;�=�� &#x1b;��&#x12;#�r&#x19;�Z`a��&#x12;R(&#x13;&#xe;���Ks1&#x7f;l=3�/,S�XY��ֈL2;�]�&amp;��`,����)gc�&#x19;�&#x6;�S�N�7XXq&#x6;&#x2;��BA*���&#x18;&#x1d;�&#xd;&#x12;&#xb;�b���&#x13;s��M.RV7�&quot;�Î��R&gt;�O��&#x16;&#x7f;1&amp;�=w�&#x10;&amp;1�U&#xc;���MK�ᔄ�jd�&#x11;cb�&#x1e;�&lt;��&#x16;��ວ&#x58c;�����|�&#x1d;�ص��L&gt;�����&#x15;�J%&#x11;��D�&#x85;f��fHZ&#x13;���X��h�]�:&#x7b2;�b���Z^���x(�&gt;�W&#x16;�E�&#x14;���#�c,C͕ܙF�Q&#xd;&#x16;k�qG�]q��D|n&amp;��ȥ�����P�+z�+K&#x15;[qi��O�l�#~��#nXQ&#x7;�c&lt;N�y(&#x1e;��&#x11;��)i�&#xf;7&#xe;��ET6&#x1f;	Ib#�W��&#x1c;S�&#xe;y&#x8;p�	�&#xe;��Ź�N|bW��B&#x7;��&#x12;��t�%&#x13;�^š&apos;ɗϗ��&#x15;t�&#xc;?/�c�&#x3;zU�A�&#xd;
����U���`�WU��a&#x1;�R�Ӱ�F�XK!(�t	�ZqvO�(&amp;�&#xb;*�{�y!-�+{&#x4;����M:&#x8;&#x7f;���K��P��h��g$&gt;����&#x6;u/��*ڃ�6��&#x1e;�F�y�&apos;���ç��h&#x2;�&apos;�t��&#x1c;����Q�G&#x6;&#xd;&amp;L��tLL��tL6�1���WW���d�q����jb����&#x13;�{�۷D&#x10;&#x5;����j���ר��S?];&gt;��c&#xc;��&#x6;&#xe;�85&#x2;[�y3w�&#x5;gg��̽�&#x4;�&#xb;�~3��&#xb;J�D�V�V���G�O&#xb;�����є#^&#xd;UȝxHgƺu�&#x1;uF+�m&#x1d;���&#x1d;&#x1d;G{������q�}��q�&#x18;�Su=2�)���.xU�x{�v���J#����=��&#xc;�&apos;iPh#ȓ��p���&#x10;J��&#xe;PwM&#x19;Iɮ��&#x1b;���,1 �&#x11;(�˨&#x5;��d�:@]u����b72&#x3;)٠�F�d7�,b&lt;%��&#xe;P/�c$%{�J72&#x3;)�+&#x7;�6&#x2;%{Ƕ�&#x6;�k^�ld=6���m��7�&#x1e;3�Fֺ�o�&#x1;=���/��0&#x5;&#x15;f�eo�&#x1f;�&#x19;��w��:�}/x���v&#x3;L�F��*�J@D$E&#x19;#���&#x1e;vF���B*��H&#xf;�_�0�A����Cԝ�� ��kE�q�1%D�Ǹ���o��&#x15;4��r�&#x2;�߅�1�H�&#x19;�V�v�&#x6;�+�&#x18;׃,����#&#x1f;&#x1;R&#x1b;ѝ&#x1a;D&#x15;&#x1d;&amp;~�����ԟ�D=H�:Z��&apos;~�)}-����#kم&#x1d;�%|�&#xe;/��N���獍�Q/�Pߴ��w��]��X}����z�&#x6;VX����/&#x7f;�xݷ���������_�����w��Vx�%&#xd;
�7`����)&#x1e;�&#xe;&#x1;��ʗ�&#x8;.�&#x10;|P�҇�H�&gt;&#x4;;�&#x1c;Z�&#x19;�&#x6;pV-x�~&#x3;p�j�m&#x0;�V�G�^�(گY&#x7f;���;��.&#x8;|���!�¯��i�{&#x1e;i�#,�H�{�FGp&#x11;�v&#x17;�:	�S���Z&#xd;&#x19;wd��\^�=�&#x1b;�|�&#x1e;&amp;N&#x7;�%���K�b��(0�&#x13;M^&#x7;&#x0;u�3�&#x17;��(&#x1;�&#x1f;&#x10;�&#x3;���#�s&#x13;���&#x11;�1�H?��t��{?�-}$����&#x3;�3ǧ&#xd;
�&#xf;&#xb;�&#x7;�����$B8xc�y&#xd;��&#xe;���{���&#x10;nU�*-&#x4;&#x7f;E=�P&#x13;&#x4;d2��Ȯ�(�������2�W&#x3;�=�a&#x1;��\�?B����n&apos;�&#x10;#�_u�z�e��^��n�Etz���&#x1;ꈽ�oaf�ܫ/&quot;��3$�&#x1;I�g��o&#x1e;��dc�ǳ&#x3;&#x1a;�Aq&#x1d;��쀸nsu뫁���B&#x1b;��&#x7f;�٨�L+&#x1d;�&#x1e;9�H]�s{&#x16;��&#x19;H�&#x6;�6&#x2;%{�{�Ƴo��&#x0;��iCٷ&#x1d;�&#xd;d���O!�v�S&#x6;ZmD�S�K�؆C&#x8;a���&#x1b;&gt;(O&#x1b;&lt;�λ�ϟ��-0Sr�S&#xf;E{G��]x�&#x15;��&gt;o����������*&#xd;
�0Y&#x17;�&#x2;/۸o���Grƃ� _��j&#x7;�Џ@%+&apos;�8��?&quot;#&#x18;W�&#x17;�Q���?�Q&#x7f;�~�S��&gt;�N�9tl:U�*�]~��.&#x16;�d��&#xb;A�&#xd;
/U��j&#xe;�&#x13;kU�eW��(&#x1f;�Wa̯���&#x7f;&#x1b;&#x4;���V`���&#x1b;֧5��Q��_��|㌋\�^p�ݭ&#x7;�&gt;��s�,ҷRDL&#x15;&#x14;i�T�?�&#x1c;��r�ټ�����:��&#x3;&#x1f;U��+�L}j�B��&gt;e&#x12;j&#x1b;M�Ve�&#xe;2? �&#x11;t�3&#x1f;&#x1b;F�o+���~���۟m&#x14;{�&#x14;3�/0�&#x1;�|����&#x7f;�&#x1e;�Bf U&#x1f;&#x14;�(^8=&#x1c;7����&#x1;�i�HJv�/��&#x19;H�&#x6;�6&#x2;%�߳d&lt;���&#x1;�܀��줃K]m��.0&#x1f;�K`��&#xb;O�%�vc�&#x4;�&#x7;}�&#xe;�&#x11;�&#x4;�|K��&#x19;Pa~�&#x1f;N��rLp�p⛾�&lt;�3���`�y&#x0;�4�V�\�P�X�&#x19;���i`���TH,&#x16;a1&#x1d;�L���n&#x13;{���{Tb�p^&#x7f;�&#x1f;���&#x1f;�X�=p��7�|㸪�ʮ�5I��&#x1a;���+&#x1;N�&#xd;
{`5&#x12;~���LșE�B��\�*&apos;�x@&#xd;�o��d,��q�8bb�O&#x3;S�)��&#x1f;�C�W�k��7��wg&#x2;�s`y&#x0;���J.*&#x16;x�&#x3;�GѩW�&gt;���bQ�w�&#x1;&#x10;���&#x16;ȕ:��9o6��K:�7�������m:2���Y3G�	l&#x7;&gt;�&apos;�&#x5;4��Ty	^ਪ�&#x16;��\	��mh��N���Tw�o �=(�&#x11;X��&#x1b;���&quot;�&#x1d;�~��H����Ff %&#x1b;&#x14;�&#x8;��Ҋ�\įw�z�b#)Y��nd&#x6;R�A��@ɨ�]a����&#x0;���&#x19;Iɾug72&#x3;)ٓ&#x3;B&#x1b;�����o���]&#x1d;�&#x1e;8�P&#x11;�&#x1b;��&#x19;)�2 �&#x11;(�s��ד=�&#x1;�&quot;CET�[�Ff %&#x1b;&#x14;�&#x8;��?�J��d�&#xe;P&#x7;�4��}�~�&#x10;�&#x1a;��;&#x6;^���ۢ��&#x1e;��&apos;�R&#x1e;�&#xb;�]&#x7;&#x15;�&lt;��~!;bX������.Ǖ�|O�p���Z4��h�&#xe;&#x15;�)�֤DA&#x0; �qey&#x0;�Mg&amp;*y��G�&#x14;�5G�A&#x14;��@&#xd;&#x16;9�ף&#xf;�&#x17;�X���]�h����uҝg�ٹȒOj&#x15;�{���|���eԉY$5����:���%mӓ���&#x6;yK��Uk��&#x1b;���&apos;&#xf;?9=���6CN�ww3&#x6;�&#x18;�B&#x1b;��x�3��&#x2;�-��&apos;�����F�&#x13;&#x13;�s���&#x0;��R#٭��&#x1b;��T}Ph#Pu�&#x19;&#x3;*Y&apos;�9�P�ѥWu!3��&#xd;
m&#x14;35�~U�땂&#xd;
��&#xe;\��ׯ����+�:��W&apos;&#x1e;��&#x7f;��Th�RY������B%&apos;ʎ&#x2;~�b��禦|bu�oƅ4,&#x2;9w��&#xf;�ʴ�&#x15;&#xd;��&#xe;�/~&#x3;ÁK/V&#x12;|��z�;�sNPY�y&#x2;iz�\T��H�T��W&#x19;o&#x8;��&#xe;P&#x7f;&#x13;4R+��l�&#xb;��Z٠�F�ʼ_��ו�:@�3��}d,م�@J6(�&#x11;(��CI��dR&#x7;�&#x3;���y�Ϻ�&#x19;H�&#x6;�6&#x2;%��=)�)ٿu���P��&#x7f;�Ff %&#x1b;&#x14;�&#x8;�첛��3�{;@�&#x18;3��}�s��&#xc;�d�&#x19;&#x10;�&#x8;�,@�&#x12;�1��;��&#x1c;X�d���G�f&amp;5��@{�����&#xd;�&#x5;��&#x10;o�l&gt;Z�Gt������&#xc;@&gt;S�+��&gt;�p&#xd;
�.��a5�P�U�@�����&#x13;&#x8;i&#x11;&#x19; ��&#x16;�;F�J&#x17;�L�S&#x15;Eۥ&#x1;�	P�6O�GF�E���&#x1b;&amp;5�&#x16;֦�&amp;�&#x12;&#x1c;Jj���h;���;&gt;�&gt;�&#x15;�m����;����+&#x2;�&gt;\��U�&#x2;2�=&amp;�O!m}M�����S���H�4_�&#x5;e����O�5&#x1a;-��u�t���_&#x1d;�I/ߦ$���$&#x8;H6a��&#xd;&gt;&#x1d;�&lt;[ï��xl�k�K�y��ޯ�&apos;f��&#xe;�&#x7;�v��L��J��,&quot;c&#xf;�&#x1;�{wl��U0 &#x1d;*����re1/T!�&#xd;
&#x18;�VV�s&amp;�&#x13;&#x18;&gt;��&#x13;&#x4;�&#x12;&#x13;z|z�9�&#x1d;љ]\&#x3;l^I��?{6�DL�&#x13;�&#x4;=�1&#x13;&#x18;;��&#x13;85��&#x13;83��&amp;&#x8;�&#x4;�M&#x10;&#x8;15A�&#x13;&#x4;3A�&amp;Hl�Dw�&#x13;$5A�&#x13;&#x14;�����&#x17;v��&amp;hb��&apos;&#x18;�&#x4;�M0�&#x4;�L0�&#x4;k�`�	Ti��`�	��`�	����&#x13;6r��N`V�&#x1b;+��Q�&#x1f;�b�c�	&#xc;&#x18;�8�&#x1;&lt;�&#xf;Á�&#x18;���#�&#x18;B�!�&#x18;&#x2;�&#x11;�~&#x4;&#x14;CH1&#x2;]��b&#x8;&amp;�@b&#x14;�N��&#x8;*F�ot&#xf;&#x2;�Q�&gt;&#x1a;&#x1d;��o&#x1a;�f�s&#x11;l�A�1�8&#x3;�A�P%0T&#x5;&#xc;�&#x1;��g!ؘ&#xd;����6t&#x1e;�&#x1;Gu��&#x18;�����[&#x11;&#x1b;Q]pT&#x17;&#x1c;C�0t&#xe;C�P]p�5f��Q]p`:�&#x1c;G�&#x10;�q&#x2;G��1�k�D��z�$:F�|�1T&#x17;�B�Q}p&#xd;
&#x4;���u4:��#��&#x8;?&#x380;&#x18;&#x11;-&#x16;�F�q&#x16;�kC���}6&#x10;.�.�K �&#x13;&#x8;3��&#x12;&#x8;/�!a#�&#x4;&#x6;�Y�&#xf;]��N �&#x13;8�&#x16;a%&#x10;�	�&#xe;P&#xf;��&#x0;&#x1d;&#x1;%&#x1;-&#x1;5A�&apos;&#x10;~&#x2;�@X	�k&#x2;a$&#x10;F�F�&quot;&#x5;!&#x10;�	&#x6;��됆&#x10;&#x8;&apos;�pB� ��&#x10;HS&#x8;�*&#x4;R&#x14;&#x2;a&apos;��&#x10;&#x8;;�xN ~�&#x8;;i��?����$�O&quot;�$�7�t�Du &#x11;&#x7f;I��D�I��D8I��$�7�&#xe;񗔵&#x19;&#x1d;&#x7;}FxI&#x12;=��sH�)t&#x1e;�&#xc;�xL&quot;�$�O&quot;��&#x8;7��D�%�n��&#xe;$�&#x3;�0�&#x8;3��L&quot;=!&#x11;^&#x12;�	��R&#x8;+�xM!�&#x14;�J!���NP��&#x14;�J!~S��&#x14;�7��M!�&#x14;�N!�S&#x8;?��B��&#x10;�)��&#x14;�&#xb;��B��P��&#x14;�7��C��P�&gt;&#x14;�&#xf;%7Pt&#xe;ՇB��P}($&#xf;&#xd;
�,�Y$&#x17;&#xd;
�&#x1;&#xd;
�\��f���v@��&#x18;�&#x11;��&#x3;��J��R��&#x14;�+��J��RHV&#x14;�&#x13;��K��R�MPH64�+&#x1a;ՑF2�Q=iԆi$&#xf;&#x1a;Փ��7�(P�hT7&#x1a;�_&#x1a;ՍF�D�p܆z&#x10;t?�&#x1b;��D��Ш&gt;4�&#xf;��B#ݧ���&#x8;?��0&#xd;�&#xe;�	��/�p�H64�L#�4�I#�4�G#�����H&#x1e;4�I#�Ш�2&#x8;+�d� �0&#x8;3c��ˆ:/��(�&#xf;�Fx&#x19;$&#x13;&#x6;ɄA�&#x19;$&#xf;&#x6;�Y&#x6;�f&#x10;n&#x6;�f&#x10;n&#x6;�f�l&#x18;$&#x7;&#x6;�Y&#x6;�A�&#x19;�&#x7f;&#x6;�A�&#x19;��Ax&#x19;�M2�&#x1d;0&#x8;7�p3�aB�)w��8�7��3�-0��&#xc;�&#x3;��3��,��&quot;�,��&quot;�,�/���&#x15;�E:�&quot;�,&#xe;=.�&#x6;�e&#x11;^&#x16;�e&#x11;�Y��E:�&quot;�a�ް��,j&#x7;,��&quot;^���aI�ѵ&#x8;;�����,&#x5;&#x1d;7�M�ot-j&#xb;,�&#x3;����У�s�.,�&#x3;��&#x8;?�@7��&#xd;�?t���̢z�P&#xf;�&#x7f;&#x16;�c&#x1b;��&#xd;�ǆڇ&#xd;��f�c�	&#x1b;��&#xd;�&#xf;&#x1b;��&#xd;�&#x86;daCu�!Y�P�l�n6T7&#x1b;��&#xd;�&#x86;da�����H&#xe;6TG&#x1b;j&#x1f;6$&#xb;&#x1b;	�&#x6;=&#x1b;�&#x3;&#x1b;j&#x7;6$&#xb;&#x1b;��&#xd;�Æ�dCu��:�P;��z�P�l�N6$&#x1b;&#x1b;j&#xb;6T/&#x1b;�+&#x1b;��&#xd;�&#x3;&#x1b;��&#xd;�0&#x1b;�+&#x1b;��&#xd;�&#x18;�)&#x1b;��&#xd;��Ȟ�A�-&#x1a;&#x12;&#x11;*���!�b`�08&#x6;��&#xd;
��&#xd;
��&#xd;
��J�O&#x2;~&#x12;�O���{��YI�	��J�OJ.�&#x1a;&#xd;w�p&#x7;&#x18;1+&#xd;�&#x18;x&lt;�3+&#x18;4+#[V����,�&#x5;�f&#x5;�fe�^&#x16;.a�&#x12;V6��&#xd;��`�`�&#x10;a(((h(�c,&#x14;`���0�\C-e#�!	a���p�&#x3;5&#x12;L��&#x18;T&#x6;#�op/&#x5;&apos;�Lc&#x14;�&#x6;�&#x1a;��60ٲ��h8&#x6;�Z6ղ��&#xd;4&#x6;��X�&#x17;j�Ae0@���d&#x1b;�&#x5;����,�H�߲&#x1;��7�o&#xc;l7*��������f���&#x2;&lt;&#xd;L&gt;&#x1;��� MD��렖����&#x8;�&#x12;l9*�&#x4;�&#x12;&#x7;Y�����|	�&#xb;.&#xd;
&#xe;��A�`�10�&#x18;�w&#xc;&#xc;&lt;&#x6;&#x16;&#x1e;&#x15;p	�,80&#x2;&#x7;���G&#x5;&lt;&#x0;��&#x3;spP&#x1;��G�C&#x3;�&#x0;*�,�&#x0;���&#x12;�&#x5;�&#x6;&#x7;��s��w�&#xd;
x2p&#x8;&#x7;������&#x1c;�&#x11;P�CAB&#x1;�&#x15;�&#x1b;�&#x1;&#xc;&lt;&#x0;&#xc;\&#x0;���.&#x10;-X}T�7@O��E&#x0;zp&#x3;P&#x1;�&#x2;z&#x2;ЃK�&#xd;
�o�&#x13;��&#x4;&#x0;&apos;&#x0;8&#x1;p�C��%��&#x1f;�&#x8;&#x10;(&#x1;&#x2;&#x5;�&#x0;&#x3;�&#x0;&#x3;�&#x0;#�с[��_��S��W��K�&#xd;
&#x1b;��p	H�&#x4;��_�&#xd;
8&#xb;&#x1e;$�&#x8;���P#&#x12;�&#x7;.&#x3;&#x6;&gt;&#x3;�%e�&#x12;N�n&#x11;&#x3;&#x1f;&#x1;&#x3;&apos;&#x1;i2&#x1c;&#x3;i�P_p&#x16;P&#x1;g���7�&#x2;&#x1e;&#x0;�!A2$(0	�%��$�&#x7;|&#xd;
&#xc;�&#xd;
&#xc;&lt;	T�1�/	Z&#xc;&#x1e;&#x5;*�&#x12;P[&#x12;�C�xH�9&#x5;U&#x5;�&#x2;� �rAY�����������������@&#x5;	&#x1e;1&#x1c;#d�&#x18;N@}���������������������(٣&#x6;&#x1e;�_��c�Q�g-��Pip(P&#x1;&#xf;���/�&#xd;
8&#x6;R����W`�X`�Y�&#x16;&#xe;�BU��@&#x5;�	�&#x4;*0(�Q���&#x1b;��&#xf;��P#�$PABAC&#x1;�&lt;&#x8;�&#x6;u�Ad�@`�=�Bv��6&#x10;&#x19;&#xd;Ң&#x1;)M���� #p%P&#x1;&#x17;&#x3;p&#x1a;��0&#x4;�����\hPG&#x1a;�&#x2;&gt;&#x5;&#x6;N&#x5;&#x6;^&#x5;*`�&#x0;=?8&#x14;���&#x3;h&#x1d;&#x3;Z���&#x6;�&#xd;
&#xc;�&#xd;
&#xc;|&#xd;
T�	�&#xc;�&#x16;&#x18;�&#x16;h&#xc;&#x2;�&#x8;y4&quot;����&#x4;�*�&#x1b;�&#xd;
x&#xd;
4+�(0p)0�&apos;0F&#x1e;�&#x0;zp+0�#��&#x5;�&#x1;pp&apos;P&#x1;&#xf;&#x0;�b��g�&#x1e;&#xc;�g@������@&#x5;�y�2�m�����&#x2;��&#x1a;�ہ&#xd;
8&#x1;�&#x0;/&#x3;���&#x1;P&#x5;p4P&#x1;�&#x10;�	�&#x17;4�&#x5;)�k�&#xd;
�&#x4;D�B����X&#x10;&#xd;
8&#x18;&#x18;x&#x18;&#x18;�&#x16;��1&#x18;�&#x10;x&#x16;&#x18;+&#xf;ɠn�``�&lt;:�j���&#xd;
�&#x3;�&#x7;p7P&#x1;O�&#xd;
�`���������@&#x5;��F�w`�x`�y`�z�B&#x1e;��	�&#x11;�&#x1b;&#x18;�&#x17;��{���@�l�4l�f�a �&#x2;&#xf;&#x0;5&#x3;g&#x3;&#x3;O&#x3;&#x3;7&#x3;&#x3;?&#x3;&#x3;&apos;&#x3;&#x15;p/&#x8;�&#x6;�&#x0;&#x1c;&#xb;&#xc;&lt;&#xb;d����&#x16;l &#x19;&#x1b;��&amp;&#xf;7��&lt;�TF�0�ǜ&#x8;82`�&#x8;��&#x2;Ơ&#x18;&#xc;Ba�	&#xe;&#x6;*`,��O&#x18;e�������o�&#xd;
8A��Wx&#x0;	�W&#xd;
N�p��c4&lt;��G���&#x16;N0p	&#x3;��@&#x1c;ƚ�L�&#x2;�ـ&#x6;&#x2;��&#x0;&#x1f;&#x15;8&#x14;�O&#x18;&#x3;+&#x3;c&#x1b;��ah&#xc;�1�&#xb;�&#x2;&#xe;C{&#x1c;|&#x6;T�u&#x4;�%�6@���&#x18;F���c06&#x6;�&#x1;Yh���&#x1;.j�0��o0&#x14;�q&lt;*�&#x18;�&#x5;�&#x1;&#x7;�&#x1;��=&#xe;�&#x2;&#xe;N&#x2;�ɘm0@&#x7;��p^&#x1e;�˃yy4�`A&#x1;cw�&lt;�W���^&#x1e;��(&#x1e;�&gt;&#xe;v&#x1f;�&#x7;�8pW&#x1e;ʃ)��l�&#x2;�&#x1;;�q�&lt;`�G��p]&#x1e;��MF&#x5;D&#x8;&#x0;&#xb;��Q!&#x7;&#xc; b&#x0;�a���`&#x1d;��:*�:�9!&#x7;&#x14;�u&#x4;�&#x13;&#x8;R�/�P�&#x1d;&#x10;R (8&#x1;�&#x5;�ب�{)�&#x3;�I&#x0;H&#x2;dN�p���&#x1;.�h&#x1c;��8�iT�g��N&#x18;��&#x2;�Ae�b�`�Q&#x1;&apos;lpB��M&#xe;t@�&#x3;B&apos;`�q0�8&#x18;k&#x1c;�5* �&#x1;|�Q=*�,ԒD=&amp;*�6�/	�&#x5;+���F&#x5;\&apos;�P� &#xd;
�&#xb;&#xc;�qR��@�a��&#xd;
8&#xb;5&#x7;ۍ��F&#xe;&#x19;&#x1c;�����I� &#x18;fTȱ&#x18;�����b� �h&#x1c;l2&#xe;6&#x19;&#x15;&#x10;�&#x1;���?&#xe;&amp;&#x1a;&#x7;&#x13;�&#xd;
&#x6;&#xd;
&#x16;&#xd;
9�&#x3;gA�`�q��8��q0�8&#x18;k���rPA&#x8;&#x4;�`�q0�8&#x18;k&#x1c;&#x2;&#x0;��{�n`�q&#x18;��&#x1c;%&#x2;YR K�ɨ��h�&apos;�&#x1;҂�&lt;&#xe;Cy&#x1c;��8Xb&#x1c;F���;�AP 20�8&#x18;f&#x1c;l2* �d��O&#xc;&#x14;p&#x2;D&#x6;#~&#x1c;L4*l&#x10;���S&#x4;&#x14;p1tA`�q�Ψ��#)��;@(`�q0�8&#xc;�q&#x18;�&#x2;.�z��&#x1f;&#x15;p�&#x1c;���^P-0�8�m&#x1c;�6&#xe;�&#x0;&#x1c;l7*�&#x1; A&#x1a;T&#x14;L9&#xe;�&#x1;&#x1c;�8&#xe;&#x1;&#x2;T�	�*�s&#x1c;�9&#xe;�&#x1c;&#x15;�b��8�nT@d&#xd;j&#x4;�&#x1a;&#x7;c�����N�&#x2;�o��`���&#x1f;��?&#xe;�&#x7f;T�%��&#x1;�&#xc;�&#x3;l7&#xe;�&#x1b;�x&#x0;*�6�&#x7;���&#x10;*��8�n&#x1c;�&#x1;�@�&#x19;�&#xc;D&#x4;P&#x1;�&#x1;R��8&#x18;k&#x1c;�5*l&#x10;��B&#x1;&#x11;@�^�N�&#x10; @&#x5;�&#x5;�b�Ͱ�ǂ���X�`�q&#x16;�&#xb;D&#x1;P&#x1;gA2`�Q&#x1;�D�&#xc;Xl&#x1c;�&#x2;��K@(`�q��8D&#x6;p��8�n�&#x5;���e@�&#x0;&#x7;+�&#xd;
8&#xb;�`�n`�q&#x8;&#xd;
�`�q��8�_&#x1c;&#x2;&#x0;8��Qo&#x8;g&#x11;*�&#x0;:yN�&#x17;&#xd;{�|��&#x3;�h8a&#x1b;zH�&#x17;&#xd;!I,sY8˕ʕ��1&#x1d;&#x8c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3�n��͘�&#x19;S�B1��t&amp;�?�&lt;��&#x3;��?�}ll�&#x7f;L��Wg��b����r�G&#x12;K�.*w��xo7�!l]:(��u���Q�.&#x1d;&#x14;װ�.���&#x1b;o&#x15;}&apos;���&#x19;i�����&#xc;��yPh#X���]��&#x5;DC��`+�&#x6;�v\�6&#x18;��V2�k�gw�:�5Fj���2C���Nq�`��r&#x1e;���&#x1e;�ᥤ�R&#x1e;r��&apos;.��&#xc;+&#x14;���l�#�&#x15;�*�&#x1e;_�u�&#x6;�榤&#xd;���7%���nU&#x6;2+�&#x19;&#x10;�&#x8;�ʹ��!���b�����-���F�re��&quot;��&#xe;P/y����&#xb;��Ff U&#x1f;&#x14;�(��zIn��1o���a&#x7f;m(&#x5;&#xd;��$��R]:&#x16;�_ߡ$��P�qB��G����5&#x3;|��&#xe;����&#x19;&apos;7O&apos;����G˾!$��2i&#xb;�&#x3;Jk �&gt;7�&#x16;�&#x1;��h!m��&lt;ZԆ��cp�&gt;q�ar�hamzn&#x1e;-�����&#x12;&#x1d;an�N(���z�&#x6;�d��&lt;Z~�&gt;7&#xf;�ᓙ��\G`�#0�&#x11;��&#x8;�u&#x4;�:&#x2;s&#x1d;����\G`�#0�&#x11;��&#x8;�u&#x4;�:&#x2;s&#x1d;����\G`�#0�&#x11;��&#x8;�u&#x4;�:�&#x1e;&#x1;t37�&#x19;S7c�fL&#x74c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3�&gt;XL�`�y�/�7��&lt;��&lt;��y�$���gP\����=9�,�~&#x7;�kv&#x1b;ie�&#xd;�nd&#x6;ZY&gt;(�&#x11;�,&#x7f;����,���\&#xc;𗻽qfg/��;F��\KuX+�o�g���&#x12;1&gt;�����{F�x-�a1�-�a��G������&#x7f;i&#x1c;ƿc$�&#x7f;ǈ&#x18;��?v/&#x12;5P��A�� ����y��_�u�z�yFr�~&#x16;�Ff �kPh#p�&#x1e;ھj&lt;%�H&#x7;(��HJ&#x16;�ۍ�@J6(�&#x11;(ه&#x7f;�j�����&#x1;�I#)�&apos;/.t!3��&#xd;
m&#x4;Jv;S0N��N0[#S�&#x16;�&#x16;H[��&lt;��UZ&#x1d;&#x1c;B�1-&#x13;&#xc;�KI&#xb;ikd�Ң6D�,�K�|�a2eiamz�,-��d��&#x12;&#x1d;a���k�&#x18;#&#x1f;U&apos;�G&#xc;��K�l����&#x12;43e��z�U=�&#x1e;sU����\�c��1W���z�U=�&#x1e;sU����\�c��1W���z�U=�&#x1e;sU����\��#�nf�2c�fL&#x74c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3�n��&#x7;��&#x1b;,SV��nxCȔ5(��)KK�(��&#x6;�5�LY�&lt;U0�&#x2;�k;@���H&#xb;�_qf�&#xb;��&#x16;8&#xf;&#xd;
m&#x4;&#xb;��}y�k&#x1;����&#xc;&#xd;
m&#x4;YT~����&#x12;\t�z�P	.n~�&#x1b;�����F�4�����{�&#x13;���=��A�&#x5;r&#xf;h!�&gt;���F&#x7;��{@�&#x4;&#x3;�N�B�&#x1a;�&#x7;��&#xd;�{���=�&#x15;��=����&#x7;�&#x4;��{@Kt��&#x7;�P��{�&#x13;U�b��&#x3;Zd��=p�F�f�&#x1;s��9OҜ&apos;iΓ4�I��$�y��&lt;Is��9OҜ&apos;iΓ4�I��$�y��&lt;Is��9OҜ&apos;iΓ4�I��${&#x4;���&#x3;fL&#x74c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3�n��͘�`1u��&#x1e;`�����{`P��1����Qr&#xf;�&#x6;�5��&#x3;�&#x7;K��=&#x10;�&#x0;�7N#-p���w#3�&#x2;��&#xc;&#x8;m&#x4;&#xb;�&#x1f;�&#x8;]&#xb;�&#xc;�{��&#x1;�� ���w&#xd;
��=�&#xe;Pw،�4&#x1f;y�&#x10;�]���2*�&#xf;������&#x13;��o��&#x17;�;��&#x0;٩*�6�����}L�\��K�p&gt;��&#xf;�͠�B�/ɟ&#x17;��}���۟&#x1b;��A����ޅ�^a�����~}�&#x1f;ɋ�&#xf;���8&#x19;��&#xb;e��m�7OT�O;��P��NM�Wƣ&#x1f;�J6\�k��&#x7f;�&#x11;&#x19;&#x1;�=އr]����������&apos;�A�{���t��U*��~a],p�&quot;�wj�/Tx�&#x1a;�Wsp�X�Z/��&lt;�s��]2�]ܴ�� �&#xe;��&#xd;
��nX�k`	*��_��|㌋\�^p�ݭ&#x7;�&gt;�&#x82;4&#x7;�*ҷRDL&#x15;&#x14;i=�N����Ԕ���&#x5;&gt;�����&#x1f;��L��ߐ2��]&#xd;
����&#x1b;�D���ݭ�@fePh#0+g�D���8�&#x3;��ț�E�&#x5;�f����&#x10;�Th�4�T&#x1d;ZD&#x6;Ȭ���5�fhQ&#x1b;&quot;o���{��0y3��6=o���P�f�DCt�y3�P��7�&#x13;���&#x1b;)o�&#x16;���f�����7Ü�k��5���s|�9��&#x1c;_s��9�ל�k��5���s|�9��&#x1c;_s��9�ל�k��5���s|�9��&#x1c;�&#x1e;&#x1;t3o�&#x19;S7c�fL&#x74c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3�&gt;XL�`y3�T&#x14;�����|���_��۟m&#x14;�&#x12;��4��&#x1d;��&lt;��;�$����&#x1;q&#xd;;{ǓM�+{GysW����]V�]&#x4;���T�{��_&#x1a;`&#x11;�Q��E&#x7;��/�ػ&#x0;t�&#x7;�˙Љ�&gt;�&#x15;�S��{مt��Iթ��&quot;WJ��&#x4;�wjJ,�&#x12;W&#x15;�]&#x17;_���&#x7;��l�X������?c|�����Q���&#x5;&#xf;&lt;p�n�	�&#x8;�RE�V	���(cd!G�ag��d&#x1c;�/�&#x7f;����l����n&#x1a;m%�&#x16;�&#x1;�zj!-�h�G��ݧ��&#xc;��ˎ�e&#x17;v����:�����?��:&gt;�����u(5�&#x1b;��yc����J���/�\�&gt;&#x0;NX��&#x7;&#x1c;v�&#x15;&#x1d;��N&#x7;���4�z[-�M_o�%8���Z�&#x19;�&#x6;pV-x�~&#x3;p�j�m&#x0;��w��U�������=���1ȕ�t�V�&#x1b;q�+�&#x15;}�&#x8;����ɩ��Դ��jȸ#;&#x14;�����n��&#xd;z�8&#x1d;L����/��ң��O4y&#x1d;&#x0;�&#x1d;�H_&#x0;Σ&#x4;&#x0;&#x7f;@P&#xf;Ȫ����M|C_G�Ǩ#�X��AB������ǔu�Z$�&#x1c;�* &gt;,�&#x15;���!IL�U��W&#x3;!�&#x3;���&#x1e;&#x7f;�&gt;�[վJ&#xb;�_Q�,�&#x4;4pȎ�]�Q����U_e�?�d��&#xc;&#xb;|��*�&#x11;����F2��٠$���LK�(C��&#x7;�5��Ko&#x10;��X��:@5.1R���&#x1e;�Ff�&#xc;X�B&#x1b;A&#x6;�&#x3;&#xb;�&#xc;&#x13;&#x6;J�8(�&#x11;$V��X6^b�[:@�&#x7f;��������&#xc;�4&#x7;�6����ؚ����u�*�2���x{72&#x3;)٠�F�d���5�d@Ԃ&#x19;Br�N�[#�&#x16;�&#x16;��j!�&gt;n�J&#xd;&quot;&#x3;�M���F&#x6;D-jCd@4�t?6m���&#x16;֦Gd�&#x4;�&#x12;��&#x12;&#x1d;a&#x6;D-&#x14;cd@�D5=i�&#xc;�Zd�π����&#x1;�\�i��4Wk��5�՚�jMs���Z�\�i��4Wk��5�՚�jMs���Z�\�i��4Wk��5�՚�j�&#x1e;&#x1;t3&#x3;�&#x19;S7c�fL&#x74c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3��;�~�&amp;�n�&#xc;���M7�!$�&#x18;��qLp�%i�&#x4;&#x17;�5 �a&apos;��迻�i���\�܁&#xb;~�����&gt;~�S�&gt;���C&#x17;�/v��ˏ�&quot;U#)��JN������&#xd;
Ӟ����Y�&#x19;&#x17;Ґq�\�Ǻ�6��k��t�|�&#x1b;&#x18;&#xe;,�5#�&#x16;�&#x1d;m�&#x13;T�t�P���S�&#x12;&#x15;I����&#xd;À��&#x1f;&#x5;&#x3;�v�xy&#x14;b&#x1d;���UFZ������&#x19;h����F����oI]K�&#xc;��dPh#Hq��&#x15;�e�x�&#x3;�&#x13;���f&amp;Ӎ�@MsPh#h�������&#x7f;�&#x0;��&#x13;FR��s��&#x5;&gt;���&apos;k&amp;z�i&apos;k�n�dͺ�o�&#x1;=�d�/�pȴ0&#x3;*������_�	�&#x1b;N|�כ�}f��&#x1f;�&gt;&#xf;`�&#x6;��&#xd;
/�jŊ�؇�,(&#x1b;&#x7;��Bb��&#x11;%8bOU&#x11;���f5�ޣ&#x12;����K�`�}����:������&#x1b;�U��Z.�c&#x4;��qE����&#x7;��*d�&#xd;�_�T9!�&#x3;�9�R���X����q��*�&#x6;�&#x2;�m�&#x1f;�C�W�k�G���ߝ	�ϑs�d$����&#x5;^�&#x0;�Qt�U�O���X&#x14;�g&#x0;D�&#x13;�&#x5;r��jmN&#x6;b-��&#xe;�M�@��&gt;�x��L�=&#x7f;��&#x11;d�����DI��K�hUUm��E�J&#x8;�nC&#x3;�u&#xd;
��Pw�o �=(�&#x11;X�[�jƳ�o�&#x0;�c�H��U��Ff %&#x1b;&#x14;�&#x8;��?&#x7f;Z3�8䷝�f��d&#x7f;�{�&#xb;���lPh#P�Կ�&#x1b;�&apos;Kw�z�EFR�s�{}&#x8;&#x1b;&#x1a;&#x1d;�+eC��|�Ay#���&#x1e;�&#x15;&#x15;��.&lt;�&#xd;
�w�����s�H^�}�\&#x15;&#x5;�&gt;�BY���7OT�cg&lt;&#x18;&#xd;
��Uh&#xf;,Џ@%&#x1b;��5������&#x0;�&#x1e;�C��S�@G����Oݓ� �=�ul:U�*�]~��.&#x16;�d��&#xb;&#x3;&#x7;��T��j&#xe;�&#x13;kU�eW�&#x7;p�&#x1f;~��&#x19;z�&#x3;2&lt;�����&#xd;
����u�&#x6;V{ۙ�_��|㌋\�^p�ݭ&#x7;�&gt;��&#x2;�&#x18;�	x�&#x14;&#x11;S&#x5;EZό+)�;�OM9��&apos;,�)&#x1e;&#xd;e&#x1e;&#x7f;�2�&apos;������.���}�u�ٯA���Pќ�hMJ&#x14;&#x4;&#x0;&#x12;&#x18;WB�6hd#�)&#x18;֨��&#x3;�hO��9���ST��9&#x1f;�&#x1e;}��@��M�ZKƖ�|2�&#x17;f&#x3;k�F�&#x14;�yO}����O;y��:1&#xb;�y�&quot;����:�q�R����e:�Aނ�G�Ze�&#xd;
�OOO&#x1e;~rz��qm��|z���1��&#x18;&#x14;�&#x8;,��?P&#x1f;B&#x17;�n��[?,w}��6�/&#x7f;�n&lt;���&#xe;P&#x17;&#x5;�d�V��&#x1b;��T}Ph#Pu惍C��o&#x10;%�&#x4;���&lt;����&#x1b;���lPh#P���h&#x1a;o�wO&#x7;��&#xd;����F72&#x3;)٠�F�d7yZ�Iv�&#x5;3�d�$�F�s-�-��\&#xb;y��ε�&#xc;�&#xe;[&#xb;ik$;ע6D��&apos;�NHU�0�ε�6=ٹ��P��k��0ٹ&#x16;�1��w����H�ε�F��\+A3ٹ���L�b&amp;f1&#x13;���Y��,fb&#x16;31����L�b&amp;f1&#x13;���Y��,fb&#x16;31����L�b&amp;f1&#x13;���Y��,=&#x2;�f�s3�n��͘�&#x19;S7c�fL&#x74c;��1u3�n��͘�&#x19;S7c�fL&#x74c;��1u3�n��͘�&#x19;S7c�fL}������&apos;������|P��1ٹ��Q��&#xf;�k���Ǯk&#x19;o&#x15;��&#xe;P7z�����Ow#3�&#x2;�A��`��ϬWw- 2P���&#x18;&#x10;�&#x8;R]g�W&#x1b;/�@�&#x3;�&#x13;�&#x18;�in��&#x1b;�����F�4�&#x16;��x�&#x7f;&apos;�]�J�S|[72&#x3;)٠�F�d�]k&lt;%��&#x3;Ty�����&#x1a;��&#xc;�d�B&#x1b;������&#x1b;O���&#x0;u�&#xd;��?Ս�@J6(�&#x11;(��3�3����&#x0;��k$%k2�&#xd;!&#x1d;a;��&#x7f;��	9&#xd;a�����A1���Z�CN}z�J�Z�U��u&amp;&#x1b;&#x1d;1�}�+��Hvú/Э�&#x6;�&#x6;�6�.��7t&#xb;3��ݳ�0�-҄r$_*&#x17;yG-��=�O�&#x1b;&#x1a;:�&#xb;i�0�rK�(&#x1d;H����c&apos;&#x1d;�#��xo�?ݮ�݉�ժ�b&#x5;ؐTw&#x6;��&#x5;&#x17;��e�&#x12;��&#x5;tY &#x10;�S��s|=,$c.&#xb;��uڧ�c&#x5;�����&amp;��欘w�y��rx��_��r��`�� ����&#x10;����%�Hg&lt;D)�\N&#x5;�Lcf����/�ao��&#x18;�4�SY��&#x11;%��X�93W�̹b�&#x4;;�(cd��Z&#xc;�&#xf;��+Bq5&#x16;,�x&#x1d;�|l1�eB���h�f�&#x5;��D8&#x7f;&#x1d;O�|i9��&#x1f;J%�����&quot;�&#x15;�?8�����&#x1;!&#x1b;\k�&#x3;����b��&#x8;��@�ꖆ&#xf;kH�*�5�FJ���&#xd;
��V&#xe;O&#x16;24g͐Q&#x17;����-�����.T���F�q��|�9&#x7f;���&#x17;�3ˁ&quot;^^a�ْ߽�έ-����r�&#x16;��e{�(������,f�|�h=��&#x1b;I�U&#xcfe;|�R&quot;A&#xc;J�`&#x1;��&#x1c;ںb^&#x0;&#xd;��k���&#x7f;w&#x4;�_��m/V��&#xc;E�:(&#x0;��D���M\V��&#x1e;�mC�^�џ&gt;���n�g_qݭ���&#x7f;��t�&#x15;�`&#x1f;���&#x1d;9�;&#x15;&#x1d;�&#xe;�����&#x1e;��2&apos;�&#x1e;Q&#xd;
�&#x15;h�&#x7;&#x1f;#e&#x18;�j&#x1e;�&#x1e;	�&#x1f;�i��t�&#x7f;�&apos;��&#x1b;Ǖ&#x1d;Gz��&#x6;��\ҞW듕t8�s�B&#x16;Z]�X9D&#x13;���ys&#xb;)�Y���6Y��&#x15;�t��Û�R������&#x0;tqy�V&#xd;�k���Ύ&#x3;z�&quot;:��:Q&#x7;��۔��0D&#x3a2;X�&#x1f;&#x1a;��&#x2;&#x13;��|�&#xe;�?n��=W�;&#x12;&#x8;�TU����&#x14;ꘄJ&#x1e;�&#x11;����&gt;���$α)�Ne?!%��I�&#x3;!E�s��ZP�}�j�X&#x1f;5���&lt;v��_���&#x15;ermU�#{�N�=��&#xb;t�&#xe;uo��&#xb;��qB��d����&#x6;�]{0�p�&#x7;�ng��z�z�叨��A�&#x1e;��:ғ�4��t��q5��Ɗ�S�wvgZ�oԡ=�C_s��&#x13;4G�,�z�&#x1;�~W�7��ћ�oS�uv�M��t����&#x1d;czԗu�&#x7f;�&#xf;����+�n�j5��F��Z¯�!�� �4��ܫŶ�&#x11;R�,v&#x1e;W���ȝ�&lt;�&#x1f;�@��!w+&#x1d;�8Q�ʧ_tH7�L����4�&#x17;���o��J�0یF&gt;�v7�6ѝ&#x3;--��6���٩�~�A�K&#xf;ު&#xe;&lt;�C�&#x10;&#x13;daA&#x1e;I&#x0;���J�A&#x0;)������Ԕ�&#x13;�E���&#xb;&#x1e;._�I�CK�Ü�A%E�A2�Cّ�&#x7;&#x12;y;?{�*��P��&#x6;�&#x7;`�#��w)#��4&#x3;S-�u&#x1d;�0}�r�&#xe;]	-�&#x15;��/2�6sڨ�w~&#x7f;��頲�Au&amp;қ�z��&#x17;бΦ��g���&#x8;:8b*&#xe;�&#x11;�b5�Qw����z&gt;ŷ!�&#x6;�~��%&#x0;l�O�&#x13;�󊾲�B&#x7;ͳ�&#xf;�yq��,��	&#x1d;����&#x383;�5�h&gt;J�O?�wU��&gt;&#x2;����&#x1e;�+������A��^ޟ&#x3;�l�&apos;|���&#x17;^�c�&#x1b;&gt;z��&#x7bd;���&#xd;
&#xc;&#xc;����r&#xb;Y��j�JJʗ���+@S��N�XLr�BH&#x12;&#x1b;M�jC7�G{#Tg&gt;�)��&#x7f;�Wmrz�[:�/WQ��.q�7�SY����.P&#xe;&#xe;6�����9;mh#&#x12;���U�Z~yl�ժ�6�X�G��&amp;����)b}ڵ&#x5;[�A�a[��#�3�#֕��ރ&apos;(X7��y&#x1;}tZ�����&#x2;�l&#x1c;r��P`��8��?a(p��?��h�H_�Ô���)/�&#x8;�&lt;�A�G&#x1d;�&#x2;�~&gt;&#x7f;��/nG�A�6��@��v@��&#x4;��b9��&#x5;Nʋ��_KsQ���&#x17;&#x7f;�ӥYݦF&#xc;�4���&amp;��&#xe;���&#x10;��5�񿅗{2Q�(�~4&amp;�%&#xe;D�����]&apos;���&quot;�����p���ޯCu�O�nF7y��ӂJ��@����Z�&#xf;s8�u&#x18;]&#x17;6v��]�z&#xb;r�0�o&#x1c;���-���̯q�{�@&#x7f;�Vt��}�&#x17;w&#x1e;&#x19;�����Kt�h�&#x10;&#x12;��I�&#x6;�4&#x7f;��(s��W�ԅ�&#x16;&#x1d;H�&lt;]�v�?$�X!��W&#xf;��n���c��eg��c&#x18;��%��Ŋ��׆tL�ӳ�?���U`&#x1f;XRW��&#xd;
�b-%�e&#x7f;�����SS&#xb;5��7̦��Ok��P=y�Ʒ�P�*#�&#xd;&#xb;�6u,�qxjjN̂&#x1;�_Eáʸ����o��ǎ�&#x3;���L��&#xf;��P��&#xd;
�����&#x1f;�s\�5��X&#x1f;�&#x0;(�Q���9�|X���&#x91;=�N��Q&#xd;MxM���o��\�jO&#x7f;h?&#x7;��&#x17;��&#x1;��R�Έ�A�.��W��I3&#x1b;�t���&#x2;_&#x11;kR����&amp;a�1k:�Xl�&#xd;��&#x18;��p���d8&amp;Ť�&#x19;&#x1c;O&amp;&apos;���M&#x5;z�}/&lt;����x?�r�ǟ���S���i�Z�Z�*�x	���|�o��&#x15;oSBd:�@DQ�㩯�N�V&#x0; A&#x14;�RK���a[�h�ީ�ֿ�^ӏ�K���z�C&#x2;U�(�&#x4;�yR�0�&#x17;&#xd;�e=�z��ĭ����&#x6;�&#x3;��;��j&#x18;&#x3;�GG1�xl�&#x7;&#x1a;cj@��&gt;T&#xd;ҵ&gt;6Ԯ��&#x11;t�&#x7f;ףke�k���v��L�JSIڒĬ��L�&#x8;&#xb;kK�T�&quot;0&amp;�bL&amp;=�&#x7;t(����&#xe;c&#x2;i���&#x1f;nT&amp;��?�P�Mz���&#x0;�&#x6;�l���&#x2;H&#xd;eFE%&#x16;�}W��{{�Q�R&#xf;�&#xc;��h\�s譪B�&#x1d;^&#x3;{&#x13;���=$�MB�*��&#x8;b&#xf;m�Xܚ�,I��-i&amp;���)&#xe;�0)�by&#x6;�1��3�9�&#x2;�{{wB���3c:s�T��&#x17;�pM��Lþ�{�BeO=/��:�-��g����M})���s{:̂;2?&#x17;��rg&#x7;��&#x1f;i�NT񔝇��&#x19;�&#xb;�j�&#xc;�Z�گ��c�b�h�X��.��~�x2�W��T������G�&#x16;���98&#x16;A�	�qbW��B&#x7;��&#x12;��t�%&#x13;�^š&apos;ɗ��C�&#xd;
:T����1y(2��JI������U��:1�WU���O�z`j:`~�&#x3;�K�&#x3;���ӂz�&#x11;f�&#x2;[�Մ*�&#x0;�OT#�&#x1e;����R	r%&#x1e;��&#x18;&#x0;&#xd;��6N x&#x17;ב&#xc;�./E9)�W�tQ���&#xe;g�G��+�K^�&#x11;սK��[���-7���^}��/j[s&#x1e;&#x4;Ǡ������&apos;��?9���}i����YS8��i��]�&#x11;&#xc;O�&#x13;���KO&gt;4�&#x13;9V;��V�o=�Y&#x1d;�?9A�&#xd;
3z��Sr!�#U=���kcʬ�&#x1e;�;&amp;t*�&#xf;���JJ&#xb;�/7�c/덭�f�J�&#x7f;&quot;�b:����j&#x7f;;�������흖�g;&#x1d;x�C2�����NZXo&#x1b;���c&#x17;]NGt_S��B��r&#x7;�a&#xd;
�K�&#xd;��&#x14;:I�&#x3;����&#x8;\�tp&lt;�G�~�S��y�*�6�A�&#xd;-��N���o��su]B�y��N��&quot;��&#x2;�и&#x18;Z ͡���pk_�=��ѽ���s&#x5;�2���4&#x7bb;�qA�4^�&#x1a;{:-!�5tY�KO���n�e&#x1d;����y�&#x8;4�i�&#x7f;��&#x3;��&#x1a;}&lt;&#x1f;;���Ko&#x1f;ۮ�#��&#x16;���u&#x1e;&#x1c;Ay�;d&#x14;�Ƿ�C�۞�&#xd;
��j.�&#x1c;�R�&quot;{�p+�&#x2;�P�����.�-@��&#xf;�w^&#x2;�ҫSJ��_��&#x16;_�]ql���&lt;g��&#xc;�hw&#x1f;�&#x7;�MC�D�Q�&#x0;�V&#x0;�2�_��F��G4yEKx�vf�)&#x3;�bע�s4~M�\����dشj0�N�tb=�#�&#xd;
�0�9&#x1a;�&#x1d;Ư&#x1;&#x1c;&#xc;-�a{i&#xf;+^Z(��o&#xc;*؟&#x1e;Y��z&#x1c;&#x5;[Ӂ��#ø~\1�=a(.���W�&#x0;�ޝ�&#x16;��Fh�G�&#x7;�u&#x0;?�r&#x11;�yy���)9F]+&#x1f;b�q%J��|&#x17;&#x1f;&#x1f;��&#x1d;2&#x1f;��&#x18;�j�ܼ	��P��&#x11;/�q�N��h������&#xc;��u����Ȳ=}Pق1�g&#x5;QB��+&#x5;�v%��(�R�{�&#x11;&#xd;��4�&#xd;
:��?@s��&amp;�9&#x2;K���Y_�&#x17;}��[�&#x19;#:�&gt;f������S_&#x1e;���&#x13;:F�Z&#x0;��.��&#x1;j��Zl&#x19;&#x1d;l7]s���c[&#x1e;x�����pHOD��y�����&#x19;�&#x17;�9�+϶���&#x6;=&#x0;�]5�&#xf;ɰ&#x1d;������4ik����h���&#x7;�wǂ��x&#x1d;T&#x13;}P��h�FN��Gb�&#xe;���V,~X����X܀�^��&#xf;�&amp;/Y��G&#x1c;��Z�_u7g�D;�}�]ʤ��g&#x1b;E�{CA��&#x7be;�&#xd;
��g&#x1b;��߇���p�c_U��?�(*�]g����&#xe;P�ӌ�&gt;�L�@&#x17;2&#x3;%&#x4;&#x1b;&#x14;�&#x8;&#x12;���܁a48��\�&#x7f;RV���&#x1e;��Ι�R7̜)�敍&#x16;�1�LiQ&#x19;h�ԗ;�m�9Sڪ�tΔ&#x16;�!�LiA&#x19;yΔ&#x16;�9g��&#xf;s��R&#x1f;朩/kz��&#x5;���QN&#x1e;�B&#x1d;�۱�wt�D��&#x18;E&#x10;���D�mΜ�}w�gհs&#x4;&#x7f;J&#x19;�&#x1d;�����&#x1a;�l���&#x13;E��s��B&lt;=џk�3g�M�hݍ�Ι�&#x2;1̜��h�mƜ�1g���&#x7f;�мB�f�&#xf;�W��w7� _WT��S�Gj��&#xb;&#x2;ݤ�&#x1a;r�&gt;�5o�&#x12;_�ٴ��P���&#x1d;�I9^�&#xb;:��&#x1f;�&#xd;��Մr���m����_�Հw&#xe;ӝ��&#x1f;�2�s�*&#x1a;�E�TM�W�G���G�&#x4;]b?�&#x2;�G:Y-�&#xe;��:�?�&#x1a;u���&#x1f;C#?T&#x13;�W�&#x19;;R�߯���u&#x1f;��ͱ6�&#x13;�;Q&#x11;�2�&#x19;�Ai��&#xf;�&#x7f;&#x1d;��v&quot;��6�Cۣ҆&#x10;�3��g&quot;&quot;O�!ӿi\�&#x13;�=&#x7;	�EXv�(����&#x1a;f����P҉&#xb;&#x3;&#x7;��Q��zgT&#x7;XZ�h�	:�y��l�&#x19;�uZ�$�m�&#x1c;�����W��I��8Li��E��ߣ�Vq���������&#x1;�3Zi�v��&quot;ƺ�� �Ӏ�{�&#x6;��	�2&#xf;@�%&#xd;
&lt;���&#x17;�&#x1;��&#x0;��&#x0;N�5�J&#xc;��S&#x10;@��$J�&#x1c;�MZ&#x7f;�!�&#x5;��&lt;7D�p�:2ѣ���䴾C��x{ۢÆF�~3r��o&#x19;��&#xe;��&lt;���ha~l&#x0;&#x15;���*��´UT��&#xc;SU��.���c���LVt�P����mJn~tP��&#x1c;l&gt;���m��N&#x7f;o_�o����bn�v�d4|x^�f�N��ԾM��v�&#x16;m�&#x5;#�n��&#xe;&#x17;&#x4;���]���.&#x1c;�O;�m�v1i�8��9�R�&#x4;*Y�?=��z�ɧ�&lt;�N&#x13;�;��K{��I��F�&#x16;�!��7��g�&apos;�w�;&#x6;&#x17;Y�(��8�cp&#x6;�N�����`��I��t1�O��&#x5;�bdzR�&gt;��E&#x7f;z/N�ӓ��iN�R{�ӓ��t���:�f�&#x7; &#x1d;��&#x5;&#xd;
��6Z=�&#xe;o�6-審��&#x17;��������&#x18;����O���&apos;w&gt;&#xc;�x��&#x7f;�ji^��j.&#x10;��-Vx	����3���&#x10;��|&#x1a;н	u�3r�&amp;߁�o������&#x13;&lt;j��L(&#x18;�U��SS��&#x1b;2�&#xe;&#x7f;&quot;&#x12;�&#x3;�&#x10;	&#x13;�&#x7;�W�3�{W�������c�l��Jژc����F�zc�C��8�*�rz2&#x4;^&#x16;Щ�&#x15;�Ӭ��)��L3��ˤ�&#x16;�Js&#x1c;��D��!�z��e]&#xe;���XT�&#x4;EY��m��N���i&#xf;˰��q��:�q��&apos;�vl&#x1c;{&#xc;q�q�&#x1c;�p&#x10;�n�X&#x1e;L-�*v�N����{�&#x1d;[��;��ރ:G&#x12;���5~5�i�&#x0;�&#x14;��k&#x17;&#x1;�`&#x7f;&lt;&#x18;م&#x11;�a&#x16;&#x1;Y&#x0;$���?%�_�;-��7Rh� Z?=)��/ĩ=V&#x1b;��Ja�&#x1e;��ھo�}#_F�=��4�L�DƆ�lId&#x17;��ӓ@o���&#x1b;&#x1c;����s��&#x4;-����|���C�&#x19;��&lt;�&#x13;�|���؞�T%&#xe;����X̷��Y&#x1;&#x7f;���T���L�&apos;�&#x1d;�f-Ŧ�I:�&#x10;�Y2;_������Ƈ����+��&#xd;
kt(��_Y�r��H&#x16;R����f!��T�i�+ ����3E&apos;i[Y]�0�`Q�R�s���l�$Q�J�b&#x1e;�:+�j���Ri&#x1d;��x×ȋ��JY�&#x7;y�&#x1a;��_��&#x5;�&#x5;��/�{���*S��&#x16;&#x18;�	�sV�_���&#x4;���Oz�&#x2;v�S/&#x16;��kE�L��\�/ư2�6��=T�ɲ��4&#x19;&#xf;��Z��&#x2;3_qх�&#x10;N��l]d#	l�Y(T��P�S&#xe;%����m�����W�ѥ�/&#x11;��t��@/�V�k�hn�&#x14;��Ku��O%�&quot;Y�{�1&amp;&#x15;]��&#x4;�\���&#x11;�T&#xd;
��f�^L`�&#x16;��Χ�K+���s�&apos;�I.���@��T���&#x13;q�]�Vr�%��QXL�&#x1d;��ju��Z�褳&#x1a;)Z�5.��&#x1c;U_�L&#xd;
�t*&#x17;�%�9�0�i��뫕H��^��Xz&#x6;[J��j�1��T!&#x18;hE&#xb;E:S��Wk�h��:9��˔�D�G3���M&#x10;�uOm5��Z��3�U$��*��	�Ru&lt;����&apos;-���x&lt;*�\� &#x17;�,�Af��2�Ź�f: ���\j�&#x16;�&#x10;�J�%�*Eɹ�^/�I�M�K��%�Pdܥ��a&#xf;6��l!����W+V7Q#�&#x19;�m/��dm�@�1�E�j��&#xf;�)�Z�,�ޠ/\\J&#x15;&#x1b;�Z��&#x14;&#x16;�9o]J&#xd;
��C�_�[n�&#x1d;��b�������&#x1c;G��V1ٌ���H9n���&#x15;��&apos;y��&#x0;�&#xb;փ�&#x15;n��xf	b��f92&#x13;���V��&gt;��&#x18;�q�w�8�&#x18;Q��n���5/&#x1b;���v���G��Ω�1-[���A������Ǐ��ngW&#x1d;�X���]~��l=���u7i� D���kݾ�˛�H|�,&#xd;
&#x15;��c�(���N�~X���Z&apos;1�!Y�°=x��%&#x19;�f!�I�B�h��H㜅`S8�&amp;&#x18;�&quot;��I�«�&#xb;��8���&apos;ۿ�&apos;7��&amp;V�|��7�&#x15;+�r�&#x7f;n���y~�p��/��oѠyr�&amp;w�0zXGD��*F͵��(g]ǒ�����&#x5;:��U�&lt;����&#x16;�&#x5;gr)�&#x16;_N�&#x1b;L�T���_����e騺c2&#x1f;X�aU_:o��Q&lt;�O�stv�oI6W�U��2�\�\&#xb;Tn�rp�&#x4;&#x13;K�[&#xc;7�S�鼫\k��&#x17;�UjuM`&#x19;~��&#x17;[\�&#x10;]��&#x11;,��&quot;����l�oc���l��N&#x16;�a),ZٕZ�&#x11;[+�\=5ך�-\����*a_&#x14;Ź��C����&#x2;�$`3�T�67W�F|�&#x5;�J��g�&#x18;�Z)��Յ�����{��3�c�@��C3&#x16;�չf��Ә�&#x1c;p:�l�YZ&#x8;2�p�*X��&#x1e;Ғ�&#xd;
ՙժ�J��&#x18;�0+y�x,I��&#x1a;F&#x11;˖��zh�ZrP�|���&#x14;\+%&#xb;a�N&#x6;0;S��qߜee.�����F�B��59���&#x12;x�qD=�u��h�A���q&#xf;m+IŠ7@ۊ&#xe;&lt;�	\�M�1�&#x13;+vǜ&#x7f;��Zm�&#x17;2|j&gt;��&#x1d;.�3�:&#xb;��&#x3;[�d�Ѫ�h)U&#x16;��k6N&amp;Ó�R���&#xf;&#x17;�|�T\�&#x4;�T���&#xb;s��l�&#x1b;jd�aN&quot;cI�bJO��;��&#x1d;�=��v����&#x7;���E&#x3;��_\fݳ�2#ٖ���+&#x1d;�^&#xd;~��5@.��C5��ů&#x5ed;��*W�d&#x17;�Kng�&#xe;V��ƚߥ�&#x0;�p�n&#x1b;��S�^&#x16;u�,KS8�Yi�B�C�E9&apos;;Շw�Znl�&#x4;���&#x1c;�٫&#x1e;���\�|��&#x5;0�M&#xe;�UVH���۝�t�����;w�n&apos;8�/&#x16;�����?����}d3������u��Foe }T+&#x3;���m���zd��e#�7&#x4;{��&lt;�[���M�=���&#x1c;�Ǽй��&#x1e;p��e���JVo/í&quot;���F&#x6;���&#x8;,�d��mg�U$��Rɀ�=؇���bBKs([L�CC��o1�ݯ(»�&#xf;�-��݆�ީ��q���s�q��N�8���e�&#x5;�{X�k&#x1c;�j���&quot;�N&#x7;��&#x7f;x�-GF��&#x13;��l}v&gt;�&#x13;�t�J���ϸ&#x1b;eX��\W�~&#xd;&lt;����@,�vDx�8Iy_�&#x7;&#xf;����O&#x17;�&#xc;&#x1a;��&lt;���G��N&#xf;kJ&#x7;�w(ጳ�D�&#x1d;�6���:�:����&#xb;��&#xb;���=�\���w��?0��7M&#x16;q&quot;k&#xf;����;�5���tT&#xc;Ԋ�|�+� �UI&#x14;\\�+�y�&#xd;
�&#xc;&#xf;�Uk&#x12;�`m��&#x11;��&#x15;�&#x11;�$4[�&#x11;[���(4[�&#x11;[�Q�,��:������&#x1a;�&#xd;x�B&#x16;&#x10;��}��ؔ�2�TR��-�J�$G��&#x19;UP��&#x16;��&amp;���&#xd;
k^�V\&#xd;.m��w�ll���&#x1c;Ғ�X+�e_�0@&#xe;&gt;���e���J�~=&gt;�&#x1d;&#x7f;&#x1f;jn�C��&#x1e;~ݕZ��^�&quot;YH&#x1f;��]&#xd;&#x15;k&#x18;�\�,/��&#x16;�m�b�k�k&#x18;;�&#x14;w��:��!���f��Z���Zm��&#x1d;�T�pU3���ٽ\]#��49S�m�\��/����w&#x17;�����l�;T�U&#x18;O&gt;˭ǜ���&#x2;g&#xb;&#x5;ݕ�%ME��t1Q�&#x16;�QO�AZ���R^�5���o�H��$����&#x4;1;+��J�X�]�&#x14;�K&#xb;���7Q��s��J&gt;&#x15;̆�Dk~�!&#xd;
Vk#E&#x15;Z���&#x17;s���g&lt;&#x1e;&lt;��[+�a��Lj�|������?Q�&apos;&#x12;��&#x16;&#x11;���w&#x7;�����יp&quot;&#x1a;�7D�@��»3�x(̔���*9�^���܄}��q��n&#xf;�Ms�56��Ɯd��{&#x1e;&#xb;&apos;l���$+L�.Y���Z��;̯G|n{�&#xb;�,��\yN�u��Ca�[X��y�&#x1c;&gt;��&#x2;������Z	���F6&apos;��,�����rdw[�V{*�_�&#x14;�ug�17�KY&#x17;��&#x19;��T&#x17;�Y������x�&#x11;�r�݅eV�09O,Z�W��|ގew;[&#x19;kei�%�&apos;RhV��P���)�K&#xb;n�m�t`�Ŝ&#xd;o�&#x17;���3e&amp;�s��Z!���dV��j�&#x11;�=?&#x1b;��&#x6;���oAZ�bk��[&#xd;
��Ԙ�`��&#x14;]&#x8;��ں���X�z�7�)�4�Ku&#x1a;]�C�3z5���cc&#x17;�nt=�&#x1b;�s�̶ލ�R�&#x5;�-��-h,�vO��&#x1f;��t���&#x1d;��#m�]&#x1e;�&#x1e;*-��~���d2I�$Ŧ-�5MXHΚ��t���V[�L&#x11;i&#x6;���zpS*��u��rlQ&#x7;&#x9f;���i}�&gt;��M&#x1d;W1�Ӭ:b�|+6�.&#x16;R͍s3�����,iKf,&lt;��ZH�FY�Y��gx�MsV�I�r&#x16;��nB��sz&#x18;�]u��~Z76Z���o��#��瞦���m��5�ʩ(�4H�Bz�&#x1a;�?~:�Zu�&lt;�B��&#x17;2bW���D��fx&#xb;���&#x16;2m%-I��-�$nM3&#x14;����&#xd;��{�`�&#x15;�zONw7�&#x15;5M�&amp;n�䊩Z&#x11;}�c�&amp;_��&amp;�&#xc;���&#x19;��s�����a�kg�NX��&#xe;)�fe�&#x1c;��uAz��ص*�/�����oou����J��&apos;�C��j�=�@ެ�c�`J]��^�n,&#x1c;�fj&#xd;
�P�G`ɞ�\�sh&#x1c;:�OJ��&#x4;n�*�{4=~��&#x1e;I+�&#xf;,���~&gt;��ez&gt;���vt�!.�G�-�=ݩ&#x17;�&#x1f;�zh���I7��u�t��L}&amp;��b&#x1e;uP���؞1�Kg(K.��� YE���I����b&gt;�&#x3;��G]z�/�/��5�2�&#xb;;��T*�= �#����&#x14;�hM�&#x7f;d�V���Lʚ�P�&#xc;m!&#x19;؍��S&#x16;���X2�&quot;	���h�h���&#x1e;�bg������&#x16;���Z&#x18;7�$(&apos;�&#x13;v&#x5f5;z�z�&#x1;��Q�4�nOH��&#x3;&#x17;����37}�ʧN}�Չ/~&#x3;�ۦN	�v,!:e������Ԕ�2_��jUtL&#x8;�B�cC�&#x11;��ť=G�o&#x7f;B�m&#x1b;a�ݑ۴^��ש��&#x17;��cЖu&#x4;���~�:;��&#x1d;�mQ��Ͻx[�&#x1d;{+���?�M��&#x10;�@�Cʧ�2��)N@�q�aI��)�&#x2;o.�\&#x11;iE:�&#x1a;5jt��&#x1c;&#x17;?��a�N6�Md�&lt;���&#x9c;%i�$#b0&#x19;L���&#x15;�Sn&#x4;�-1J�q++����|-��_d-bLd+���B3&#xb;�,R&#x19;�p���E!&#x12;Y�&#x17;J&#xe;�3&gt;�b&#xb;��b���,��%�^���˞�u&gt;^h,6Xֽ&#x16;��U�k.�X&#xf;��e6;��&#x5;��]�[�:��+��6�k&#x19;#MX&#x10;���~;�L��&gt;&#x3;&#x13;��$�91FK����/��_�&#x7;+��7ֹg&#xf;�~�7�8���&#xb;�|�&amp;��?��æҙfu|c��u�&#x1f;&#x17;��~N!^�&#xb;�*&apos;�x�B&#xe;�W����&#x0;d����{���|��s���&#x1d;_&#x18;&#x1f;k�w)J�#*��^����EJ�}�Iy�&#x1b;�jŪ&#xf;�92�z��uH?��&#x1b;�mg�&#x2;&#x1d;�����|�)��&#x14;�|m��l��ix�&#x2;�[&#xd;
0r���)QR^f�2��&quot;�z��TQi�^_s0�m=�I�t���]9�fچ���k&#x12;�q�CW-����s]���wj�&#x7f;hGo���&gt;u{�\�&#xf;����j�+�����M��ǅ��&gt;��&#x3;&#x11;&#x13;jɒ�R&#xf;��8goQ�Z&gt;&amp;.��&amp;&apos;W�V�&#x1a;]�ؒO\���YF�&#x5ec;ssq���Z�&#xe;�Ur�a�kn&amp;)4	+N&#x16;�Y�j��y�LtźDa���&#x1e;�&#xd;
�H�:&#x13;#&#x13;��&#x1c;���I�&#x1c;B�*:&#x2;���R�&#x16;&#x19;qg��Y&#xe;_J��X�j&#x5;&#x2;�V�1&#x1b;q�񅄐^�������&gt;��,E��=��R&#x5;����p��f%|!&#x19;v0x�aW�e&#xf;��V�6�X��ʍ�&#xc;�+ϭT&#x2;��5:�kX&#x17;�k����]&gt;���þ�L�BYc�e+ɸ�&#x18;�lƒ�&quot;_�,�.�g��&#x16;S[m��Ŋ]����8&#x16;&#xb;�W&#x1b;NK,�&#x12;&quot;&#x1b;,�ϔ�Q�|6&#x13;�&#x16;�lF&#x14;��f�2CE�q�&#x19;�7c�#��;�_�d�����p�Ys��R�&#x11;�W-�p����&#x1;��X&#xc;�gg&#x16;1���{&#xd;
a�J&#xe;&apos;��Tc�[&amp;&#x16;�+�+&#x18;&#x1f;	[µ�r&quot;��&quot;l`��&#xc;��|%6A0�P��&lt;��p�&#x1f;&#x1c;p��&#xf;.{su\�&gt;��\V�&#xc;n)9!�&#xf;��&#x13;&#x1d;��d�&#x1d;�_��elS�&#xb;&#x1d;���_&#x7f;&#xb;�&apos;&#x17;��^�������o��T�E�_�&#x19;4&#xf;��+�X���X&#x1f;&#x14;�R&#x7;�O^}��&#x19;|�~�&#x15;�3&#xf;�&#x1b;���K���a[5�&#x18;&#x16;+q�+�&#x15;˶�@^�Ά�&#x8;r�&#xf;��m�Б�A��ݱ�y�&#x10;Kr&lt;Qk��8d��z=l����C9��;����R0Ѓq,G&amp;Si��,�&#x14;FY�&#x14;��$����%�T���,G�{����&#x1b;.&#x10;�m&#xc;�&#x1a;T٩$&#x2;��M~�.��&#x13;�&#xb;�&quot;4��Qi�&#x2;�SrH�&#x15;�G&#x95;������ĶM��z�@&#x5;L�P&apos;M�t�il��N&#x1c;ǁIU�8i��q��M;X��v�$Ϳ&amp;MR����e&#x7;$$.&#x8;&#x1;ℸ!q&#x4;	!&#x4;&#x1a;*&#x12;\����vۉ&#x13;\��4q���+U[�K,�g��{y�{�}���^�&quot;�&#xb;7�Տv&#x16;E?&#x3;��x�&#x1a;&#xf;\��&#x14;&#xd;\�f��!�&amp;&#xd;
��3	4&#x14;e�4����ΐ�e�8)�&#x8;��N&#x7;�&#x7;&#x1c;LhF&#x14;f�6!k�����!k�?���Q�:}�&gt;��&amp;�&#xd;e&#xb;(���a�eΚK�۔z�&#x1b;&#xc;]��&#x5;��&#x5cf;.�K�r�T,ˋ?�.��SQA|��&#x15;Ð�Q&#x2;\��?&#x590;�b��7ڥE&#x7f;�&#x15;F��2���c�P�ݖ��?�)b��H6&#x12;c�u��/`�&apos;l�9��o1�x�{�ð� �&#x1b;�&#x12;&#x4;2jz&#x1;1��$�@&#x16;�J&#x10;֔&#xd;�m6yR��$�N;2(�����-�&#xc;iW@ �Ny&#x1d;�&#x7;G	��D	�cG)�&#xb;C����\^��ކ�ؗ��q�@&#x4;�V�@�:� �Q�ۚ&#xe;G�95&#x16;}G+�h|��ҧ&#x10;��&#xf;�G�}��&#x12;PJ�&gt;�L���&#xb;e�i��|!�Vs&#xb;�5K&#xb;�&#x7;*�X���5&#x6;u,��LJ&#xd;
	ٜ+d�tg&#x1d;-��Y�z&lt;B��&#x5;Kj�Y�&lt;�&#x16;���۪�M��9&#x1b;�&apos;	1Ќ�&#x1c;��ÿ���J#2;�&amp;S&#xb;%��b3Ҏ�+b�&apos;��&#xd;��&#x12;l�&#x7;�&#x1f;���Ɯ&#x2;!���T&#x7f;M��)��Uj�����EԮ&#x0;����&#x1d;&#x1c;Z&#x3;&#x8;~�X����Ǔ�S2y�n��q	��ƅx����(�)�VZl9���X2Bs4����l,�&#x12;&#x5;&#x1c;�6���F ǯ��&#x1b;h!&#x10;&#xd;
&#x16;&#x3;)�&apos;���5�R��z&#xb;�&apos;��j���L�#�i�?�N���&#x6;˳��d�iPͫ�T\_]�w����&#x1e;�:�&#x16;ckq��&#x5;�!&#x4;CW�&#x2;i�(&#x1b;N�q+NQִ֫�#?5k�rZ��� pʆQ&#x18;&#xe;ޠY��&#x5;��~�&#xe;w�w���&#x14;&lt;��&#xf;�j&#xd;&#x11;d��&#xc;�&amp;&#xc;ޑoX�&#xd;
�&#xd;
����� &#x1b;�&#xc;� n�&apos;ݷ���o,�&#x7;1=�sj4,�������&#x2;z&#x1d;&gt;:B�瀚&#x17;�&#x15;�6�e&#x1a;��Ox,�&#x6;�U&#x7f;�v&lt;��&#x6;����&gt;�t�&#x7b9;��N�&#x7;]I�#&#xd;
�y}R%��tl5&#x1d;��U��Jl�&#x4;�&#xc;&#x1;ڔ&#xb;`{�(�ef&apos;&#x11;�&#x4;������&#x15;DcJ&#xd;&#x8;�Q֞&#x13;]�怼ZT���&#x10;�^B̥�1��L�&amp;՛&#x1a;-n�T�&#x8;6&#xc;�E�&lt;��Z�&#x1d;ï�&#x1a;5}ص3�wX&#xd;&#x1e;/|�,#��[��&#x5;k���#��#�� ���4c&#xd;�Z���&lt;w�?��/o&#xffbf;��k&#x5fc;&#x1f;�@��h&#xf;&#x7f;������c&#x2;$&#xb;`&gt;�It	��) 0!�B����&#xf;&#x1e;�&#x7f;�p��|X��Q�w!&#x2;�Ѿ��&#xe;{��&#x1;&#x2;&#x19;�hLI�����5)��&#x2;�t&#x15;^4��.�&#x12;�&#x1f;�z�Pc�niou�Wz&#x2;�H�N�-&#xe;&#x12;��&#x14;�&#x12;&#x18;��)����C�XD�b�pb&#x16;&amp;�&#x1d;M\c�~���&#x8;�]S}Fe���kT��\mr&#x3;Ȃ���&#xd;a���zJj��|�Pz&#x1a;R�ܤ�ٚ�&#x1a;W�G����f�0I`&#x12;܇H�hJ�~�ӛ�B��&#x3;a_�y����&#x1f;��HbD`WR5es�3]&#x3;(2��8s1��x�&#xb;�-���e�(b���&gt;�=;���!��&lt;~��y�;&#x7;�kp�[Нdi.�ƒ�%Ɲ��&#x3;43��^U����l~���-&#x15;&quot;�bxS�T�&#x10;-TV�r��%\�z�&#x15;rTfPU~��+���ee&#x14;%��&#x10;&#x1b;�c��&#x10;��C��k��@&#x6;�����@}һ_I&#x1e;L?�8P��&#xf;*ɿ/�0,N�&#x5;&#x0;&#x1;&#x0;(&#x0;&#x0;&#x0;S&#x0;y&#x0;n&#x0;c&#x0;E&#x0;n&#x0;g&#x0;i&#x0;n&#x0;e&#x0;-&#x0;2&#x0;0&#x0;2&#x0;5&#x0;-&#x0;0&#x0;6&#x0;-&#x0;1&#x0;3&#x0;.&#x0;1&#x0;3&#x0;3&#x0;5&#x0;.&#x0;1&#x0;8&#x0;1&#x0;6&#x0;0&#x0;.&#x0;7&#x0;.&#x0;o&#x0;d&#x0;l&#x0;g&#x0;z&#x0;s&#xc;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;EBFGONED&#x3;&#x0;&#x0;&#x0;�&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x1;&#x0;&#x0;&#x0;25.091.0512.0001&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;10.0.22621&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x2;&#xd;
�Y{�#U&#x19;��]�����&#x12;&#x15;�u���L�3my��m������K�LgN۹��G&#x1f;wA&#x10;a&#x1;A1��H����&#x10;@�b&#x8;F&#x14;�A#�h4&#x1b;	&#xb;�&amp;h�d1��&#x1f;�zNgz���{q�f&#x13;N2��w&#x1e;��|�w���x��#&#x4;,��M��&#xe;�8&#x14;!��b&#x4;q&#xf;a�������ޝ�ő��d��;��&#x1f;z&#xf;6#&amp;�&#x13;&#x10;t�T��4j3Y&#x7f;&lt;�&#x3;&#xd;�&#x3;ŐE��U%�*-�U�4)6�g�nW�^v&#xf;�o��}�����&#xd;
�b��E&#x1b;�0�x�F�ޥ,s˷&#xe;o��b&#xf;&#x7f;�8w&#x5ff;�^El��O�&apos;�V�͆*H@c&#x10;&amp;r&#x13;A�7D���W@0�ZL�&#x0;A�&#x12;�&#x7b8;�ޟ��?a�!�&#x19;�d�&#x17;N�ځA��-&#x4;�k&#x4;I�&#x3;D�&#x0;�&#x18;T&#x17;�&#x1a;�u(�ݰY���a�*+�d(�MR&#x1c;I�&amp;i��?&#x1e;��&amp;�IUj� �w�i����vW�L���x�ۇ�]�W&#x4;Vv�&#xd;&#x4;�sDv&#x19;�T5#k&#x8;&#x6;�U&#x12;&#x0;H@��&#x7f;&#x13;�&#x17;&#x19;�:���~��Xo{��&#x1;8&#x6;�zp&#x0;e�M&#x10;�C���9�Ƴϟ����?�a��+oc����&#x4;��&#xd;�\MS&#xd;�&#x1;��&amp;(z&#x5;h:�z�VKꣵ}�~E&#xd;
6���[Ĕ�J&#xc;�;�Z�����1�&#x1e;�&lt;�g4���&#x13;�����PE=P��&#x2;ܽ���A�i�&#x5;�(&#x1d;�&#x19;�)8&#x4;�W&#x1e;{�7&#x7f;?&#x7f;Ͻ����&#x13;����&#x7f;h��g�gV��&#x0;�&#x11;�uJU&#x1b;&#x8;�n(�ό�����d}n[�����!&#x4;��&#x8;�e��FK�&#x8;AP�@�:f&#x4;�&#x6;�&#x13;B��o�:�/*(&#x12;�&#x5;|z��&#xf;3�c�_r��� ��&gt;1&#x7;&#x1a;`&#x11;&#x18;Z&#x17;qVሟ&#x1d;����&#x15;�&quot;h��a&#xd;�&#x1d;&#xc;�7�|	1=�&#x1e;�/&#x1a;rK6���D(d��4�����&#x14;�*&#x6;j�&#x14;�,ST5�&#x7;&amp;��&quot;��J&#x15;����&#xc;��&#x1;&#x16;���A�o&#xc;�&#x1f;n�4��]&#x7f; &#x4;����S&#x3;4��f&#x18;�	J&#x15;�.&#x1e;,�&#x99;l,�+e�&#x12;�R.9&#x1d;N��k)�&#x12;�x&#x1c;�C���r&#x6;2,�&#x10;�Н�&#x8;�P��&#x5;�t�VATp��:T���Pm���fe��S�Z&#x7;&#xd;
��&#x8;Os�P��&#x1b;]��q�i&#x1a;��&#x1e;�ǌ�%q.��Ms&lt;�=&#x1e;��U�� u\7X&#x17;��{���My(&#x1a;�&#x8;� ���[6&#x6;�h/|&#xb;�{TD̡&#x1;s�	P�)�&#x0;�$Q&#x1f;��B]�(&#x5;��f�&#x2;j���y�,�&#x3;O���ʗ�&#x1f;�ܼ_�~���=�a�oE0���&quot;�V�&#xf;`�&#x13;S�bg�:�&#x0;OT�u. ���P������W\�9&gt;&#x6;�;�:G�2#�J\U���&#x8;F&#x17;�K��&#xb;&#x1f;��&#x12;7C��&#xc;�&#x12;��&#x2;�;�eɨ��E��&#x2;À�A��Z&#x8;�d&#x11;&#x10;c&#xd;
&#xe;��&amp;�&#x3;�J��fH?��T�-TQ��7%�@�\&#x13;��:X�z��&#x14;(�j���&#x7;�T8��&lt;��L	$K1&#x14;|sK$&#x10;%�u&#x1;�&#x7;�&#xd;
����߷&#x3;���R��&#x4;q&#x1c;e�&#xb;�&#x19;�F�&#xe;�MR0P�0�$C�,�Ѕ�GR�`&#xd;
�&#x8;S�E��xIF(S$+�YR�A�d�&#x1c;�D���e�.�xďO~ᙧ��iU%&#x1a;�U�Ң�̑BY&#x4;��g8��rpP@S&#x1c;�r&#x1;���&#xf;2��8,o��+&#xb;���_nQ?��&#x6;&gt;&#x17;���r&lt;B&#x19;�R�&#x18;���Y�&#x7;_�ͱ�������`܇��ک��Ƭ��J�`t%��z�kAV�C���&#xd;�$K�]78��`P&apos;���&#x13;� �M&#x18;&#x1;!�b��b.&#x2;���&#xe;DL�&#x10;��c��0&#x7f;�&apos;&#x17;����YQP&#x14;�h&#x7;��g&#x7;���&#x18;,�4�gn�&lt;&gt;��{���	�e?���&#xf;��&#x1e;H?wL�J\��m�&#xf;�a�&#x0;&lt;mE@+$&#x16;uf��5���U��j�43&#x5cc;��e���H?g&amp;�hO�8&#x1b;��&#x16;;&#x1f;q&#x15;�p7�V�nTZ23,&#x13;��iWȨ��&#x10;�3�����Y��zC�D4U3&#x17;��:�G;˴W&#xd;�&#x1a;^���U�U&#x8;&#x6;ⵌ�M%�z����XNj���z#&#x17;�&#xd;���&#x1c;՛�B7&#x16;Z�:U�&#x1e;S�Qw�*���5&#xf;?_k���ٺ\�&#x14;��T�^�kJk^&#x16;&#x13;f�&#xc;���Ufc�@��gUzj!J&#x19;33�n�_���&#x6;�&#x0;ŒYt&amp;k,�.��XɌ�JsҲ+&#x1b;�����r��Ͷ�t)�mwT�Υ�igE�M��E.&#x19;7�閙kՊa��&#x19;�&#x3;��p����i�3+R� [h;�t����&#xd;
_��B[#�Xz)�v�A+&#x1b;&#xd;�u!m��L�&#x19;צ&#x3;��3��&#x8;�&#x5;�O�q&amp;ي�g:�H�I驖(t�5���4�.x݁��lS~x���uw+X	ħ�&quot;��:y��&#x1b;�F5&#x1a;��c�(�x%^�:�s&#x1e;-��&quot;����K�Β,��3�\��b&gt;�&#x0;ьd�]}�����]��e�&#x1;�&#x1c;&#x1b;������&#x1a;r۹�ɗk&#x1;�j֥�\�,0ICꤝ��=Ԍ0��f��VXJ�5�Z&#x1a;�[7�b�n&#x14;s�&#x19;5b���r���p&#x7f;l�&#x1f;&#x1b;�	a�&apos;±�D:&#x1a;&#xd;�?��&#xd;
����~$�PE�a��h{||�&#x15;�ď�����&#x1d;3@7&#x1b;���mu�/���j8@݁�/��G�&#x14;Qs\���Z�#N�l�� =x��L*&#x1e;΅w��5&#x10;&#x0;&#xc;&#x2;&#x13;&quot;�`&#x1f;5Pt���&#xd;`��{�@&#x14;ۧ� Y+��&#x3;q+&#x6;�&#x3;��ۡ5�0�6X���,L/Q�W4x&#x8;UD�&#x1;�,�4Ja&#x1;&#x4;�:�b��@&gt;��6C&apos;�&#xc;��{&#x1c;&#x6;XǤ&#x1d;.�u�?�J;�EXw=�i�/&#xf;��&#xb;%�IU~pۅ�cC����{8?�6ǥG�y�1&lt;&#x1f;pǷ&#x1d;#=��NH�#=�6��&#x1d;&#x1d;��O���^����&#xe;�z�����O/O��V��-�&#x2;�1��&#x16;m��[�Jvz���&#x17;�5У �&quot;���&#x0;��$&#x18;&#x16;�&#xf;�&#x1;8&#x7f;�.�^&#xc;�}K&#x12;&#x16;�~��&#xd;
��@&#x3;.H�G̩!Yo�+-�m���B&#x1a;�E�+˒����!&#x11;&#xd;
���g&#x1b;��[��ߋ�s��Ȋ�׀�&#x18;4�a&#x0;��&#x2;p`��K��Y���?��&lt;�&gt;���b�T�.�o�iU�ՄfӲ�&#xc;�,�&#x5;��,��&amp;}���&#x15;�G&#x19;&#xe;hg&#x1a;t&#x7f;�&#x1e;&#xb;@�+�=[&#x7f;��G���5�уC&#xb;w�͠c��z�&#x1e;��&quot;=�Đ,_&#x6;�@�&#x15;�M�&#x19;���&#x1e;V�?T�e��82$Շ��g7\vc�έ��&#x4;6U&#x1f;�/|�&#x17;�z�n͡�X�C2�C:9�х%�^��g�6�~&#x15;�&lt;&#x7;x��x9�R�p$KQ&#x14;)H&#x1e;7Y�V&#x18;&#x6;&#x0;��Y�&#x1c;�&amp;����9���Ck��}H�n�g&amp;@&#x1b;Հ \&#x1a;&#x6;���{�&#x1;{)�E(�&#x5;(���e�&#x92;���&quot;�^�E�&#x14;��&#x4;��X�u)&#xe;�6�ᕴ��sӘ�����E�&#x17;�#����&amp;&apos;��&#x13;��&#x8;i&#x1c;��N��&#x13;l6m��V�H%&#xe;	&#xe;��&#x18;&#x4;oo%&#x8;�c&#x7f;�f�.&#x0;M�&#x7f;iw�*��&#x1f;@�&#xd;�*	����u&#x7;�����1��|Q�v&lt;i^�lq��m&#x2;d&#x1d;cg����EZ�&#xf;���.�#&#x0;&#x0;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="x-ms-version" elementType="Header">
                    <stringProp name="Header.name">x-ms-version</stringProp>
                    <stringProp name="Header.value">2024-05-04</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-date" elementType="Header">
                    <stringProp name="Header.name">x-ms-date</stringProp>
                    <stringProp name="Header.value">2025-06-13T13:42:03.0000000Z</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Microsoft SkyDriveSync 25.091.0512.0001 ship; Windows NT 10.0 (22621)</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-blob-type" elementType="Header">
                    <stringProp name="Header.name">x-ms-blob-type</stringProp>
                    <stringProp name="Header.value">BlockBlob</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Place O" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Cart-160" enabled="true">
              <stringProp name="HTTPSampler.domain">ublockorigin.pages.dev</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/patches/2025.6.13.447.patch</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Place Order" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-163" enabled="true">
              <stringProp name="HTTPSampler.domain">content-autofill.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/pages/ChVDaHJvbWUvMTM3LjAuNzE1MS4xMDQSPAmpxBjxaJZqwRIFDZRU-s8SBQ1px8zZEgUNRmcVfRIFDdjg5q4SBQ0QhlklEgUNUQl_TCGoYn8zi32AyxIZCVOP6bRcQpTzEgUNkWGVTiF4xO7fzCNSvw==</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="alt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">alt</stringProp>
                    <stringProp name="Argument.value">proto</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Encode-Response-If-Executable" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Encode-Response-If-Executable</stringProp>
                    <stringProp name="Header.value">base64</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyA2KlwBX3mkFo30om9LUFYQhpqLoa_BNhE</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CJC2yQEIorbJAQipncoBCLGTywEIkqHLAQiSo8sBCIWgzQEI+uzOAQjh8M4BCK/xzgE=</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-162" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/deletecart</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-164" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/deletecart</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;cookie&quot;:&quot;Abdooo56664&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Place Order" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-165" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/index.html</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/cart.html</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-175" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-176" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_constants.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-182" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-181" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/css/fonts/Lato-Regular.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/css/latofonts.css</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-185" enabled="true">
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/index.html</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-186" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/check</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-187" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/entries</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-188" enabled="true">
              <stringProp name="HTTPSampler.domain">hls.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/index.m3u8</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Place Order-189" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/check</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;token&quot;:&quot;QWJkb29vNTY2NjQxNzUwNDIy&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Logout" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-202" enabled="true">
              <stringProp name="HTTPSampler.domain">cdn.jsdelivr.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/gh/foyer-work/cdn-files@latest/merlin_config.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-203" enabled="true">
              <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/entries</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-204" enabled="true">
              <stringProp name="HTTPSampler.domain">hls.demoblaze.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/index.m3u8</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6,de;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;137&quot;, &quot;Chromium&quot;;v=&quot;137&quot;, &quot;Not/A)Brand&quot;;v=&quot;24&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">Logout</stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">F:\Projects\DemoBlazePerformanceTestProject\Logs\DemoBlaze_13-6-2025.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
